{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport _defineProperty from \"C:/Users/uw/Desktop/site/ahmed-khelili-blog/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"C:/Users/uw/Desktop/site/ahmed-khelili-blog/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/uw/Desktop/site/ahmed-khelili-blog/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Fragment, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nexport default function AddCommentForm(_ref) {\n  var blogId = _ref.blogId,\n      parentCommentId = _ref.parentCommentId,\n      firstParentId = _ref.firstParentId;\n\n  var _useState = useState(false),\n      isSending = _useState[0],\n      setIsSending = _useState[1];\n\n  var _useState2 = useState(null),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      errors = _useForm.errors,\n      handleSubmit = _useForm.handleSubmit,\n      reset = _useForm.reset;\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setIsSending(true);\n              data.blogId = blogId;\n              console.log(data);\n\n              if (parentCommentId) {\n                data.parentCommentId = parentCommentId;\n                data.firstParentId = firstParentId;\n              }\n\n              _context.prev = 4;\n              _context.next = 7;\n              return axios.post(\"/api/addComment\", data);\n\n            case 7:\n              res = _context.sent;\n              console.log(res);\n              setIsSending(false);\n              _context.next = 17;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](4);\n              console.log(_context.t0);\n              setError(function (prev) {\n                return _context.t0;\n              });\n              setIsSending(false);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[4, 12]]);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxs(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    className: \"comment-form\",\n    children: [/*#__PURE__*/_jsx(\"input\", _objectSpread({\n      type: \"text\",\n      placeholder: \"Name (Optional)\"\n    }, register(\"name\", {\n      required: false,\n      maxLength: 80\n    }))), /*#__PURE__*/_jsx(\"input\", _objectSpread({\n      type: \"text\",\n      placeholder: \"Email (Optional)\"\n    }, register(\"email\", {\n      required: false,\n      pattern: /^\\S+@\\S+$/i\n    }))), errors && errors.email && /*#__PURE__*/_jsx(\"span\", {\n      children: \"Invalid email\"\n    }), /*#__PURE__*/_jsx(\"textarea\", _objectSpread({\n      placeholder: \"Your Comment\",\n      rows: \"5\"\n    }, register(\"comment\", {\n      required: true,\n      maxLength: 5000\n    }))), errors && errors.comment && /*#__PURE__*/_jsx(\"span\", {\n      children: \"You need to write something\"\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: \"button-input--comment\",\n      children: /*#__PURE__*/_jsx(\"input\", {\n        type: \"submit\",\n        disabled: isSending,\n        value: isSending ? \"Posting...\" : \"Post Comment\"\n      })\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}