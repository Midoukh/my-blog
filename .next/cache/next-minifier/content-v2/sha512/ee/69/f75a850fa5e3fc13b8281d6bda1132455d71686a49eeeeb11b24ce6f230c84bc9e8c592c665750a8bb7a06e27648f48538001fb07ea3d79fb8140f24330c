{"code":"(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[5],{QczR:function(t,e,n){window.eve=n(\"oRA+\");var r=function(t){var e,n={},r=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(t){return setTimeout(t,16,(new Date).getTime()),!0},i=Array.isArray||function(t){return t instanceof Array||\"[object Array]\"==Object.prototype.toString.call(t)},a=0,o=\"M\"+(+new Date).toString(36),s=Date.now||function(){return+new Date},u=function(t){var e=this;if(null==t)return e.s;var n=e.s-t;e.b+=e.dur*n,e.B+=e.dur*n,e.s=t},l=function(t){if(null==t)return this.spd;this.spd=t},c=function(t){var e=this;if(null==t)return e.dur;e.s=e.s*t/e.dur,e.dur=t},h=function(){var e=this;delete n[e.id],e.update(),t(\"mina.stop.\"+e.id,e)},f=function(){var t=this;t.pdif||(delete n[t.id],t.update(),t.pdif=t.get()-t.b)},d=function(){var t=this;t.pdif&&(t.b=t.get()-t.pdif,delete t.pdif,n[t.id]=t,g())},p=function(){var t,e=this;if(i(e.start)){t=[];for(var n=0,r=e.start.length;n<r;n++)t[n]=+e.start[n]+(e.end[n]-e.start[n])*e.easing(e.s)}else t=+e.start+(e.end-e.start)*e.easing(e.s);e.set(t)},g=function(i){if(i){var a=0;for(var o in n)if(n.hasOwnProperty(o)){var s=n[o],u=s.get();a++,s.s=(u-s.b)/(s.dur/s.spd),s.s>=1&&(delete n[o],s.s=1,a--,function(e){setTimeout((function(){t(\"mina.finish.\"+e.id,e)}))}(s)),s.update()}e=!!a&&r(g)}else e||(e=r(g))},v=function(t,e,r,i,s,m,y){var x={id:o+(a++).toString(36),start:t,end:e,b:r,s:0,dur:i-r,spd:1,get:s,set:m,easing:y||v.linear,status:u,speed:l,duration:c,stop:h,pause:f,resume:d,update:p};n[x.id]=x;var b,F=0;for(b in n)if(n.hasOwnProperty(b)&&2==++F)break;return 1==F&&g(),x};return v.time=s,v.getById=function(t){return n[t]||null},v.linear=function(t){return t},v.easeout=function(t){return Math.pow(t,1.7)},v.easein=function(t){return Math.pow(t,.48)},v.easeinout=function(t){if(1==t)return 1;if(0==t)return 0;var e=.48-t/1.04,n=Math.sqrt(.1734+e*e),r=n-e,i=-n-e,a=Math.pow(Math.abs(r),1/3)*(r<0?-1:1)+Math.pow(Math.abs(i),1/3)*(i<0?-1:1)+.5;return 3*(1-a)*a*a+a*a*a},v.backin=function(t){if(1==t)return 1;var e=1.70158;return t*t*((e+1)*t-e)},v.backout=function(t){if(0==t)return 0;var e=1.70158;return(t-=1)*t*((e+1)*t+e)+1},v.elastic=function(t){return t==!!t?t:Math.pow(2,-10*t)*Math.sin((t-.075)*(2*Math.PI)/.3)+1},v.bounce=function(t){var e=7.5625,n=2.75;return t<1/n?e*t*t:t<2/n?e*(t-=1.5/n)*t+.75:t<2.5/n?e*(t-=2.25/n)*t+.9375:e*(t-=2.625/n)*t+.984375},window.mina=v,v}(\"undefined\"==typeof eve?function(){}:eve),i=function(t){function e(t,r){if(t){if(t.nodeType)return X(t);if(S(t,\"array\")&&e.set)return e.set.apply(e,t);if(t instanceof G)return t;if(null==r)try{return X(t=n.doc.querySelector(String(t)))}catch(i){return null}}return new U(t=null==t?\"100%\":t,r=null==r?\"100%\":r)}e.version=\"0.5.1\",e.toString=function(){return\"Snap v\"+this.version},e._={};var n={win:t.window,doc:t.window.document};e._.glob=n;var r=\"hasOwnProperty\",i=String,a=parseFloat,o=parseInt,s=Math,u=s.max,l=s.min,c=s.abs,h=(s.pow,s.PI),f=(s.round,Object.prototype.toString),d=/^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\))\\s*$/i,p=(e._.separator=/[,\\s]+/,/[\\s]*,[\\s]*/),v={hs:1,rg:1},m=/([a-z])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/gi,y=/([rstm])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/gi,x=/(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\\s]*,?[\\s]*/gi,b=0,F=\"S\"+(+new Date).toString(36),C=function(t){return(t&&t.type?t.type:\"\")+F+(b++).toString(36)},w=\"http://www.w3.org/1999/xlink\",B=\"http://www.w3.org/2000/svg\",A={};e.url=function(t){return\"url('#\"+t+\"')\"};function E(t,e){if(e){if(\"#text\"==t&&(t=n.doc.createTextNode(e.text||e[\"#text\"]||\"\")),\"#comment\"==t&&(t=n.doc.createComment(e.text||e[\"#text\"]||\"\")),\"string\"==typeof t&&(t=E(t)),\"string\"==typeof e)return 1==t.nodeType?\"xlink:\"==e.substring(0,6)?t.getAttributeNS(w,e.substring(6)):\"xml:\"==e.substring(0,4)?t.getAttributeNS(B,e.substring(4)):t.getAttribute(e):\"text\"==e?t.nodeValue:null;if(1==t.nodeType){for(var a in e)if(e[r](a)){var o=i(e[a]);o?\"xlink:\"==a.substring(0,6)?t.setAttributeNS(w,a.substring(6),o):\"xml:\"==a.substring(0,4)?t.setAttributeNS(B,a.substring(4),o):t.setAttribute(a,o):t.removeAttribute(a)}}else\"text\"in e&&(t.nodeValue=e.text)}else t=n.doc.createElementNS(B,t);return t}function S(t,e){return\"finite\"==(e=i.prototype.toLowerCase.call(e))?isFinite(t):!(\"array\"!=e||!(t instanceof Array||Array.isArray&&Array.isArray(t)))||(\"null\"==e&&null===t||e==typeof t&&null!==t||\"object\"==e&&t===Object(t)||f.call(t).slice(8,-1).toLowerCase()==e)}function k(t,e){for(var n=0,r=t.length;n<r;n++)if(t[n]===e)return t.push(t.splice(n,1)[0])}function D(t,e,n){return function i(){var a=Array.prototype.slice.call(arguments,0),o=a.join(\"\\u2400\"),s=i.cache=i.cache||{},u=i.count=i.count||[];return s[r](o)?(k(u,o),n?n(s[o]):s[o]):(u.length>=1e3&&delete s[u.shift()],u.push(o),s[o]=t.apply(e,a),n?n(s[o]):s[o])}}function _(t){return t%360*h/180}e._.$=E,e._.id=C,e.format=function(){var t=/\\{([^\\}]+)\\}/g,e=/(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g;return function(n,r){return i(n).replace(t,(function(t,n){return function(t,n,r){var i=r;return n.replace(e,(function(t,e,n,r,a){e=e||r,i&&(e in i&&(i=i[e]),\"function\"==typeof i&&a&&(i=i()))})),i=(null==i||i==r?t:i)+\"\"}(t,n,r)}))}}(),e._.clone=function t(e){if(\"function\"==typeof e||Object(e)!==e)return e;var n=new e.constructor;for(var i in e)e[r](i)&&(n[i]=t(e[i]));return n},e._.cacher=D,e.rad=_,e.deg=function(t){return 180*t/h%360},e.sin=function(t){return s.sin(e.rad(t))},e.tan=function(t){return s.tan(e.rad(t))},e.cos=function(t){return s.cos(e.rad(t))},e.asin=function(t){return e.deg(s.asin(t))},e.acos=function(t){return e.deg(s.acos(t))},e.atan=function(t){return e.deg(s.atan(t))},e.atan2=function(t){return e.deg(s.atan2(t))},e.angle=function t(e,n,r,i,a,o){if(null==a){var u=e-r,l=n-i;return u||l?(180+180*s.atan2(-l,-u)/h+360)%360:0}return t(e,n,a,o)-t(r,i,a,o)},e.len=function(t,n,r,i){return Math.sqrt(e.len2(t,n,r,i))},e.len2=function(t,e,n,r){return(t-n)*(t-n)+(e-r)*(e-r)},e.closestPoint=function(t,e,n){function r(t){var r=t.x-e,i=t.y-n;return r*r+i*i}for(var i,a,o,s,u=t.node,l=u.getTotalLength(),c=l/u.pathSegList.numberOfItems*.125,h=1/0,f=0;f<=l;f+=c)(s=r(o=u.getPointAtLength(f)))<h&&(i=o,a=f,h=s);for(c*=.5;c>.5;){var d,p,g,v,m,y;(g=a-c)>=0&&(m=r(d=u.getPointAtLength(g)))<h?(i=d,a=g,h=m):(v=a+c)<=l&&(y=r(p=u.getPointAtLength(v)))<h?(i=p,a=v,h=y):c*=.5}return i={x:i.x,y:i.y,length:a,distance:Math.sqrt(h)}},e.is=S,e.snapTo=function(t,e,n){if(n=S(n,\"finite\")?n:10,S(t,\"array\")){for(var r=t.length;r--;)if(c(t[r]-e)<=n)return t[r]}else{var i=e%(t=+t);if(i<n)return e-i;if(i>t-n)return e-i+t}return e},e.getRGB=D((function(t){if(!t||(t=i(t)).indexOf(\"-\")+1)return{r:-1,g:-1,b:-1,hex:\"none\",error:1,toString:j};if(\"none\"==t)return{r:-1,g:-1,b:-1,hex:\"none\",toString:j};if(!v[r](t.toLowerCase().substring(0,2))&&\"#\"!=t.charAt()&&(t=T(t)),!t)return{r:-1,g:-1,b:-1,hex:\"none\",error:1,toString:j};var n,c,h,f,g,m,y=t.match(d);return y?(y[2]&&(h=o(y[2].substring(5),16),c=o(y[2].substring(3,5),16),n=o(y[2].substring(1,3),16)),y[3]&&(h=o((g=y[3].charAt(3))+g,16),c=o((g=y[3].charAt(2))+g,16),n=o((g=y[3].charAt(1))+g,16)),y[4]&&(m=y[4].split(p),n=a(m[0]),\"%\"==m[0].slice(-1)&&(n*=2.55),c=a(m[1]),\"%\"==m[1].slice(-1)&&(c*=2.55),h=a(m[2]),\"%\"==m[2].slice(-1)&&(h*=2.55),\"rgba\"==y[1].toLowerCase().slice(0,4)&&(f=a(m[3])),m[3]&&\"%\"==m[3].slice(-1)&&(f/=100)),y[5]?(m=y[5].split(p),n=a(m[0]),\"%\"==m[0].slice(-1)&&(n/=100),c=a(m[1]),\"%\"==m[1].slice(-1)&&(c/=100),h=a(m[2]),\"%\"==m[2].slice(-1)&&(h/=100),(\"deg\"==m[0].slice(-3)||\"\\xb0\"==m[0].slice(-1))&&(n/=360),\"hsba\"==y[1].toLowerCase().slice(0,4)&&(f=a(m[3])),m[3]&&\"%\"==m[3].slice(-1)&&(f/=100),e.hsb2rgb(n,c,h,f)):y[6]?(m=y[6].split(p),n=a(m[0]),\"%\"==m[0].slice(-1)&&(n/=100),c=a(m[1]),\"%\"==m[1].slice(-1)&&(c/=100),h=a(m[2]),\"%\"==m[2].slice(-1)&&(h/=100),(\"deg\"==m[0].slice(-3)||\"\\xb0\"==m[0].slice(-1))&&(n/=360),\"hsla\"==y[1].toLowerCase().slice(0,4)&&(f=a(m[3])),m[3]&&\"%\"==m[3].slice(-1)&&(f/=100),e.hsl2rgb(n,c,h,f)):(n=l(s.round(n),255),c=l(s.round(c),255),h=l(s.round(h),255),f=l(u(f,0),1),(y={r:n,g:c,b:h,toString:j}).hex=\"#\"+(16777216|h|c<<8|n<<16).toString(16).slice(1),y.opacity=S(f,\"finite\")?f:1,y)):{r:-1,g:-1,b:-1,hex:\"none\",error:1,toString:j}}),e),e.hsb=D((function(t,n,r){return e.hsb2rgb(t,n,r).hex})),e.hsl=D((function(t,n,r){return e.hsl2rgb(t,n,r).hex})),e.rgb=D((function(t,e,n,r){if(S(r,\"finite\")){var i=s.round;return\"rgba(\"+[i(t),i(e),i(n),+r.toFixed(2)]+\")\"}return\"#\"+(16777216|n|e<<8|t<<16).toString(16).slice(1)}));var T=function(t){var e=n.doc.getElementsByTagName(\"head\")[0]||n.doc.getElementsByTagName(\"svg\")[0],r=\"rgb(255, 0, 0)\";return(T=D((function(t){if(\"red\"==t.toLowerCase())return r;e.style.color=r,e.style.color=t;var i=n.doc.defaultView.getComputedStyle(e,\"\").getPropertyValue(\"color\");return i==r?null:i})))(t)},M=function(){return\"hsb(\"+[this.h,this.s,this.b]+\")\"},N=function(){return\"hsl(\"+[this.h,this.s,this.l]+\")\"},j=function(){return 1==this.opacity||null==this.opacity?this.hex:\"rgba(\"+[this.r,this.g,this.b,this.opacity]+\")\"},P=function(t,n,r){if(null==n&&S(t,\"object\")&&\"r\"in t&&\"g\"in t&&\"b\"in t&&(r=t.b,n=t.g,t=t.r),null==n&&S(t,string)){var i=e.getRGB(t);t=i.r,n=i.g,r=i.b}return(t>1||n>1||r>1)&&(t/=255,n/=255,r/=255),[t,n,r]},L=function(t,n,r,i){var a={r:t=s.round(255*t),g:n=s.round(255*n),b:r=s.round(255*r),opacity:S(i,\"finite\")?i:1,hex:e.rgb(t,n,r),toString:j};return S(i,\"finite\")&&(a.opacity=i),a};e.color=function(t){var n;return S(t,\"object\")&&\"h\"in t&&\"s\"in t&&\"b\"in t?(n=e.hsb2rgb(t),t.r=n.r,t.g=n.g,t.b=n.b,t.opacity=1,t.hex=n.hex):S(t,\"object\")&&\"h\"in t&&\"s\"in t&&\"l\"in t?(n=e.hsl2rgb(t),t.r=n.r,t.g=n.g,t.b=n.b,t.opacity=1,t.hex=n.hex):(S(t,\"string\")&&(t=e.getRGB(t)),S(t,\"object\")&&\"r\"in t&&\"g\"in t&&\"b\"in t&&!(\"error\"in t)?(n=e.rgb2hsl(t),t.h=n.h,t.s=n.s,t.l=n.l,n=e.rgb2hsb(t),t.v=n.b):((t={hex:\"none\"}).r=t.g=t.b=t.h=t.s=t.v=t.l=-1,t.error=1)),t.toString=j,t},e.hsb2rgb=function(t,e,n,r){var i,a,o,s,u;return S(t,\"object\")&&\"h\"in t&&\"s\"in t&&\"b\"in t&&(n=t.b,e=t.s,r=t.o,t=t.h),s=(u=n*e)*(1-c((t=(t*=360)%360/60)%2-1)),i=a=o=n-u,L(i+=[u,s,0,0,s,u][t=~~t],a+=[s,u,u,s,0,0][t],o+=[0,0,s,u,u,s][t],r)},e.hsl2rgb=function(t,e,n,r){var i,a,o,s,u;return S(t,\"object\")&&\"h\"in t&&\"s\"in t&&\"l\"in t&&(n=t.l,e=t.s,t=t.h),(t>1||e>1||n>1)&&(t/=360,e/=100,n/=100),s=(u=2*e*(n<.5?n:1-n))*(1-c((t=(t*=360)%360/60)%2-1)),i=a=o=n-u/2,L(i+=[u,s,0,0,s,u][t=~~t],a+=[s,u,u,s,0,0][t],o+=[0,0,s,u,u,s][t],r)},e.rgb2hsb=function(t,e,n){var r,i;return t=(n=P(t,e,n))[0],e=n[1],n=n[2],{h:((0==(i=(r=u(t,e,n))-l(t,e,n))?null:r==t?(e-n)/i:r==e?(n-t)/i+2:(t-e)/i+4)+360)%6*60/360,s:0==i?0:i/r,b:r,toString:M}},e.rgb2hsl=function(t,e,n){var r,i,a,o;return t=(n=P(t,e,n))[0],e=n[1],n=n[2],r=((i=u(t,e,n))+(a=l(t,e,n)))/2,{h:((0==(o=i-a)?null:i==t?(e-n)/o:i==e?(n-t)/o+2:(t-e)/o+4)+360)%6*60/360,s:0==o?0:r<.5?o/(2*r):o/(2-2*r),l:r,toString:N}},e.parsePathString=function(t){if(!t)return null;var n=e.path(t);if(n.arr)return e.path.clone(n.arr);var r={a:7,c:6,o:2,h:1,l:2,m:2,r:4,q:4,s:4,t:2,v:1,u:3,z:0},a=[];return S(t,\"array\")&&S(t[0],\"array\")&&(a=e.path.clone(t)),a.length||i(t).replace(m,(function(t,e,n){var i=[],o=e.toLowerCase();if(n.replace(x,(function(t,e){e&&i.push(+e)})),\"m\"==o&&i.length>2&&(a.push([e].concat(i.splice(0,2))),o=\"l\",e=\"m\"==e?\"l\":\"L\"),\"o\"==o&&1==i.length&&a.push([e,i[0]]),\"r\"==o)a.push([e].concat(i));else for(;i.length>=r[o]&&(a.push([e].concat(i.splice(0,r[o]))),r[o]););})),a.toString=e.path.toString,n.arr=e.path.clone(a),a};var q=e.parseTransformString=function(t){if(!t)return null;var n=[];return S(t,\"array\")&&S(t[0],\"array\")&&(n=e.path.clone(t)),n.length||i(t).replace(y,(function(t,e,r){var i=[];e.toLowerCase();r.replace(x,(function(t,e){e&&i.push(+e)})),n.push([e].concat(i))})),n.toString=e.path.toString,n};e._.svgTransform2string=function(t){var e=[];return t=t.replace(/(?:^|\\s)(\\w+)\\(([^)]+)\\)/g,(function(t,n,r){return r=r.split(/\\s*,\\s*|\\s+/),\"rotate\"==n&&1==r.length&&r.push(0,0),\"scale\"==n&&(r.length>2?r=r.slice(0,2):2==r.length&&r.push(0,0),1==r.length&&r.push(r[0],0,0)),\"skewX\"==n?e.push([\"m\",1,0,s.tan(_(r[0])),1,0,0]):\"skewY\"==n?e.push([\"m\",1,s.tan(_(r[0])),0,1,0,0]):e.push([n.charAt(0)].concat(r)),t})),e},e._.rgTransform=/^[a-z][\\s]*-?\\.?\\d/i,e._.transform2matrix=function(t,n){var r=q(t),a=new e.Matrix;if(r)for(var o=0,s=r.length;o<s;o++){var u,l,c,h,f,d=r[o],p=d.length,g=i(d[0]).toLowerCase(),v=d[0]!=g,m=v?a.invert():0;\"t\"==g&&2==p?a.translate(d[1],0):\"t\"==g&&3==p?v?(u=m.x(0,0),l=m.y(0,0),c=m.x(d[1],d[2]),h=m.y(d[1],d[2]),a.translate(c-u,h-l)):a.translate(d[1],d[2]):\"r\"==g?2==p?(f=f||n,a.rotate(d[1],f.x+f.width/2,f.y+f.height/2)):4==p&&(v?(c=m.x(d[2],d[3]),h=m.y(d[2],d[3]),a.rotate(d[1],c,h)):a.rotate(d[1],d[2],d[3])):\"s\"==g?2==p||3==p?(f=f||n,a.scale(d[1],d[p-1],f.x+f.width/2,f.y+f.height/2)):4==p?v?(c=m.x(d[2],d[3]),h=m.y(d[2],d[3]),a.scale(d[1],d[1],c,h)):a.scale(d[1],d[1],d[2],d[3]):5==p&&(v?(c=m.x(d[3],d[4]),h=m.y(d[3],d[4]),a.scale(d[1],d[2],c,h)):a.scale(d[1],d[2],d[3],d[4])):\"m\"==g&&7==p&&a.add(d[1],d[2],d[3],d[4],d[5],d[6])}return a},e._unit2px=function(t,e,n){var r=V(t).node,i={},a=r.querySelector(\".svg---mgr\");a||(a=E(\"rect\"),E(a,{x:-9e9,y:-9e9,width:10,height:10,class:\"svg---mgr\",fill:\"none\"}),r.appendChild(a));function o(t){if(null==t)return\"\";if(t==+t)return t;E(a,{width:t});try{return a.getBBox().width}catch(e){return 0}}function s(t){if(null==t)return\"\";if(t==+t)return t;E(a,{height:t});try{return a.getBBox().height}catch(e){return 0}}function u(r,a){null==e?i[r]=a(t.attr(r)||0):r==e&&(i=a(null==n?t.attr(r)||0:n))}switch(t.type){case\"rect\":u(\"rx\",o),u(\"ry\",s);case\"image\":u(\"width\",o),u(\"height\",s);case\"text\":u(\"x\",o),u(\"y\",s);break;case\"circle\":u(\"cx\",o),u(\"cy\",s),u(\"r\",o);break;case\"ellipse\":u(\"cx\",o),u(\"cy\",s),u(\"rx\",o),u(\"ry\",s);break;case\"line\":u(\"x1\",o),u(\"x2\",o),u(\"y1\",s),u(\"y2\",s);break;case\"marker\":u(\"refX\",o),u(\"markerWidth\",o),u(\"refY\",s),u(\"markerHeight\",s);break;case\"radialGradient\":u(\"fx\",o),u(\"fy\",s);break;case\"tspan\":u(\"dx\",o),u(\"dy\",s);break;default:u(e,o)}return r.removeChild(a),i};n.doc.contains||n.doc.compareDocumentPosition;function V(t){return t.node.ownerSVGElement&&X(t.node.ownerSVGElement)||e.select(\"svg\")}function O(t){S(t,\"array\")||(t=Array.prototype.slice.call(arguments,0));for(var e=0,n=0,r=this.node;this[e];)delete this[e++];for(e=0;e<t.length;e++)\"set\"==t[e].type?t[e].forEach((function(t){r.appendChild(t.node)})):r.appendChild(t[e].node);var i=r.childNodes;for(e=0;e<i.length;e++)this[n++]=X(i[e]);return this}function G(t){if(t.snap in A)return A[t.snap];var e;try{e=t.ownerSVGElement}catch(a){}this.node=t,e&&(this.paper=new U(e)),this.type=t.tagName||t.nodeName;var n=this.id=C(this);if(this.anims={},this._={transform:[]},t.snap=n,A[n]=this,\"g\"==this.type&&(this.add=O),this.type in{g:1,mask:1,pattern:1,symbol:1})for(var i in U.prototype)U.prototype[r](i)&&(this[i]=U.prototype[i])}function R(t){this.node=t}function z(t,e){var n=E(t);return e.appendChild(n),X(n)}function U(t,e){var i,a,o,s=U.prototype;if(t&&t.tagName&&\"svg\"==t.tagName.toLowerCase()){if(t.snap in A)return A[t.snap];var u=t.ownerDocument;for(var l in i=new G(t),a=t.getElementsByTagName(\"desc\")[0],o=t.getElementsByTagName(\"defs\")[0],a||((a=E(\"desc\")).appendChild(u.createTextNode(\"Created with Snap\")),i.node.appendChild(a)),o||(o=E(\"defs\"),i.node.appendChild(o)),i.defs=o,s)s[r](l)&&(i[l]=s[l]);i.paper=i.root=i}else E((i=z(\"svg\",n.doc.body)).node,{height:e,version:1.1,width:t,xmlns:B});return i}function X(t){return t?t instanceof G||t instanceof R?t:t.tagName&&\"svg\"==t.tagName.toLowerCase()?new U(t):t.tagName&&\"object\"==t.tagName.toLowerCase()&&\"image/svg+xml\"==t.type?new U(t.contentDocument.getElementsByTagName(\"svg\")[0]):new G(t):t}function I(t,e){for(var n=0,r=t.length;n<r;n++){var i={type:t[n].type,attr:t[n].attr()},a=t[n].children();e.push(i),a.length&&I(a,i.childNodes=[])}}e._.getSomeDefs=function(t){var n=t.node.ownerSVGElement&&X(t.node.ownerSVGElement)||t.node.parentNode&&X(t.node.parentNode)||e.select(\"svg\")||e(0,0),r=n.select(\"defs\"),i=null!=r&&r.node;return i||(i=z(\"defs\",n.node).node),i},e._.getSomeSVG=V,e.select=function(t){return t=i(t).replace(/([^\\\\]):/g,\"$1\\\\:\"),X(n.doc.querySelector(t))},e.selectAll=function(t){for(var r=n.doc.querySelectorAll(t),i=(e.set||Array)(),a=0;a<r.length;a++)i.push(X(r[a]));return i},setInterval((function(){for(var t in A)if(A[r](t)){var e=A[t],n=e.node;(\"svg\"!=e.type&&!n.ownerSVGElement||\"svg\"==e.type&&(!n.parentNode||\"ownerSVGElement\"in n.parentNode&&!n.ownerSVGElement))&&delete A[t]}}),1e4),G.prototype.attr=function(t,e){var n=this,i=n.node;if(!t){if(1!=i.nodeType)return{text:i.nodeValue};for(var a=i.attributes,o={},s=0,u=a.length;s<u;s++)o[a[s].nodeName]=a[s].nodeValue;return o}if(S(t,\"string\")){if(!(arguments.length>1))return eve(\"snap.util.getattr.\"+t,n).firstDefined();var l={};l[t]=e,t=l}for(var c in t)t[r](c)&&eve(\"snap.util.attr.\"+c,n,t[c]);return n},e.parse=function(t){var e=n.doc.createDocumentFragment(),r=!0,a=n.doc.createElement(\"div\");if((t=i(t)).match(/^\\s*<\\s*svg(?:\\s|>)/)||(t=\"<svg>\"+t+\"</svg>\",r=!1),a.innerHTML=t,t=a.getElementsByTagName(\"svg\")[0])if(r)e=t;else for(;t.firstChild;)e.appendChild(t.firstChild);return new R(e)},e.fragment=function(){for(var t=Array.prototype.slice.call(arguments,0),r=n.doc.createDocumentFragment(),i=0,a=t.length;i<a;i++){var o=t[i];o.node&&o.node.nodeType&&r.appendChild(o.node),o.nodeType&&r.appendChild(o),\"string\"==typeof o&&r.appendChild(e.parse(o).node)}return new R(r)},e._.make=z,e._.wrap=X,U.prototype.el=function(t,e){var n=z(t,this.node);return e&&n.attr(e),n},G.prototype.children=function(){for(var t=[],n=this.node.childNodes,r=0,i=n.length;r<i;r++)t[r]=e(n[r]);return t},G.prototype.toJSON=function(){var t=[];return I([this],t),t[0]},eve.on(\"snap.util.getattr\",(function(){var t=eve.nt(),e=(t=t.substring(t.lastIndexOf(\".\")+1)).replace(/[A-Z]/g,(function(t){return\"-\"+t.toLowerCase()}));return $[r](e)?this.node.ownerDocument.defaultView.getComputedStyle(this.node,null).getPropertyValue(e):E(this.node,t)}));var $={\"alignment-baseline\":0,\"baseline-shift\":0,clip:0,\"clip-path\":0,\"clip-rule\":0,color:0,\"color-interpolation\":0,\"color-interpolation-filters\":0,\"color-profile\":0,\"color-rendering\":0,cursor:0,direction:0,display:0,\"dominant-baseline\":0,\"enable-background\":0,fill:0,\"fill-opacity\":0,\"fill-rule\":0,filter:0,\"flood-color\":0,\"flood-opacity\":0,font:0,\"font-family\":0,\"font-size\":0,\"font-size-adjust\":0,\"font-stretch\":0,\"font-style\":0,\"font-variant\":0,\"font-weight\":0,\"glyph-orientation-horizontal\":0,\"glyph-orientation-vertical\":0,\"image-rendering\":0,kerning:0,\"letter-spacing\":0,\"lighting-color\":0,marker:0,\"marker-end\":0,\"marker-mid\":0,\"marker-start\":0,mask:0,opacity:0,overflow:0,\"pointer-events\":0,\"shape-rendering\":0,\"stop-color\":0,\"stop-opacity\":0,stroke:0,\"stroke-dasharray\":0,\"stroke-dashoffset\":0,\"stroke-linecap\":0,\"stroke-linejoin\":0,\"stroke-miterlimit\":0,\"stroke-opacity\":0,\"stroke-width\":0,\"text-anchor\":0,\"text-decoration\":0,\"text-rendering\":0,\"unicode-bidi\":0,visibility:0,\"word-spacing\":0,\"writing-mode\":0};eve.on(\"snap.util.attr\",(function(t){var e=eve.nt(),n={};n[e=e.substring(e.lastIndexOf(\".\")+1)]=t;var i=e.replace(/-(\\w)/gi,(function(t,e){return e.toUpperCase()})),a=e.replace(/[A-Z]/g,(function(t){return\"-\"+t.toLowerCase()}));$[r](a)?this.node.style[i]=null==t?\"\":t:E(this.node,n)})),U.prototype,e.ajax=function(t,e,n,r){var i=new XMLHttpRequest,a=C();if(i){if(S(e,\"function\"))r=n,n=e,e=null;else if(S(e,\"object\")){var o=[];for(var s in e)e.hasOwnProperty(s)&&o.push(encodeURIComponent(s)+\"=\"+encodeURIComponent(e[s]));e=o.join(\"&\")}return i.open(e?\"POST\":\"GET\",t,!0),e&&(i.setRequestHeader(\"X-Requested-With\",\"XMLHttpRequest\"),i.setRequestHeader(\"Content-type\",\"application/x-www-form-urlencoded\")),n&&(eve.once(\"snap.ajax.\"+a+\".0\",n),eve.once(\"snap.ajax.\"+a+\".200\",n),eve.once(\"snap.ajax.\"+a+\".304\",n)),i.onreadystatechange=function(){4==i.readyState&&eve(\"snap.ajax.\"+a+\".\"+i.status,r,i)},4==i.readyState?i:(i.send(e),i)}},e.load=function(t,n,r){e.ajax(t,(function(t){var i=e.parse(t.responseText);r?n.call(r,i):n(i)}))};return e.getElementByPoint=function(t,e){this.canvas;var r=n.doc.elementFromPoint(t,e);if(n.win.opera&&\"svg\"==r.tagName){var i=function(t){var e=t.getBoundingClientRect(),n=t.ownerDocument,r=n.body,i=n.documentElement,a=i.clientTop||r.clientTop||0,o=i.clientLeft||r.clientLeft||0;return{y:e.top+(g.win.pageYOffset||i.scrollTop||r.scrollTop)-a,x:e.left+(g.win.pageXOffset||i.scrollLeft||r.scrollLeft)-o}}(r),a=r.createSVGRect();a.x=t-i.x,a.y=e-i.y,a.width=a.height=1;var o=r.getIntersectionList(a,null);o.length&&(r=o[o.length-1])}return r?X(r):null},e.plugin=function(t){t(e,G,U,n,R)},n.win.Snap=e,e}(window||this);i.plugin((function(t,e,n,r,i){var a=e.prototype,o=t.is,s=String,u=t._unit2px,l=t._.$,c=t._.make,h=t._.getSomeDefs,f=\"hasOwnProperty\",d=t._.wrap;a.getBBox=function(e){if(\"tspan\"==this.type)return t._.box(this.node.getClientRects().item(0));if(!t.Matrix||!t.path)return this.node.getBBox();var n=this,r=new t.Matrix;if(n.removed)return t._.box();for(;\"use\"==n.type;)if(e||(r=r.add(n.transform().localMatrix.translate(n.attr(\"x\")||0,n.attr(\"y\")||0))),n.original)n=n.original;else{var i=n.attr(\"xlink:href\");n=n.original=n.node.ownerDocument.getElementById(i.substring(i.indexOf(\"#\")+1))}var a=n._,o=t.path.get[n.type]||t.path.get.deflt;try{return e?(a.bboxwt=o?t.path.getBBox(n.realPath=o(n)):t._.box(n.node.getBBox()),t._.box(a.bboxwt)):(n.realPath=o(n),n.matrix=n.transform().localMatrix,a.bbox=t.path.getBBox(t.path.map(n.realPath,r.add(n.matrix))),t._.box(a.bbox))}catch(s){return t._.box()}};var p=function(){return this.string};function g(e,n){if(null==n){var r=!0;if(!(n=\"linearGradient\"==e.type||\"radialGradient\"==e.type?e.node.getAttribute(\"gradientTransform\"):\"pattern\"==e.type?e.node.getAttribute(\"patternTransform\"):e.node.getAttribute(\"transform\")))return new t.Matrix;n=t._.svgTransform2string(n)}else n=t._.rgTransform.test(n)?s(n).replace(/\\.{3}|\\u2026/g,e._.transform||\"\"):t._.svgTransform2string(n),o(n,\"array\")&&(n=t.path?t.path.toString.call(n):s(n)),e._.transform=n;var i=t._.transform2matrix(n,e.getBBox(1));if(r)return i;e.matrix=i}a.transform=function(e){var n=this._;if(null==e){for(var r,i=this,a=new t.Matrix(this.node.getCTM()),o=g(this),u=[o],c=new t.Matrix,h=o.toTransformString(),f=s(o)==s(this.matrix)?s(n.transform):h;\"svg\"!=i.type&&(i=i.parent());)u.push(g(i));for(r=u.length;r--;)c.add(u[r]);return{string:f,globalMatrix:a,totalMatrix:c,localMatrix:o,diffMatrix:a.clone().add(o.invert()),global:a.toTransformString(),total:c.toTransformString(),local:h,toString:p}}return e instanceof t.Matrix?(this.matrix=e,this._.transform=e.toTransformString()):g(this,e),this.node&&(\"linearGradient\"==this.type||\"radialGradient\"==this.type?l(this.node,{gradientTransform:this.matrix}):\"pattern\"==this.type?l(this.node,{patternTransform:this.matrix}):l(this.node,{transform:this.matrix})),this},a.parent=function(){return d(this.node.parentNode)},a.append=a.add=function(t){if(t){if(\"set\"==t.type){var e=this;return t.forEach((function(t){e.add(t)})),this}t=d(t),this.node.appendChild(t.node),t.paper=this.paper}return this},a.appendTo=function(t){return t&&(t=d(t)).append(this),this},a.prepend=function(t){if(t){if(\"set\"==t.type){var e,n=this;return t.forEach((function(t){e?e.after(t):n.prepend(t),e=t})),this}var r=(t=d(t)).parent();this.node.insertBefore(t.node,this.node.firstChild),this.add&&this.add(),t.paper=this.paper,this.parent()&&this.parent().add(),r&&r.add()}return this},a.prependTo=function(t){return(t=d(t)).prepend(this),this},a.before=function(t){if(\"set\"==t.type){var e=this;return t.forEach((function(t){var n=t.parent();e.node.parentNode.insertBefore(t.node,e.node),n&&n.add()})),this.parent().add(),this}var n=(t=d(t)).parent();return this.node.parentNode.insertBefore(t.node,this.node),this.parent()&&this.parent().add(),n&&n.add(),t.paper=this.paper,this},a.after=function(t){var e=(t=d(t)).parent();return this.node.nextSibling?this.node.parentNode.insertBefore(t.node,this.node.nextSibling):this.node.parentNode.appendChild(t.node),this.parent()&&this.parent().add(),e&&e.add(),t.paper=this.paper,this},a.insertBefore=function(t){t=d(t);var e=this.parent();return t.node.parentNode.insertBefore(this.node,t.node),this.paper=t.paper,e&&e.add(),t.parent()&&t.parent().add(),this},a.insertAfter=function(t){t=d(t);var e=this.parent();return t.node.parentNode.insertBefore(this.node,t.node.nextSibling),this.paper=t.paper,e&&e.add(),t.parent()&&t.parent().add(),this},a.remove=function(){var t=this.parent();return this.node.parentNode&&this.node.parentNode.removeChild(this.node),delete this.paper,this.removed=!0,t&&t.add(),this},a.select=function(t){return d(this.node.querySelector(t))},a.selectAll=function(e){for(var n=this.node.querySelectorAll(e),r=(t.set||Array)(),i=0;i<n.length;i++)r.push(d(n[i]));return r},a.asPX=function(t,e){return null==e&&(e=this.attr(t)),+u(this,t,e)},a.use=function(){var t,e=this.node.id;return e||(e=this.id,l(this.node,{id:e})),t=\"linearGradient\"==this.type||\"radialGradient\"==this.type||\"pattern\"==this.type?c(this.type,this.node.parentNode):c(\"use\",this.node.parentNode),l(t.node,{\"xlink:href\":\"#\"+e}),t.original=this,t},a.clone=function(){var e=d(this.node.cloneNode(!0));return l(e.node,\"id\")&&l(e.node,{id:e.id}),function(e){var n,r=e.selectAll(\"*\"),i=/^\\s*url\\((\"|'|)(.*)\\1\\)\\s*$/,a=[],o={};function s(e,n){var r=l(e.node,n);(r=(r=r&&r.match(i))&&r[2])&&\"#\"==r.charAt()&&(r=r.substring(1))&&(o[r]=(o[r]||[]).concat((function(r){var i={};i[n]=t.url(r),l(e.node,i)})))}function u(t){var e=l(t.node,\"xlink:href\");e&&\"#\"==e.charAt()&&(e=e.substring(1))&&(o[e]=(o[e]||[]).concat((function(e){t.attr(\"xlink:href\",\"#\"+e)})))}for(var c=0,h=r.length;c<h;c++){s(n=r[c],\"fill\"),s(n,\"stroke\"),s(n,\"filter\"),s(n,\"mask\"),s(n,\"clip-path\"),u(n);var f=l(n.node,\"id\");f&&(l(n.node,{id:n.id}),a.push({old:f,id:n.id}))}for(c=0,h=a.length;c<h;c++){var d=o[a[c].old];if(d)for(var p=0,g=d.length;p<g;p++)d[p](a[c].id)}}(e),e.insertAfter(this),e},a.toDefs=function(){return h(this).appendChild(this.node),this},a.pattern=a.toPattern=function(t,e,n,r){var i=c(\"pattern\",h(this));return null==t&&(t=this.getBBox()),o(t,\"object\")&&\"x\"in t&&(e=t.y,n=t.width,r=t.height,t=t.x),l(i.node,{x:t,y:e,width:n,height:r,patternUnits:\"userSpaceOnUse\",id:i.id,viewBox:[t,e,n,r].join(\" \")}),i.node.appendChild(this.node),i},a.marker=function(t,e,n,r,i,a){var s=c(\"marker\",h(this));return null==t&&(t=this.getBBox()),o(t,\"object\")&&\"x\"in t&&(e=t.y,n=t.width,r=t.height,i=t.refX||t.cx,a=t.refY||t.cy,t=t.x),l(s.node,{viewBox:[t,e,n,r].join(\" \"),markerWidth:n,markerHeight:r,orient:\"auto\",refX:i||0,refY:a||0,id:s.id}),s.node.appendChild(this.node),s};var v={};function m(t){return function(){var e=t?\"<\"+this.type:\"\",n=this.node.attributes,r=this.node.childNodes;if(t)for(var i=0,a=n.length;i<a;i++)e+=\" \"+n[i].name+'=\"'+n[i].value.replace(/\"/g,'\\\\\"')+'\"';if(r.length){for(t&&(e+=\">\"),i=0,a=r.length;i<a;i++)3==r[i].nodeType?e+=r[i].nodeValue:1==r[i].nodeType&&(e+=d(r[i]).toString());t&&(e+=\"</\"+this.type+\">\")}else t&&(e+=\"/>\");return e}}a.data=function(e,n){var r=v[this.id]=v[this.id]||{};if(0==arguments.length)return eve(\"snap.data.get.\"+this.id,this,r,null),r;if(1==arguments.length){if(t.is(e,\"object\")){for(var i in e)e[f](i)&&this.data(i,e[i]);return this}return eve(\"snap.data.get.\"+this.id,this,r[e],e),r[e]}return r[e]=n,eve(\"snap.data.set.\"+this.id,this,n,e),this},a.removeData=function(t){return null==t?v[this.id]={}:v[this.id]&&delete v[this.id][t],this},a.outerSVG=a.toString=m(1),a.innerSVG=m(),a.toDataURL=function(){if(window&&window.btoa){var e=this.getBBox(),n=t.format('<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"{width}\" height=\"{height}\" viewBox=\"{x} {y} {width} {height}\">{contents}</svg>',{x:+e.x.toFixed(3),y:+e.y.toFixed(3),width:+e.width.toFixed(3),height:+e.height.toFixed(3),contents:this.outerSVG()});return\"data:image/svg+xml;base64,\"+btoa(unescape(encodeURIComponent(n)))}},i.prototype.select=a.select,i.prototype.selectAll=a.selectAll})),i.plugin((function(t,e,n,r,i){var a=Object.prototype.toString,o=String,s=Math;function u(t,e,n,r,i,o){if(null==e&&\"[object SVGMatrix]\"==a.call(t))return this.a=t.a,this.b=t.b,this.c=t.c,this.d=t.d,this.e=t.e,void(this.f=t.f);null!=t?(this.a=+t,this.b=+e,this.c=+n,this.d=+r,this.e=+i,this.f=+o):(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0)}!function(e){function n(t){return t[0]*t[0]+t[1]*t[1]}function r(t){var e=s.sqrt(n(t));t[0]&&(t[0]/=e),t[1]&&(t[1]/=e)}e.add=function(t,e,n,r,i,a){if(t&&t instanceof u)return this.add(t.a,t.b,t.c,t.d,t.e,t.f);var o=t*this.a+e*this.c,s=t*this.b+e*this.d;return this.e+=i*this.a+a*this.c,this.f+=i*this.b+a*this.d,this.c=n*this.a+r*this.c,this.d=n*this.b+r*this.d,this.a=o,this.b=s,this},u.prototype.multLeft=function(t,e,n,r,i,a){if(t&&t instanceof u)return this.multLeft(t.a,t.b,t.c,t.d,t.e,t.f);var o=t*this.a+n*this.b,s=t*this.c+n*this.d,l=t*this.e+n*this.f+i;return this.b=e*this.a+r*this.b,this.d=e*this.c+r*this.d,this.f=e*this.e+r*this.f+a,this.a=o,this.c=s,this.e=l,this},e.invert=function(){var t=this,e=t.a*t.d-t.b*t.c;return new u(t.d/e,-t.b/e,-t.c/e,t.a/e,(t.c*t.f-t.d*t.e)/e,(t.b*t.e-t.a*t.f)/e)},e.clone=function(){return new u(this.a,this.b,this.c,this.d,this.e,this.f)},e.translate=function(t,e){return this.e+=t*this.a+e*this.c,this.f+=t*this.b+e*this.d,this},e.scale=function(t,e,n,r){return null==e&&(e=t),(n||r)&&this.translate(n,r),this.a*=t,this.b*=t,this.c*=e,this.d*=e,(n||r)&&this.translate(-n,-r),this},e.rotate=function(e,n,r){e=t.rad(e),n=n||0,r=r||0;var i=+s.cos(e).toFixed(9),a=+s.sin(e).toFixed(9);return this.add(i,a,-a,i,n,r),this.add(1,0,0,1,-n,-r)},e.skewX=function(t){return this.skew(t,0)},e.skewY=function(t){return this.skew(0,t)},e.skew=function(e,n){e=e||0,n=n||0,e=t.rad(e),n=t.rad(n);var r=s.tan(e).toFixed(9),i=s.tan(n).toFixed(9);return this.add(1,i,r,1,0,0)},e.x=function(t,e){return t*this.a+e*this.c+this.e},e.y=function(t,e){return t*this.b+e*this.d+this.f},e.get=function(t){return+this[o.fromCharCode(97+t)].toFixed(4)},e.toString=function(){return\"matrix(\"+[this.get(0),this.get(1),this.get(2),this.get(3),this.get(4),this.get(5)].join()+\")\"},e.offset=function(){return[this.e.toFixed(4),this.f.toFixed(4)]},e.determinant=function(){return this.a*this.d-this.b*this.c},e.split=function(){var e={};e.dx=this.e,e.dy=this.f;var i=[[this.a,this.b],[this.c,this.d]];e.scalex=s.sqrt(n(i[0])),r(i[0]),e.shear=i[0][0]*i[1][0]+i[0][1]*i[1][1],i[1]=[i[1][0]-i[0][0]*e.shear,i[1][1]-i[0][1]*e.shear],e.scaley=s.sqrt(n(i[1])),r(i[1]),e.shear/=e.scaley,this.determinant()<0&&(e.scalex=-e.scalex);var a=i[0][1],o=i[1][1];return o<0?(e.rotate=t.deg(s.acos(o)),a<0&&(e.rotate=360-e.rotate)):e.rotate=t.deg(s.asin(a)),e.isSimple=!+e.shear.toFixed(9)&&(e.scalex.toFixed(9)==e.scaley.toFixed(9)||!e.rotate),e.isSuperSimple=!+e.shear.toFixed(9)&&e.scalex.toFixed(9)==e.scaley.toFixed(9)&&!e.rotate,e.noRotation=!+e.shear.toFixed(9)&&!e.rotate,e},e.toTransformString=function(t){var e=t||this.split();return+e.shear.toFixed(9)?\"m\"+[this.get(0),this.get(1),this.get(2),this.get(3),this.get(4),this.get(5)]:(e.scalex=+e.scalex.toFixed(4),e.scaley=+e.scaley.toFixed(4),e.rotate=+e.rotate.toFixed(4),(e.dx||e.dy?\"t\"+[+e.dx.toFixed(4),+e.dy.toFixed(4)]:\"\")+(e.rotate?\"r\"+[+e.rotate.toFixed(4),0,0]:\"\")+(1!=e.scalex||1!=e.scaley?\"s\"+[e.scalex,e.scaley,0,0]:\"\"))}}(u.prototype),t.Matrix=u,t.matrix=function(t,e,n,r,i,a){return new u(t,e,n,r,i,a)}})),i.plugin((function(t,e,n,r,i){var a,o=t._.make,s=t._.wrap,u=t.is,l=t._.getSomeDefs,c=/^url\\((['\"]?)([^)]+)\\1\\)$/,h=t._.$,f=t.url,d=String,p=t._.separator;function g(n){return function(r){if(eve.stop(),r instanceof i&&1==r.node.childNodes.length&&(\"radialGradient\"==r.node.firstChild.tagName||\"linearGradient\"==r.node.firstChild.tagName||\"pattern\"==r.node.firstChild.tagName)&&(r=r.node.firstChild,l(this).appendChild(r),r=s(r)),r instanceof e)if(\"radialGradient\"==r.type||\"linearGradient\"==r.type||\"pattern\"==r.type){r.node.id||h(r.node,{id:r.id});var a=f(r.node.id)}else a=r.attr(n);else if((a=t.color(r)).error){var o=t(l(this).ownerSVGElement).gradient(r);o?(o.node.id||h(o.node,{id:o.id}),a=f(o.node.id)):a=r}else a=d(a);var u={};u[n]=a,h(this.node,u),this.node.style[n]=\"\"}}t.deurl=function(t){var e=String(t).match(c);return e?e[2]:t},eve.on(\"snap.util.attr.mask\",(function(t){if(t instanceof e||t instanceof i){if(eve.stop(),t instanceof i&&1==t.node.childNodes.length&&(t=t.node.firstChild,l(this).appendChild(t),t=s(t)),\"mask\"==t.type)var n=t;else(n=o(\"mask\",l(this))).node.appendChild(t.node);!n.node.id&&h(n.node,{id:n.id}),h(this.node,{mask:f(n.id)})}})),a=function(t){if(t instanceof e||t instanceof i){eve.stop();for(var n,r=t.node;r;){if(\"clipPath\"===r.nodeName){n=new e(r);break}if(\"svg\"===r.nodeName){n=void 0;break}r=r.parentNode}n||((n=o(\"clipPath\",l(this))).node.appendChild(t.node),!n.node.id&&h(n.node,{id:n.id})),h(this.node,{\"clip-path\":f(n.node.id||n.id)})}},eve.on(\"snap.util.attr.clip\",a),eve.on(\"snap.util.attr.clip-path\",a),eve.on(\"snap.util.attr.clipPath\",a),eve.on(\"snap.util.attr.fill\",g(\"fill\")),eve.on(\"snap.util.attr.stroke\",g(\"stroke\"));var v=/^([lr])(?:\\(([^)]*)\\))?(.*)$/i;function m(t){eve.stop(),t==+t&&(t+=\"px\"),this.node.style.fontSize=t}function y(t){for(var e=[],n=t.childNodes,r=0,i=n.length;r<i;r++){var a=n[r];3==a.nodeType&&e.push(a.nodeValue),\"tspan\"==a.tagName&&(1==a.childNodes.length&&3==a.firstChild.nodeType?e.push(a.firstChild.nodeValue):e.push(y(a)))}return e}function x(){return eve.stop(),this.node.style.fontSize}eve.on(\"snap.util.grad.parse\",(function(t){var e=(t=d(t)).match(v);if(!e)return null;var n=e[1],r=e[2],i=e[3];1==(r=r.split(/\\s*,\\s*/).map((function(t){return+t==t?+t:t}))).length&&0==r[0]&&(r=[]);var a=(i=(i=i.split(\"-\")).map((function(t){var e={color:(t=t.split(\":\"))[0]};return t[1]&&(e.offset=parseFloat(t[1])),e}))).length,o=0,s=0;function u(t,e){for(var n=(e-o)/(t-s),r=s;r<t;r++)i[r].offset=+(+o+n*(r-s)).toFixed(2);s=t,o=e}a--;for(var l=0;l<a;l++)\"offset\"in i[l]&&u(l,i[l].offset);return i[a].offset=i[a].offset||100,u(a,i[a].offset),{type:n,params:r,stops:i}})),eve.on(\"snap.util.attr.d\",(function(e){eve.stop(),u(e,\"array\")&&u(e[0],\"array\")&&(e=t.path.toString.call(e)),(e=d(e)).match(/[ruo]/i)&&(e=t.path.toAbsolute(e)),h(this.node,{d:e})}))(-1),eve.on(\"snap.util.attr.#text\",(function(t){eve.stop(),t=d(t);for(var e=r.doc.createTextNode(t);this.node.firstChild;)this.node.removeChild(this.node.firstChild);this.node.appendChild(e)}))(-1),eve.on(\"snap.util.attr.path\",(function(t){eve.stop(),this.attr({d:t})}))(-1),eve.on(\"snap.util.attr.class\",(function(t){eve.stop(),this.node.className.baseVal=t}))(-1),eve.on(\"snap.util.attr.viewBox\",(function(t){var e;e=u(t,\"object\")&&\"x\"in t?[t.x,t.y,t.width,t.height].join(\" \"):u(t,\"array\")?t.join(\" \"):t,h(this.node,{viewBox:e}),eve.stop()}))(-1),eve.on(\"snap.util.attr.transform\",(function(t){this.transform(t),eve.stop()}))(-1),eve.on(\"snap.util.attr.r\",(function(t){\"rect\"==this.type&&(eve.stop(),h(this.node,{rx:t,ry:t}))}))(-1),eve.on(\"snap.util.attr.textpath\",(function(t){if(eve.stop(),\"text\"==this.type){var n,r,i;if(!t&&this.textPath){for(r=this.textPath;r.node.firstChild;)this.node.appendChild(r.node.firstChild);return r.remove(),void delete this.textPath}if(u(t,\"string\")){var a=l(this),o=s(a.parentNode).path(t);a.appendChild(o.node),n=o.id,o.attr({id:n})}else(t=s(t))instanceof e&&((n=t.attr(\"id\"))||(n=t.id,t.attr({id:n})));if(n)if(r=this.textPath,i=this.node,r)r.attr({\"xlink:href\":\"#\"+n});else{for(r=h(\"textPath\",{\"xlink:href\":\"#\"+n});i.firstChild;)r.appendChild(i.firstChild);i.appendChild(r),this.textPath=s(r)}}}))(-1),eve.on(\"snap.util.attr.text\",(function(t){if(\"text\"==this.type){for(var e=this.node,n=function(t){var e=h(\"tspan\");if(u(t,\"array\"))for(var i=0;i<t.length;i++)e.appendChild(n(t[i]));else e.appendChild(r.doc.createTextNode(t));return e.normalize&&e.normalize(),e};e.firstChild;)e.removeChild(e.firstChild);for(var i=n(t);i.firstChild;)e.appendChild(i.firstChild)}eve.stop()}))(-1),eve.on(\"snap.util.attr.fontSize\",m)(-1),eve.on(\"snap.util.attr.font-size\",m)(-1),eve.on(\"snap.util.getattr.transform\",(function(){return eve.stop(),this.transform()}))(-1),eve.on(\"snap.util.getattr.textpath\",(function(){return eve.stop(),this.textPath}))(-1),function(){function e(e){return function(){eve.stop();var n=r.doc.defaultView.getComputedStyle(this.node,null).getPropertyValue(\"marker-\"+e);return\"none\"==n?n:t(r.doc.getElementById(n.match(c)[1]))}}function n(t){return function(e){eve.stop();var n=\"marker\"+t.charAt(0).toUpperCase()+t.substring(1);if(\"\"!=e&&e){if(\"marker\"==e.type){var r=e.node.id;return r||h(e.node,{id:e.id}),void(this.node.style[n]=f(r))}}else this.node.style[n]=\"none\"}}eve.on(\"snap.util.getattr.marker-end\",e(\"end\"))(-1),eve.on(\"snap.util.getattr.markerEnd\",e(\"end\"))(-1),eve.on(\"snap.util.getattr.marker-start\",e(\"start\"))(-1),eve.on(\"snap.util.getattr.markerStart\",e(\"start\"))(-1),eve.on(\"snap.util.getattr.marker-mid\",e(\"mid\"))(-1),eve.on(\"snap.util.getattr.markerMid\",e(\"mid\"))(-1),eve.on(\"snap.util.attr.marker-end\",n(\"end\"))(-1),eve.on(\"snap.util.attr.markerEnd\",n(\"end\"))(-1),eve.on(\"snap.util.attr.marker-start\",n(\"start\"))(-1),eve.on(\"snap.util.attr.markerStart\",n(\"start\"))(-1),eve.on(\"snap.util.attr.marker-mid\",n(\"mid\"))(-1),eve.on(\"snap.util.attr.markerMid\",n(\"mid\"))(-1)}(),eve.on(\"snap.util.getattr.r\",(function(){if(\"rect\"==this.type&&h(this.node,\"rx\")==h(this.node,\"ry\"))return eve.stop(),h(this.node,\"rx\")}))(-1),eve.on(\"snap.util.getattr.text\",(function(){if(\"text\"==this.type||\"tspan\"==this.type){eve.stop();var t=y(this.node);return 1==t.length?t[0]:t}}))(-1),eve.on(\"snap.util.getattr.#text\",(function(){return this.node.textContent}))(-1),eve.on(\"snap.util.getattr.fill\",(function(e){if(!e){eve.stop();var n=eve(\"snap.util.getattr.fill\",this,!0).firstDefined();return t(t.deurl(n))||n}}))(-1),eve.on(\"snap.util.getattr.stroke\",(function(e){if(!e){eve.stop();var n=eve(\"snap.util.getattr.stroke\",this,!0).firstDefined();return t(t.deurl(n))||n}}))(-1),eve.on(\"snap.util.getattr.viewBox\",(function(){eve.stop();var e=h(this.node,\"viewBox\");return e?(e=e.split(p),t._.box(+e[0],+e[1],+e[2],+e[3])):void 0}))(-1),eve.on(\"snap.util.getattr.points\",(function(){var t=h(this.node,\"points\");return eve.stop(),t?t.split(p):void 0}))(-1),eve.on(\"snap.util.getattr.path\",(function(){var t=h(this.node,\"d\");return eve.stop(),t}))(-1),eve.on(\"snap.util.getattr.class\",(function(){return this.node.className.baseVal}))(-1),eve.on(\"snap.util.getattr.fontSize\",x)(-1),eve.on(\"snap.util.getattr.font-size\",x)(-1)})),i.plugin((function(t,e,n,r,i){var a=/\\S+/g,o=String,s=e.prototype;s.addClass=function(t){var e,n,r,i=o(t||\"\").match(a)||[],s=this.node,u=s.className.baseVal,l=u.match(a)||[];if(i.length){for(e=0;n=i[e++];)~l.indexOf(n)||l.push(n);u!=(r=l.join(\" \"))&&(s.className.baseVal=r)}return this},s.removeClass=function(t){var e,n,r,i,s=o(t||\"\").match(a)||[],u=this.node,l=u.className.baseVal,c=l.match(a)||[];if(c.length){for(e=0;r=s[e++];)~(n=c.indexOf(r))&&c.splice(n,1);l!=(i=c.join(\" \"))&&(u.className.baseVal=i)}return this},s.hasClass=function(t){return!!~(this.node.className.baseVal.match(a)||[]).indexOf(t)},s.toggleClass=function(t,e){if(null!=e)return e?this.addClass(t):this.removeClass(t);var n,r,i,o,s=(t||\"\").match(a)||[],u=this.node,l=u.className.baseVal,c=l.match(a)||[];for(n=0;i=s[n++];)~(r=c.indexOf(i))?c.splice(r,1):c.push(i);return l!=(o=c.join(\" \"))&&(u.className.baseVal=o),this}})),i.plugin((function(t,e,n,r,i){var a={\"+\":function(t,e){return t+e},\"-\":function(t,e){return t-e},\"/\":function(t,e){return t/e},\"*\":function(t,e){return t*e}},o=String,s=/[a-z]+$/i,u=/^\\s*([+\\-\\/*])\\s*=\\s*([\\d.eE+\\-]+)\\s*([^\\d\\s]+)?\\s*$/;function l(t){return t}function c(t){return function(e){return+e.toFixed(3)+t}}eve.on(\"snap.util.attr\",(function(t){var e=o(t).match(u);if(e){var n=eve.nt(),r=n.substring(n.lastIndexOf(\".\")+1),i=this.attr(r),l={};eve.stop();var c=e[3]||\"\",h=i.match(s),f=a[e[1]];if(h&&h==c?t=f(parseFloat(i),+e[2]):(i=this.asPX(r),t=f(this.asPX(r),this.asPX(r,e[2]+c))),isNaN(i)||isNaN(t))return;l[r]=t,this.attr(l)}}))(-10),eve.on(\"snap.util.equal\",(function(t,e){var n=o(this.attr(t)||\"\"),r=o(e).match(u);if(r){eve.stop();var i=r[3]||\"\",h=n.match(s),f=a[r[1]];return h&&h==i?{from:parseFloat(n),to:f(parseFloat(n),+r[2]),f:c(h)}:{from:n=this.asPX(t),to:f(n,this.asPX(t,r[2]+i)),f:l}}}))(-10)})),i.plugin((function(t,e,n,r,i){var a=n.prototype,o=t.is;a.rect=function(t,e,n,r,i,a){var s;return null==a&&(a=i),o(t,\"object\")&&\"[object Object]\"==t?s=t:null!=t&&(s={x:t,y:e,width:n,height:r},null!=i&&(s.rx=i,s.ry=a)),this.el(\"rect\",s)},a.circle=function(t,e,n){var r;return o(t,\"object\")&&\"[object Object]\"==t?r=t:null!=t&&(r={cx:t,cy:e,r:n}),this.el(\"circle\",r)};var s=function(){function t(){this.parentNode.removeChild(this)}return function(e,n){var i=r.doc.createElement(\"img\"),a=r.doc.body;i.style.cssText=\"position:absolute;left:-9999em;top:-9999em\",i.onload=function(){n.call(i),i.onload=i.onerror=null,a.removeChild(i)},i.onerror=t,a.appendChild(i),i.src=e}}();a.image=function(e,n,r,i,a){var u=this.el(\"image\");if(o(e,\"object\")&&\"src\"in e)u.attr(e);else if(null!=e){var l={\"xlink:href\":e,preserveAspectRatio:\"none\"};null!=n&&null!=r&&(l.x=n,l.y=r),null!=i&&null!=a?(l.width=i,l.height=a):s(e,(function(){t._.$(u.node,{width:this.offsetWidth,height:this.offsetHeight})})),t._.$(u.node,l)}return u},a.ellipse=function(t,e,n,r){var i;return o(t,\"object\")&&\"[object Object]\"==t?i=t:null!=t&&(i={cx:t,cy:e,rx:n,ry:r}),this.el(\"ellipse\",i)},a.path=function(t){var e;return o(t,\"object\")&&!o(t,\"array\")?e=t:t&&(e={d:t}),this.el(\"path\",e)},a.group=a.g=function(t){var e=this.el(\"g\");return 1==arguments.length&&t&&!t.type?e.attr(t):arguments.length&&e.add(Array.prototype.slice.call(arguments,0)),e},a.svg=function(t,e,n,r,i,a,s,u){var l={};return o(t,\"object\")&&null==e?l=t:(null!=t&&(l.x=t),null!=e&&(l.y=e),null!=n&&(l.width=n),null!=r&&(l.height=r),null!=i&&null!=a&&null!=s&&null!=u&&(l.viewBox=[i,a,s,u])),this.el(\"svg\",l)},a.mask=function(t){var e=this.el(\"mask\");return 1==arguments.length&&t&&!t.type?e.attr(t):arguments.length&&e.add(Array.prototype.slice.call(arguments,0)),e},a.ptrn=function(t,e,n,r,i,a,s,u){if(o(t,\"object\"))var l=t;else l={patternUnits:\"userSpaceOnUse\"},t&&(l.x=t),e&&(l.y=e),null!=n&&(l.width=n),null!=r&&(l.height=r),l.viewBox=null!=i&&null!=a&&null!=s&&null!=u?[i,a,s,u]:[t||0,e||0,n||0,r||0];return this.el(\"pattern\",l)},a.use=function(n){return null!=n?(n instanceof e&&(n.attr(\"id\")||n.attr({id:t._.id(n)}),n=n.attr(\"id\")),\"#\"==String(n).charAt()&&(n=n.substring(1)),this.el(\"use\",{\"xlink:href\":\"#\"+n})):e.prototype.use.call(this)},a.symbol=function(t,e,n,r){var i={};return null!=t&&null!=e&&null!=n&&null!=r&&(i.viewBox=[t,e,n,r]),this.el(\"symbol\",i)},a.text=function(t,e,n){var r={};return o(t,\"object\")?r=t:null!=t&&(r={x:t,y:e,text:n||\"\"}),this.el(\"text\",r)},a.line=function(t,e,n,r){var i={};return o(t,\"object\")?i=t:null!=t&&(i={x1:t,x2:n,y1:e,y2:r}),this.el(\"line\",i)},a.polyline=function(t){arguments.length>1&&(t=Array.prototype.slice.call(arguments,0));var e={};return o(t,\"object\")&&!o(t,\"array\")?e=t:null!=t&&(e={points:t}),this.el(\"polyline\",e)},a.polygon=function(t){arguments.length>1&&(t=Array.prototype.slice.call(arguments,0));var e={};return o(t,\"object\")&&!o(t,\"array\")?e=t:null!=t&&(e={points:t}),this.el(\"polygon\",e)},function(){var e=t._.$;function n(){return this.selectAll(\"stop\")}function r(n,r){var i=e(\"stop\"),a={offset:+r+\"%\"};n=t.color(n),a[\"stop-color\"]=n.hex,n.opacity<1&&(a[\"stop-opacity\"]=n.opacity),e(i,a);for(var o,s=this.stops(),u=0;u<s.length;u++){if(parseFloat(s[u].attr(\"offset\"))>r){this.node.insertBefore(i,s[u].node),o=!0;break}}return o||this.node.appendChild(i),this}function i(){if(\"linearGradient\"==this.type){var n=e(this.node,\"x1\")||0,r=e(this.node,\"x2\")||1,i=e(this.node,\"y1\")||0,a=e(this.node,\"y2\")||0;return t._.box(n,i,math.abs(r-n),math.abs(a-i))}var o=this.node.cx||.5,s=this.node.cy||.5,u=this.node.r||0;return t._.box(o-u,s-u,2*u,2*u)}function o(e){var n=e,r=this.stops();if(\"string\"==typeof e&&(n=eve(\"snap.util.grad.parse\",null,\"l(0,0,0,1)\"+e).firstDefined().stops),t.is(n,\"array\")){for(var i=0;i<r.length;i++)if(n[i]){var a=t.color(n[i].color),o={offset:n[i].offset+\"%\"};o[\"stop-color\"]=a.hex,a.opacity<1&&(o[\"stop-opacity\"]=a.opacity),r[i].attr(o)}else r[i].remove();for(i=r.length;i<n.length;i++)this.addStop(n[i].color,n[i].offset);return this}}function s(a,s,u,l,c){var h=t._.make(\"linearGradient\",a);return h.stops=n,h.addStop=r,h.getBBox=i,h.setStops=o,null!=s&&e(h.node,{x1:s,y1:u,x2:l,y2:c}),h}function u(a,o,s,u,l,c){var h=t._.make(\"radialGradient\",a);return h.stops=n,h.addStop=r,h.getBBox=i,null!=o&&e(h.node,{cx:o,cy:s,r:u}),null!=l&&null!=c&&e(h.node,{fx:l,fy:c}),h}a.gradient=function(t){return function(t,n){var r,i=eve(\"snap.util.grad.parse\",null,n).firstDefined();if(!i)return null;i.params.unshift(t),r=\"l\"==i.type.toLowerCase()?s.apply(0,i.params):u.apply(0,i.params),i.type!=i.type.toLowerCase()&&e(r.node,{gradientUnits:\"userSpaceOnUse\"});for(var a=i.stops,o=a.length,l=0;l<o;l++){var c=a[l];r.addStop(c.color,c.offset)}return r}(this.defs,t)},a.gradientLinear=function(t,e,n,r){return s(this.defs,t,e,n,r)},a.gradientRadial=function(t,e,n,r,i){return u(this.defs,t,e,n,r,i)},a.toString=function(){var e,n=this.node.ownerDocument,r=n.createDocumentFragment(),i=n.createElement(\"div\"),a=this.node.cloneNode(!0);return r.appendChild(i),i.appendChild(a),t._.$(a,{xmlns:\"http://www.w3.org/2000/svg\"}),e=i.innerHTML,r.removeChild(r.firstChild),e},a.toDataURL=function(){if(window&&window.btoa)return\"data:image/svg+xml;base64,\"+btoa(unescape(encodeURIComponent(this)))},a.clear=function(){for(var t,e=this.node.firstChild;e;)t=e.nextSibling,\"defs\"!=e.tagName?e.parentNode.removeChild(e):a.clear.call({node:e}),e=t}}()})),i.plugin((function(t,e,n,r){var i=e.prototype,a=t.is,o=t._.clone,s=/,?([a-z]),?/gi,u=parseFloat,l=Math,c=l.PI,h=l.min,f=l.max,d=l.pow,p=l.abs;function g(t){var e=g.ps=g.ps||{};return e[t]?e[t].sleep=100:e[t]={sleep:100},setTimeout((function(){for(var n in e)e.hasOwnProperty(n)&&n!=t&&(e[n].sleep--,!e[n].sleep&&delete e[n])})),e[t]}function v(t,e,n,r){return null==t&&(t=e=n=r=0),null==e&&(e=t.y,n=t.width,r=t.height,t=t.x),{x:t,y:e,width:n,w:n,height:r,h:r,x2:t+n,y2:e+r,cx:t+n/2,cy:e+r/2,r1:l.min(n,r)/2,r2:l.max(n,r)/2,r0:l.sqrt(n*n+r*r)/2,path:j(t,e,n,r),vb:[t,e,n,r].join(\" \")}}function m(){return this.join(\",\").replace(s,\"$1\")}function y(t){var e=o(t);return e.toString=m,e}function x(t,e,n,r,i,a,o,s,u){return null==u?D(t,e,n,r,i,a,o,s):B(t,e,n,r,i,a,o,s,function(t,e,n,r,i,a,o,s,u){if(u<0||D(t,e,n,r,i,a,o,s)<u)return;var l,c=1,h=c/2,f=c-h,d=.01;l=D(t,e,n,r,i,a,o,s,f);for(;p(l-u)>d;)l=D(t,e,n,r,i,a,o,s,f+=(l<u?1:-1)*(h/=2));return f}(t,e,n,r,i,a,o,s,u))}function b(n,r){function i(t){return+(+t).toFixed(3)}return t._.cacher((function(t,a,o){t instanceof e&&(t=t.attr(\"d\"));for(var s,u,l,c,h,f=\"\",d={},p=0,g=0,v=(t=U(t)).length;g<v;g++){if(\"M\"==(l=t[g])[0])s=+l[1],u=+l[2];else{if(p+(c=x(s,u,l[1],l[2],l[3],l[4],l[5],l[6]))>a){if(r&&!d.start){if(f+=[\"C\"+i((h=x(s,u,l[1],l[2],l[3],l[4],l[5],l[6],a-p)).start.x),i(h.start.y),i(h.m.x),i(h.m.y),i(h.x),i(h.y)],o)return f;d.start=f,f=[\"M\"+i(h.x),i(h.y)+\"C\"+i(h.n.x),i(h.n.y),i(h.end.x),i(h.end.y),i(l[5]),i(l[6])].join(),p+=c,s=+l[5],u=+l[6];continue}if(!n&&!r)return h=x(s,u,l[1],l[2],l[3],l[4],l[5],l[6],a-p)}p+=c,s=+l[5],u=+l[6]}f+=l.shift()+l}return d.end=f,h=n?p:r?d:B(s,u,l[0],l[1],l[2],l[3],l[4],l[5],1)}),null,t._.clone)}var F=b(1),C=b(),w=b(0,1);function B(t,e,n,r,i,a,o,s,u){var h=1-u,f=d(h,3),p=d(h,2),g=u*u,v=g*u,m=t+2*u*(n-t)+g*(i-2*n+t),y=e+2*u*(r-e)+g*(a-2*r+e),x=n+2*u*(i-n)+g*(o-2*i+n),b=r+2*u*(a-r)+g*(s-2*a+r);return{x:f*t+3*p*u*n+3*h*u*u*i+v*o,y:f*e+3*p*u*r+3*h*u*u*a+v*s,m:{x:m,y:y},n:{x:x,y:b},start:{x:h*t+u*n,y:h*e+u*r},end:{x:h*i+u*o,y:h*a+u*s},alpha:90-180*l.atan2(m-x,y-b)/c}}function A(e,n,r,i,a,o,s,u){t.is(e,\"array\")||(e=[e,n,r,i,a,o,s,u]);var l=z.apply(null,e);return v(l.min.x,l.min.y,l.max.x-l.min.x,l.max.y-l.min.y)}function E(t,e,n){return e>=t.x&&e<=t.x+t.width&&n>=t.y&&n<=t.y+t.height}function S(t,e){return t=v(t),E(e=v(e),t.x,t.y)||E(e,t.x2,t.y)||E(e,t.x,t.y2)||E(e,t.x2,t.y2)||E(t,e.x,e.y)||E(t,e.x2,e.y)||E(t,e.x,e.y2)||E(t,e.x2,e.y2)||(t.x<e.x2&&t.x>e.x||e.x<t.x2&&e.x>t.x)&&(t.y<e.y2&&t.y>e.y||e.y<t.y2&&e.y>t.y)}function k(t,e,n,r,i){return t*(t*(-3*e+9*n-9*r+3*i)+6*e-12*n+6*r)-3*e+3*n}function D(t,e,n,r,i,a,o,s,u){null==u&&(u=1);for(var c=(u=u>1?1:u<0?0:u)/2,h=[-.1252,.1252,-.3678,.3678,-.5873,.5873,-.7699,.7699,-.9041,.9041,-.9816,.9816],f=[.2491,.2491,.2335,.2335,.2032,.2032,.1601,.1601,.1069,.1069,.0472,.0472],d=0,p=0;p<12;p++){var g=c*h[p]+c,v=k(g,t,n,i,o),m=k(g,e,r,a,s),y=v*v+m*m;d+=f[p]*l.sqrt(y)}return c*d}function _(t,e,n,r,i,a,o,s){if(!(f(t,n)<h(i,o)||h(t,n)>f(i,o)||f(e,r)<h(a,s)||h(e,r)>f(a,s))){var u=(t-n)*(a-s)-(e-r)*(i-o);if(u){var l=((t*r-e*n)*(i-o)-(t-n)*(i*s-a*o))/u,c=((t*r-e*n)*(a-s)-(e-r)*(i*s-a*o))/u,d=+l.toFixed(2),p=+c.toFixed(2);if(!(d<+h(t,n).toFixed(2)||d>+f(t,n).toFixed(2)||d<+h(i,o).toFixed(2)||d>+f(i,o).toFixed(2)||p<+h(e,r).toFixed(2)||p>+f(e,r).toFixed(2)||p<+h(a,s).toFixed(2)||p>+f(a,s).toFixed(2)))return{x:l,y:c}}}}function T(t,e,n){if(!S(A(t),A(e)))return n?0:[];for(var r=~~(D.apply(0,t)/8),i=~~(D.apply(0,e)/8),a=[],o=[],s={},u=n?0:[],l=0;l<r+1;l++){var c=B.apply(0,t.concat(l/r));a.push({x:c.x,y:c.y,t:l/r})}for(l=0;l<i+1;l++)c=B.apply(0,e.concat(l/i)),o.push({x:c.x,y:c.y,t:l/i});for(l=0;l<r;l++)for(var h=0;h<i;h++){var f=a[l],d=a[l+1],g=o[h],v=o[h+1],m=p(d.x-f.x)<.001?\"y\":\"x\",y=p(v.x-g.x)<.001?\"y\":\"x\",x=_(f.x,f.y,d.x,d.y,g.x,g.y,v.x,v.y);if(x){if(s[x.x.toFixed(4)]==x.y.toFixed(4))continue;s[x.x.toFixed(4)]=x.y.toFixed(4);var b=f.t+p((x[m]-f[m])/(d[m]-f[m]))*(d.t-f.t),F=g.t+p((x[y]-g[y])/(v[y]-g[y]))*(v.t-g.t);b>=0&&b<=1&&F>=0&&F<=1&&(n?u++:u.push({x:x.x,y:x.y,t1:b,t2:F}))}}return u}function M(t,e,n){t=U(t),e=U(e);for(var r,i,a,o,s,u,l,c,h,f,d=n?0:[],p=0,g=t.length;p<g;p++){var v=t[p];if(\"M\"==v[0])r=s=v[1],i=u=v[2];else{\"C\"==v[0]?(h=[r,i].concat(v.slice(1)),r=h[6],i=h[7]):(h=[r,i,r,i,s,u,s,u],r=s,i=u);for(var m=0,y=e.length;m<y;m++){var x=e[m];if(\"M\"==x[0])a=l=x[1],o=c=x[2];else{\"C\"==x[0]?(f=[a,o].concat(x.slice(1)),a=f[6],o=f[7]):(f=[a,o,a,o,l,c,l,c],a=l,o=c);var b=T(h,f,n);if(n)d+=b;else{for(var F=0,C=b.length;F<C;F++)b[F].segment1=p,b[F].segment2=m,b[F].bez1=h,b[F].bez2=f;d=d.concat(b)}}}}}return d}function N(t){var e=g(t);if(e.bbox)return o(e.bbox);if(!t)return v();for(var n,r=0,i=0,a=[],s=[],u=0,l=(t=U(t)).length;u<l;u++)if(\"M\"==(n=t[u])[0])r=n[1],i=n[2],a.push(r),s.push(i);else{var c=z(r,i,n[1],n[2],n[3],n[4],n[5],n[6]);a=a.concat(c.min.x,c.max.x),s=s.concat(c.min.y,c.max.y),r=n[5],i=n[6]}var d=h.apply(0,a),p=h.apply(0,s),m=v(d,p,f.apply(0,a)-d,f.apply(0,s)-p);return e.bbox=o(m),m}function j(t,e,n,r,i){if(i)return[[\"M\",+t+ +i,e],[\"l\",n-2*i,0],[\"a\",i,i,0,0,1,i,i],[\"l\",0,r-2*i],[\"a\",i,i,0,0,1,-i,i],[\"l\",2*i-n,0],[\"a\",i,i,0,0,1,-i,-i],[\"l\",0,2*i-r],[\"a\",i,i,0,0,1,i,-i],[\"z\"]];var a=[[\"M\",t,e],[\"l\",n,0],[\"l\",0,r],[\"l\",-n,0],[\"z\"]];return a.toString=m,a}function P(t,e,n,r,i){if(null==i&&null==r&&(r=n),t=+t,e=+e,n=+n,r=+r,null!=i)var a=Math.PI/180,o=t+n*Math.cos(-r*a),s=t+n*Math.cos(-i*a),u=[[\"M\",o,e+n*Math.sin(-r*a)],[\"A\",n,n,0,+(i-r>180),0,s,e+n*Math.sin(-i*a)]];else u=[[\"M\",t,e],[\"m\",0,-r],[\"a\",n,r,0,1,1,0,2*r],[\"a\",n,r,0,1,1,0,-2*r],[\"z\"]];return u.toString=m,u}var L=t._unit2px,q={path:function(t){return t.attr(\"path\")},circle:function(t){var e=L(t);return P(e.cx,e.cy,e.r)},ellipse:function(t){var e=L(t);return P(e.cx||0,e.cy||0,e.rx,e.ry)},rect:function(t){var e=L(t);return j(e.x||0,e.y||0,e.width,e.height,e.rx,e.ry)},image:function(t){var e=L(t);return j(e.x||0,e.y||0,e.width,e.height)},line:function(t){return\"M\"+[t.attr(\"x1\")||0,t.attr(\"y1\")||0,t.attr(\"x2\"),t.attr(\"y2\")]},polyline:function(t){return\"M\"+t.attr(\"points\")},polygon:function(t){return\"M\"+t.attr(\"points\")+\"z\"},deflt:function(t){var e=t.node.getBBox();return j(e.x,e.y,e.width,e.height)}};function V(e){var n=g(e);if(n.abs)return y(n.abs);if(a(e,\"array\")&&a(e&&e[0],\"array\")||(e=t.parsePathString(e)),!e||!e.length)return[[\"M\",0,0]];var r,i=[],o=0,s=0,u=0,l=0,c=0;\"M\"==e[0][0]&&(u=o=+e[0][1],l=s=+e[0][2],c++,i[0]=[\"M\",o,s]);for(var h,f,d=3==e.length&&\"M\"==e[0][0]&&\"R\"==e[1][0].toUpperCase()&&\"Z\"==e[2][0].toUpperCase(),p=c,v=e.length;p<v;p++){if(i.push(h=[]),(r=(f=e[p])[0])!=r.toUpperCase())switch(h[0]=r.toUpperCase(),h[0]){case\"A\":h[1]=f[1],h[2]=f[2],h[3]=f[3],h[4]=f[4],h[5]=f[5],h[6]=+f[6]+o,h[7]=+f[7]+s;break;case\"V\":h[1]=+f[1]+s;break;case\"H\":h[1]=+f[1]+o;break;case\"R\":for(var x=[o,s].concat(f.slice(1)),b=2,F=x.length;b<F;b++)x[b]=+x[b]+o,x[++b]=+x[b]+s;i.pop(),i=i.concat(X(x,d));break;case\"O\":i.pop(),(x=P(o,s,f[1],f[2])).push(x[0]),i=i.concat(x);break;case\"U\":i.pop(),i=i.concat(P(o,s,f[1],f[2],f[3])),h=[\"U\"].concat(i[i.length-1].slice(-2));break;case\"M\":u=+f[1]+o,l=+f[2]+s;default:for(b=1,F=f.length;b<F;b++)h[b]=+f[b]+(b%2?o:s)}else if(\"R\"==r)x=[o,s].concat(f.slice(1)),i.pop(),i=i.concat(X(x,d)),h=[\"R\"].concat(f.slice(-2));else if(\"O\"==r)i.pop(),(x=P(o,s,f[1],f[2])).push(x[0]),i=i.concat(x);else if(\"U\"==r)i.pop(),i=i.concat(P(o,s,f[1],f[2],f[3])),h=[\"U\"].concat(i[i.length-1].slice(-2));else for(var C=0,w=f.length;C<w;C++)h[C]=f[C];if(\"O\"!=(r=r.toUpperCase()))switch(h[0]){case\"Z\":o=+u,s=+l;break;case\"H\":o=h[1];break;case\"V\":s=h[1];break;case\"M\":u=h[h.length-2],l=h[h.length-1];default:o=h[h.length-2],s=h[h.length-1]}}return i.toString=m,n.abs=y(i),i}function O(t,e,n,r){return[t,e,n,r,n,r]}function G(t,e,n,r,i,a){var o=1/3,s=2/3;return[o*t+s*n,o*e+s*r,o*i+s*n,o*a+s*r,i,a]}function R(e,n,r,i,a,o,s,u,h,f){var d,g=120*c/180,v=c/180*(+a||0),m=[],y=t._.cacher((function(t,e,n){return{x:t*l.cos(n)-e*l.sin(n),y:t*l.sin(n)+e*l.cos(n)}}));if(!r||!i)return[e,n,u,h,u,h];if(f)S=f[0],k=f[1],A=f[2],E=f[3];else{e=(d=y(e,n,-v)).x,n=d.y,u=(d=y(u,h,-v)).x,h=d.y;l.cos(c/180*a),l.sin(c/180*a);var x=(e-u)/2,b=(n-h)/2,F=x*x/(r*r)+b*b/(i*i);F>1&&(r*=F=l.sqrt(F),i*=F);var C=r*r,w=i*i,B=(o==s?-1:1)*l.sqrt(p((C*w-C*b*b-w*x*x)/(C*b*b+w*x*x))),A=B*r*b/i+(e+u)/2,E=B*-i*x/r+(n+h)/2,S=l.asin(((n-E)/i).toFixed(9)),k=l.asin(((h-E)/i).toFixed(9));(S=e<A?c-S:S)<0&&(S=2*c+S),(k=u<A?c-k:k)<0&&(k=2*c+k),s&&S>k&&(S-=2*c),!s&&k>S&&(k-=2*c)}var D=k-S;if(p(D)>g){var _=k,T=u,M=h;k=S+g*(s&&k>S?1:-1),m=R(u=A+r*l.cos(k),h=E+i*l.sin(k),r,i,a,0,s,T,M,[k,_,A,E])}D=k-S;var N=l.cos(S),j=l.sin(S),P=l.cos(k),L=l.sin(k),q=l.tan(D/4),V=4/3*r*q,O=4/3*i*q,G=[e,n],z=[e+V*j,n-O*N],U=[u+V*L,h-O*P],X=[u,h];if(z[0]=2*G[0]-z[0],z[1]=2*G[1]-z[1],f)return[z,U,X].concat(m);for(var I=[],$=0,H=(m=[z,U,X].concat(m).join().split(\",\")).length;$<H;$++)I[$]=$%2?y(m[$-1],m[$],v).y:y(m[$],m[$+1],v).x;return I}function z(t,e,n,r,i,a,o,s){for(var u,c,d,g,v,m,y,x,b=[],F=[[],[]],C=0;C<2;++C)if(0==C?(c=6*t-12*n+6*i,u=-3*t+9*n-9*i+3*o,d=3*n-3*t):(c=6*e-12*r+6*a,u=-3*e+9*r-9*a+3*s,d=3*r-3*e),p(u)<1e-12){if(p(c)<1e-12)continue;0<(g=-d/c)&&g<1&&b.push(g)}else y=c*c-4*d*u,x=l.sqrt(y),y<0||(0<(v=(-c+x)/(2*u))&&v<1&&b.push(v),0<(m=(-c-x)/(2*u))&&m<1&&b.push(m));for(var w,B=b.length,A=B;B--;)w=1-(g=b[B]),F[0][B]=w*w*w*t+3*w*w*g*n+3*w*g*g*i+g*g*g*o,F[1][B]=w*w*w*e+3*w*w*g*r+3*w*g*g*a+g*g*g*s;return F[0][A]=t,F[1][A]=e,F[0][A+1]=o,F[1][A+1]=s,F[0].length=F[1].length=A+2,{min:{x:h.apply(0,F[0]),y:h.apply(0,F[1])},max:{x:f.apply(0,F[0]),y:f.apply(0,F[1])}}}function U(t,e){var n=!e&&g(t);if(!e&&n.curve)return y(n.curve);for(var r=V(t),i=e&&V(e),a={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},o={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},s=function(t,e,n){var r,i;if(!t)return[\"C\",e.x,e.y,e.x,e.y,e.x,e.y];switch(!(t[0]in{T:1,Q:1})&&(e.qx=e.qy=null),t[0]){case\"M\":e.X=t[1],e.Y=t[2];break;case\"A\":t=[\"C\"].concat(R.apply(0,[e.x,e.y].concat(t.slice(1))));break;case\"S\":\"C\"==n||\"S\"==n?(r=2*e.x-e.bx,i=2*e.y-e.by):(r=e.x,i=e.y),t=[\"C\",r,i].concat(t.slice(1));break;case\"T\":\"Q\"==n||\"T\"==n?(e.qx=2*e.x-e.qx,e.qy=2*e.y-e.qy):(e.qx=e.x,e.qy=e.y),t=[\"C\"].concat(G(e.x,e.y,e.qx,e.qy,t[1],t[2]));break;case\"Q\":e.qx=t[1],e.qy=t[2],t=[\"C\"].concat(G(e.x,e.y,t[1],t[2],t[3],t[4]));break;case\"L\":t=[\"C\"].concat(O(e.x,e.y,t[1],t[2]));break;case\"H\":t=[\"C\"].concat(O(e.x,e.y,t[1],e.y));break;case\"V\":t=[\"C\"].concat(O(e.x,e.y,e.x,t[1]));break;case\"Z\":t=[\"C\"].concat(O(e.x,e.y,e.X,e.Y))}return t},l=function(t,e){if(t[e].length>7){t[e].shift();for(var n=t[e];n.length;)h[e]=\"A\",i&&(d[e]=\"A\"),t.splice(e++,0,[\"C\"].concat(n.splice(0,6)));t.splice(e,1),x=f(r.length,i&&i.length||0)}},c=function(t,e,n,a,o){t&&e&&\"M\"==t[o][0]&&\"M\"!=e[o][0]&&(e.splice(o,0,[\"M\",a.x,a.y]),n.bx=0,n.by=0,n.x=t[o][1],n.y=t[o][2],x=f(r.length,i&&i.length||0))},h=[],d=[],p=\"\",v=\"\",m=0,x=f(r.length,i&&i.length||0);m<x;m++){r[m]&&(p=r[m][0]),\"C\"!=p&&(h[m]=p,m&&(v=h[m-1])),r[m]=s(r[m],a,v),\"A\"!=h[m]&&\"C\"==p&&(h[m]=\"C\"),l(r,m),i&&(i[m]&&(p=i[m][0]),\"C\"!=p&&(d[m]=p,m&&(v=d[m-1])),i[m]=s(i[m],o,v),\"A\"!=d[m]&&\"C\"==p&&(d[m]=\"C\"),l(i,m)),c(r,i,a,o,m),c(i,r,o,a,m);var b=r[m],F=i&&i[m],C=b.length,w=i&&F.length;a.x=b[C-2],a.y=b[C-1],a.bx=u(b[C-4])||a.x,a.by=u(b[C-3])||a.y,o.bx=i&&(u(F[w-4])||o.x),o.by=i&&(u(F[w-3])||o.y),o.x=i&&F[w-2],o.y=i&&F[w-1]}return i||(n.curve=y(r)),i?[r,i]:r}function X(t,e){for(var n=[],r=0,i=t.length;i-2*!e>r;r+=2){var a=[{x:+t[r-2],y:+t[r-1]},{x:+t[r],y:+t[r+1]},{x:+t[r+2],y:+t[r+3]},{x:+t[r+4],y:+t[r+5]}];e?r?i-4==r?a[3]={x:+t[0],y:+t[1]}:i-2==r&&(a[2]={x:+t[0],y:+t[1]},a[3]={x:+t[2],y:+t[3]}):a[0]={x:+t[i-2],y:+t[i-1]}:i-4==r?a[3]=a[2]:r||(a[0]={x:+t[r],y:+t[r+1]}),n.push([\"C\",(-a[0].x+6*a[1].x+a[2].x)/6,(-a[0].y+6*a[1].y+a[2].y)/6,(a[1].x+6*a[2].x-a[3].x)/6,(a[1].y+6*a[2].y-a[3].y)/6,a[2].x,a[2].y])}return n}t.path=g,t.path.getTotalLength=F,t.path.getPointAtLength=C,t.path.getSubpath=function(t,e,n){if(this.getTotalLength(t)-n<1e-6)return w(t,e).end;var r=w(t,n,1);return e?w(r,e).end:r},i.getTotalLength=function(){if(this.node.getTotalLength)return this.node.getTotalLength()},i.getPointAtLength=function(t){return C(this.attr(\"d\"),t)},i.getSubpath=function(e,n){return t.path.getSubpath(this.attr(\"d\"),e,n)},t._.box=v,t.path.findDotsAtSegment=B,t.path.bezierBBox=A,t.path.isPointInsideBBox=E,t.closest=function(e,n,r,i){for(var a=100,o=v(e-a/2,n-a/2,a,a),s=[],u=r[0].hasOwnProperty(\"x\")?function(t){return{x:r[t].x,y:r[t].y}}:function(t){return{x:r[t],y:i[t]}},l=0;a<=1e6&&!l;){for(var c=0,h=r.length;c<h;c++){var f=u(c);if(E(o,f.x,f.y)){l++,s.push(f);break}}l||(o=v(e-(a*=2)/2,n-a/2,a,a))}if(1e6!=a){var d,p=1/0;for(c=0,h=s.length;c<h;c++){var g=t.len(e,n,s[c].x,s[c].y);p>g&&(p=g,s[c].len=g,d=s[c])}return d}},t.path.isBBoxIntersect=S,t.path.intersection=function(t,e){return M(t,e)},t.path.intersectionNumber=function(t,e){return M(t,e,1)},t.path.isPointInside=function(t,e,n){var r=N(t);return E(r,e,n)&&M(t,[[\"M\",e,n],[\"H\",r.x2+10]],1)%2==1},t.path.getBBox=N,t.path.get=q,t.path.toRelative=function(e){var n=g(e),r=String.prototype.toLowerCase;if(n.rel)return y(n.rel);t.is(e,\"array\")&&t.is(e&&e[0],\"array\")||(e=t.parsePathString(e));var i=[],a=0,o=0,s=0,u=0,l=0;\"M\"==e[0][0]&&(s=a=e[0][1],u=o=e[0][2],l++,i.push([\"M\",a,o]));for(var c=l,h=e.length;c<h;c++){var f=i[c]=[],d=e[c];if(d[0]!=r.call(d[0]))switch(f[0]=r.call(d[0]),f[0]){case\"a\":f[1]=d[1],f[2]=d[2],f[3]=d[3],f[4]=d[4],f[5]=d[5],f[6]=+(d[6]-a).toFixed(3),f[7]=+(d[7]-o).toFixed(3);break;case\"v\":f[1]=+(d[1]-o).toFixed(3);break;case\"m\":s=d[1],u=d[2];default:for(var p=1,v=d.length;p<v;p++)f[p]=+(d[p]-(p%2?a:o)).toFixed(3)}else{f=i[c]=[],\"m\"==d[0]&&(s=d[1]+a,u=d[2]+o);for(var x=0,b=d.length;x<b;x++)i[c][x]=d[x]}var F=i[c].length;switch(i[c][0]){case\"z\":a=s,o=u;break;case\"h\":a+=+i[c][F-1];break;case\"v\":o+=+i[c][F-1];break;default:a+=+i[c][F-2],o+=+i[c][F-1]}}return i.toString=m,n.rel=y(i),i},t.path.toAbsolute=V,t.path.toCubic=U,t.path.map=function(t,e){if(!e)return t;var n,r,i,a,o,s,u;for(i=0,o=(t=U(t)).length;i<o;i++)for(a=1,s=(u=t[i]).length;a<s;a+=2)n=e.x(u[a],u[a+1]),r=e.y(u[a],u[a+1]),u[a]=n,u[a+1]=r;return t},t.path.toString=m,t.path.clone=y})),i.plugin((function(t,e,n,i){var a=Math.max,o=Math.min,s=function(t){if(this.items=[],this.bindings={},this.length=0,this.type=\"set\",t)for(var e=0,n=t.length;e<n;e++)t[e]&&(this[this.items.length]=this.items[this.items.length]=t[e],this.length++)},u=s.prototype;u.push=function(){for(var t,e,n=0,r=arguments.length;n<r;n++)(t=arguments[n])&&(this[e=this.items.length]=this.items[e]=t,this.length++);return this},u.pop=function(){return this.length&&delete this[this.length--],this.items.pop()},u.forEach=function(t,e){for(var n=0,r=this.items.length;n<r;n++)if(!1===t.call(e,this.items[n],n))return this;return this},u.animate=function(e,n,i,a){\"function\"!=typeof i||i.length||(a=i,i=r.linear),e instanceof t._.Animation&&(a=e.callback,i=e.easing,n=i.dur,e=e.attr);var o=arguments;if(t.is(e,\"array\")&&t.is(o[o.length-1],\"array\"))var s=!0;var u,l=function(){u?this.b=u:u=this.b},c=0,h=this,f=a&&function(){++c==h.length&&a.call(this)};return this.forEach((function(t,r){eve.once(\"snap.animcreated.\"+t.id,l),s?o[r]&&t.animate.apply(t,o[r]):t.animate(e,n,i,f)}))},u.remove=function(){for(;this.length;)this.pop().remove();return this},u.bind=function(t,e,n){var r={};if(\"function\"==typeof e)this.bindings[t]=e;else{var i=n||t;this.bindings[t]=function(t){r[i]=t,e.attr(r)}}return this},u.attr=function(t){var e={};for(var n in t)this.bindings[n]?this.bindings[n](t[n]):e[n]=t[n];for(var r=0,i=this.items.length;r<i;r++)this.items[r].attr(e);return this},u.clear=function(){for(;this.length;)this.pop()},u.splice=function(t,e,n){t=t<0?a(this.length+t,0):t,e=a(0,o(this.length-t,e));var r,i=[],u=[],l=[];for(r=2;r<arguments.length;r++)l.push(arguments[r]);for(r=0;r<e;r++)u.push(this[t+r]);for(;r<this.length-t;r++)i.push(this[t+r]);var c=l.length;for(r=0;r<c+i.length;r++)this.items[t+r]=this[t+r]=r<c?l[r]:i[r-c];for(r=this.items.length=this.length-=e-c;this[r];)delete this[r++];return new s(u)},u.exclude=function(t){for(var e=0,n=this.length;e<n;e++)if(this[e]==t)return this.splice(e,1),!0;return!1},u.insertAfter=function(t){for(var e=this.items.length;e--;)this.items[e].insertAfter(t);return this},u.getBBox=function(){for(var t=[],e=[],n=[],r=[],i=this.items.length;i--;)if(!this.items[i].removed){var s=this.items[i].getBBox();t.push(s.x),e.push(s.y),n.push(s.x+s.width),r.push(s.y+s.height)}return{x:t=o.apply(0,t),y:e=o.apply(0,e),x2:n=a.apply(0,n),y2:r=a.apply(0,r),width:n-t,height:r-e,cx:t+(n-t)/2,cy:e+(r-e)/2}},u.clone=function(t){t=new s;for(var e=0,n=this.items.length;e<n;e++)t.push(this.items[e].clone());return t},u.toString=function(){return\"Snap\\u2018s set\"},u.type=\"set\",t.Set=s,t.set=function(){var t=new s;return arguments.length&&t.push.apply(t,Array.prototype.slice.call(arguments,0)),t}})),i.plugin((function(t,e,n,r){var i={},a=/[%a-z]+$/i,o=String;function s(t){var e=t[0];switch(e.toLowerCase()){case\"t\":return[e,0,0];case\"m\":return[e,1,0,0,1,0,0];case\"r\":return 4==t.length?[e,0,t[2],t[3]]:[e,0];case\"s\":return 5==t.length?[e,1,1,t[3],t[4]]:3==t.length?[e,1,1]:[e,1]}}function u(t){return t}function l(t){return t.join(\" \")}function c(e){return t.rgb(e[0],e[1],e[2],e[3])}function h(t){var e,n,r,i,a,o,s=0,u=[];for(e=0,n=t.length;e<n;e++){for(a=\"[\",o=['\"'+t[e][0]+'\"'],r=1,i=t[e].length;r<i;r++)o[r]=\"val[\"+s+++\"]\";a+=o+\"]\",u[e]=a}return Function(\"val\",\"return Snap.path.toString.call([\"+u+\"])\")}function f(t){for(var e=[],n=0,r=t.length;n<r;n++)for(var i=1,a=t[n].length;i<a;i++)e.push(t[n][i]);return e}function d(t){return isFinite(t)}i.stroke=i.fill=\"colour\",e.prototype.equal=function(t,e){return eve(\"snap.util.equal\",this,t,e).firstDefined()},eve.on(\"snap.util.equal\",(function(e,n){var r,p,g=o(this.attr(e)||\"\"),v=this;if(\"colour\"==i[e])return r=t.color(g),p=t.color(n),{from:[r.r,r.g,r.b,r.opacity],to:[p.r,p.g,p.b,p.opacity],f:c};if(\"viewBox\"==e)return{from:r=this.attr(e).vb.split(\" \").map(Number),to:p=n.split(\" \").map(Number),f:l};if(\"transform\"==e||\"gradientTransform\"==e||\"patternTransform\"==e)return\"string\"==typeof n&&(n=o(n).replace(/\\.{3}|\\u2026/g,g)),function(e,n,r){e=e||new t.Matrix,n=n||new t.Matrix,e=t.parseTransformString(e.toTransformString())||[],n=t.parseTransformString(n.toTransformString())||[];for(var i,a,o,u,l=Math.max(e.length,n.length),c=[],d=[],p=0;p<l;p++){if(o=e[p]||s(n[p]),u=n[p]||s(o),o[0]!=u[0]||\"r\"==o[0].toLowerCase()&&(o[2]!=u[2]||o[3]!=u[3])||\"s\"==o[0].toLowerCase()&&(o[3]!=u[3]||o[4]!=u[4])){e=t._.transform2matrix(e,r()),n=t._.transform2matrix(n,r()),c=[[\"m\",e.a,e.b,e.c,e.d,e.e,e.f]],d=[[\"m\",n.a,n.b,n.c,n.d,n.e,n.f]];break}for(c[p]=[],d[p]=[],i=0,a=Math.max(o.length,u.length);i<a;i++)i in o&&(c[p][i]=o[i]),i in u&&(d[p][i]=u[i])}return{from:f(c),to:f(d),f:h(c)}}(g=this.matrix,n=t._.rgTransform.test(n)?t._.transform2matrix(n,this.getBBox()):t._.transform2matrix(t._.svgTransform2string(n),this.getBBox()),(function(){return v.getBBox(1)}));if(\"d\"==e||\"path\"==e)return{from:f((r=t.path.toCubic(g,n))[0]),to:f(r[1]),f:h(r[0])};if(\"points\"==e)return{from:r=o(g).split(t._.separator),to:p=o(n).split(t._.separator),f:function(t){return t}};if(d(g)&&d(n))return{from:parseFloat(g),to:parseFloat(n),f:u};var m,y,x,b=g.match(a),F=o(n).match(a);return b&&(y=b,x=F,t.is(y,\"array\")&&t.is(x,\"array\")&&y.toString()==x.toString())?{from:parseFloat(g),to:parseFloat(n),f:(m=b,function(t){return+t.toFixed(3)+m})}:{from:this.asPX(e),to:this.asPX(e,n),f:u}}))})),i.plugin((function(t,e,n,r){for(var i=e.prototype,a=(\"createTouch\"in r.doc),o=[\"click\",\"dblclick\",\"mousedown\",\"mousemove\",\"mouseout\",\"mouseover\",\"mouseup\",\"touchstart\",\"touchmove\",\"touchend\",\"touchcancel\"],s={mousedown:\"touchstart\",mousemove:\"touchmove\",mouseup:\"touchend\"},u=function(t,e){var n=\"y\"==t?\"scrollTop\":\"scrollLeft\",i=e&&e.node?e.node.ownerDocument:r.doc;return i[n in i.documentElement?\"documentElement\":\"body\"][n]},l=function(){return this.originalEvent.preventDefault()},c=function(){return this.originalEvent.stopPropagation()},h=function(t,e,n,r){var i=a&&s[e]?s[e]:e,o=function(i){var o=u(\"y\",r),h=u(\"x\",r);if(a&&s.hasOwnProperty(e))for(var f=0,d=i.targetTouches&&i.targetTouches.length;f<d;f++)if(i.targetTouches[f].target==t||t.contains(i.targetTouches[f].target)){var p=i;(i=i.targetTouches[f]).originalEvent=p,i.preventDefault=l,i.stopPropagation=c;break}var g=i.clientX+h,v=i.clientY+o;return n.call(r,i,g,v)};return e!==i&&t.addEventListener(e,o,!1),t.addEventListener(i,o,!1),function(){return e!==i&&t.removeEventListener(e,o,!1),t.removeEventListener(i,o,!1),!0}},f=[],d=function(t){for(var e,n=t.clientX,r=t.clientY,i=u(\"y\"),o=u(\"x\"),s=f.length;s--;){if(e=f[s],a){for(var l,c=t.touches&&t.touches.length;c--;)if((l=t.touches[c]).identifier==e.el._drag.id||e.el.node.contains(l.target)){n=l.clientX,r=l.clientY,(t.originalEvent?t.originalEvent:t).preventDefault();break}}else t.preventDefault();var h=e.el.node;h.nextSibling,h.parentNode,h.style.display;n+=o,r+=i,eve(\"snap.drag.move.\"+e.el.id,e.move_scope||e.el,n-e.el._drag.x,r-e.el._drag.y,n,r,t)}},p=function(e){t.unmousemove(d).unmouseup(p);for(var n,r=f.length;r--;)(n=f[r]).el._drag={},eve(\"snap.drag.end.\"+n.el.id,n.end_scope||n.start_scope||n.move_scope||n.el,e),eve.off(\"snap.drag.*.\"+n.el.id);f=[]},g=o.length;g--;)!function(e){t[e]=i[e]=function(n,r){if(t.is(n,\"function\"))this.events=this.events||[],this.events.push({name:e,f:n,unbind:h(this.node||document,e,n,r||this)});else for(var i=0,a=this.events.length;i<a;i++)if(this.events[i].name==e)try{this.events[i].f.call(this)}catch(o){}return this},t[\"un\"+e]=i[\"un\"+e]=function(t){for(var n=this.events||[],r=n.length;r--;)if(n[r].name==e&&(n[r].f==t||!t))return n[r].unbind(),n.splice(r,1),!n.length&&delete this.events,this;return this}}(o[g]);i.hover=function(t,e,n,r){return this.mouseover(t,n).mouseout(e,r||n)},i.unhover=function(t,e){return this.unmouseover(t).unmouseout(e)};var v=[];i.drag=function(e,n,r,i,a,o){var s,u=this;if(!arguments.length)return u.drag((function(t,e){this.attr({transform:s+(s?\"T\":\"t\")+[t,e]})}),(function(){s=this.transform().local}));function l(s,l,c){(s.originalEvent||s).preventDefault(),u._drag.x=l,u._drag.y=c,u._drag.id=s.identifier,!f.length&&t.mousemove(d).mouseup(p),f.push({el:u,move_scope:i,start_scope:a,end_scope:o}),n&&eve.on(\"snap.drag.start.\"+u.id,n),e&&eve.on(\"snap.drag.move.\"+u.id,e),r&&eve.on(\"snap.drag.end.\"+u.id,r),eve(\"snap.drag.start.\"+u.id,a||i||u,l,c,s)}function c(t,e,n){eve(\"snap.draginit.\"+u.id,u,t,e,n)}return eve.on(\"snap.draginit.\"+u.id,l),u._drag={},v.push({el:u,start:l,init:c}),u.mousedown(c),u},i.undrag=function(){for(var e=v.length;e--;)v[e].el==this&&(this.unmousedown(v[e].init),v.splice(e,1),eve.unbind(\"snap.drag.*.\"+this.id),eve.unbind(\"snap.draginit.\"+this.id));return!v.length&&t.unmousemove(d).unmouseup(p),this}})),i.plugin((function(t,e,n,r){e.prototype;var i=n.prototype,a=/^\\s*url\\((.+)\\)/,o=String,s=t._.$;t.filter={},i.filter=function(n){var r=this;\"svg\"!=r.type&&(r=r.paper);var i=t.parse(o(n)),a=t._.id(),u=(r.node.offsetWidth,r.node.offsetHeight,s(\"filter\"));return s(u,{id:a,filterUnits:\"userSpaceOnUse\"}),u.appendChild(i.node),r.defs.appendChild(u),new e(u)},eve.on(\"snap.util.getattr.filter\",(function(){eve.stop();var e=s(this.node,\"filter\");if(e){var n=o(e).match(a);return n&&t.select(n[1])}})),eve.on(\"snap.util.attr.filter\",(function(n){if(n instanceof e&&\"filter\"==n.type){eve.stop();var r=n.node.id;r||(s(n.node,{id:n.id}),r=n.id),s(this.node,{filter:t.url(r)})}n&&\"none\"!=n||(eve.stop(),this.node.removeAttribute(\"filter\"))})),t.filter.blur=function(e,n){null==e&&(e=2);var r=null==n?e:[e,n];return t.format('<feGaussianBlur stdDeviation=\"{def}\"/>',{def:r})},t.filter.blur.toString=function(){return this()},t.filter.shadow=function(e,n,r,i,a){return null==a&&(null==i?(a=r,r=4,i=\"#000\"):(a=i,i=r,r=4)),null==r&&(r=4),null==a&&(a=1),null==e&&(e=0,n=2),null==n&&(n=e),i=t.color(i),t.format('<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"{blur}\"/><feOffset dx=\"{dx}\" dy=\"{dy}\" result=\"offsetblur\"/><feFlood flood-color=\"{color}\"/><feComposite in2=\"offsetblur\" operator=\"in\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"{opacity}\"/></feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge>',{color:i,dx:e,dy:n,blur:r,opacity:a})},t.filter.shadow.toString=function(){return this()},t.filter.grayscale=function(e){return null==e&&(e=1),t.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {b} {h} 0 0 0 0 0 1 0\"/>',{a:.2126+.7874*(1-e),b:.7152-.7152*(1-e),c:.0722-.0722*(1-e),d:.2126-.2126*(1-e),e:.7152+.2848*(1-e),f:.0722-.0722*(1-e),g:.2126-.2126*(1-e),h:.0722+.9278*(1-e)})},t.filter.grayscale.toString=function(){return this()},t.filter.sepia=function(e){return null==e&&(e=1),t.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {h} {i} 0 0 0 0 0 1 0\"/>',{a:.393+.607*(1-e),b:.769-.769*(1-e),c:.189-.189*(1-e),d:.349-.349*(1-e),e:.686+.314*(1-e),f:.168-.168*(1-e),g:.272-.272*(1-e),h:.534-.534*(1-e),i:.131+.869*(1-e)})},t.filter.sepia.toString=function(){return this()},t.filter.saturate=function(e){return null==e&&(e=1),t.format('<feColorMatrix type=\"saturate\" values=\"{amount}\"/>',{amount:1-e})},t.filter.saturate.toString=function(){return this()},t.filter.hueRotate=function(e){return e=e||0,t.format('<feColorMatrix type=\"hueRotate\" values=\"{angle}\"/>',{angle:e})},t.filter.hueRotate.toString=function(){return this()},t.filter.invert=function(e){return null==e&&(e=1),t.format('<feComponentTransfer><feFuncR type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncG type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncB type=\"table\" tableValues=\"{amount} {amount2}\"/></feComponentTransfer>',{amount:e,amount2:1-e})},t.filter.invert.toString=function(){return this()},t.filter.brightness=function(e){return null==e&&(e=1),t.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\"/><feFuncG type=\"linear\" slope=\"{amount}\"/><feFuncB type=\"linear\" slope=\"{amount}\"/></feComponentTransfer>',{amount:e})},t.filter.brightness.toString=function(){return this()},t.filter.contrast=function(e){return null==e&&(e=1),t.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncG type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncB type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/></feComponentTransfer>',{amount:e,amount2:.5-e/2})},t.filter.contrast.toString=function(){return this()}})),i.plugin((function(t,e,n,r,i){var a=t._.box,o=t.is,s=/^[^a-z]*([tbmlrc])/i,u=function(){return\"T\"+this.dx+\",\"+this.dy};e.prototype.getAlign=function(t,e){null==e&&o(t,\"string\")&&(e=t,t=null);var n=(t=t||this.paper).getBBox?t.getBBox():a(t),r=this.getBBox(),i={};switch(e=(e=e&&e.match(s))?e[1].toLowerCase():\"c\"){case\"t\":i.dx=0,i.dy=n.y-r.y;break;case\"b\":i.dx=0,i.dy=n.y2-r.y2;break;case\"m\":i.dx=0,i.dy=n.cy-r.cy;break;case\"l\":i.dx=n.x-r.x,i.dy=0;break;case\"r\":i.dx=n.x2-r.x2,i.dy=0;break;default:i.dx=n.cx-r.cx,i.dy=0}return i.toString=u,i},e.prototype.align=function(t,e){return this.transform(\"...\"+this.getAlign(t,e))}})),i.plugin((function(t,e,n,i,a){var o=e.prototype,s=t.is,u=String,l=\"hasOwnProperty\";function c(t,e,n){return function(r){var i=r.slice(t,e);return 1==i.length&&(i=i[0]),n?n(i):i}}var h=function(t,e,n,i){\"function\"!=typeof n||n.length||(i=n,n=r.linear),this.attr=t,this.dur=e,n&&(this.easing=n),i&&(this.callback=i)};t._.Animation=h,t.animation=function(t,e,n,r){return new h(t,e,n,r)},o.inAnim=function(){var t=this,e=[];for(var n in t.anims)t.anims[l](n)&&function(t){e.push({anim:new h(t._attrs,t.dur,t.easing,t._callback),mina:t,curStatus:t.status(),status:function(e){return t.status(e)},stop:function(){t.stop()}})}(t.anims[n]);return e},t.animate=function(t,e,n,i,a,o){\"function\"!=typeof a||a.length||(o=a,a=r.linear);var s=r.time(),u=r(t,e,s,s+i,r.time,n,a);return o&&eve.once(\"mina.finish.\"+u.id,o),u},o.stop=function(){for(var t=this.inAnim(),e=0,n=t.length;e<n;e++)t[e].stop();return this},o.animate=function(t,e,n,i){\"function\"!=typeof n||n.length||(i=n,n=r.linear),t instanceof h&&(i=t.callback,n=t.easing,e=t.dur,t=t.attr);var a,o,f,d,p=[],g=[],v={},m=this;for(var y in t)if(t[l](y)){m.equal?(a=(d=m.equal(y,u(t[y]))).from,o=d.to,f=d.f):(a=+m.attr(y),o=+t[y]);var x=s(a,\"array\")?a.length:1;v[y]=c(p.length,p.length+x,f),p=p.concat(a),g=g.concat(o)}var b=r.time(),F=r(p,g,b,b+e,r.time,(function(t){var e={};for(var n in v)v[l](n)&&(e[n]=v[n](t));m.attr(e)}),n);return m.anims[F.id]=F,F._attrs=t,F._callback=i,eve(\"snap.animcreated.\"+m.id,F),eve.once(\"mina.finish.\"+F.id,(function(){eve.off(\"mina.*.\"+F.id),delete m.anims[F.id],i&&i.call(m)})),eve.once(\"mina.stop.\"+F.id,(function(){eve.off(\"mina.*.\"+F.id),delete m.anims[F.id]})),m}})),i.plugin((function(t,e,n,r){function i(t){t=t.split(/(?=#)/);var e=new String(t[5]);return e[50]=t[0],e[100]=t[1],e[200]=t[2],e[300]=t[3],e[400]=t[4],e[500]=t[5],e[600]=t[6],e[700]=t[7],e[800]=t[8],e[900]=t[9],t[10]&&(e.A100=t[10],e.A200=t[11],e.A400=t[12],e.A700=t[13]),e}t.mui={},t.flat={},t.mui.red=i(\"#ffebee#ffcdd2#ef9a9a#e57373#ef5350#f44336#e53935#d32f2f#c62828#b71c1c#ff8a80#ff5252#ff1744#d50000\"),t.mui.pink=i(\"#FCE4EC#F8BBD0#F48FB1#F06292#EC407A#E91E63#D81B60#C2185B#AD1457#880E4F#FF80AB#FF4081#F50057#C51162\"),t.mui.purple=i(\"#F3E5F5#E1BEE7#CE93D8#BA68C8#AB47BC#9C27B0#8E24AA#7B1FA2#6A1B9A#4A148C#EA80FC#E040FB#D500F9#AA00FF\"),t.mui.deeppurple=i(\"#EDE7F6#D1C4E9#B39DDB#9575CD#7E57C2#673AB7#5E35B1#512DA8#4527A0#311B92#B388FF#7C4DFF#651FFF#6200EA\"),t.mui.indigo=i(\"#E8EAF6#C5CAE9#9FA8DA#7986CB#5C6BC0#3F51B5#3949AB#303F9F#283593#1A237E#8C9EFF#536DFE#3D5AFE#304FFE\"),t.mui.blue=i(\"#E3F2FD#BBDEFB#90CAF9#64B5F6#64B5F6#2196F3#1E88E5#1976D2#1565C0#0D47A1#82B1FF#448AFF#2979FF#2962FF\"),t.mui.lightblue=i(\"#E1F5FE#B3E5FC#81D4FA#4FC3F7#29B6F6#03A9F4#039BE5#0288D1#0277BD#01579B#80D8FF#40C4FF#00B0FF#0091EA\"),t.mui.cyan=i(\"#E0F7FA#B2EBF2#80DEEA#4DD0E1#26C6DA#00BCD4#00ACC1#0097A7#00838F#006064#84FFFF#18FFFF#00E5FF#00B8D4\"),t.mui.teal=i(\"#E0F2F1#B2DFDB#80CBC4#4DB6AC#26A69A#009688#00897B#00796B#00695C#004D40#A7FFEB#64FFDA#1DE9B6#00BFA5\"),t.mui.green=i(\"#E8F5E9#C8E6C9#A5D6A7#81C784#66BB6A#4CAF50#43A047#388E3C#2E7D32#1B5E20#B9F6CA#69F0AE#00E676#00C853\"),t.mui.lightgreen=i(\"#F1F8E9#DCEDC8#C5E1A5#AED581#9CCC65#8BC34A#7CB342#689F38#558B2F#33691E#CCFF90#B2FF59#76FF03#64DD17\"),t.mui.lime=i(\"#F9FBE7#F0F4C3#E6EE9C#DCE775#D4E157#CDDC39#C0CA33#AFB42B#9E9D24#827717#F4FF81#EEFF41#C6FF00#AEEA00\"),t.mui.yellow=i(\"#FFFDE7#FFF9C4#FFF59D#FFF176#FFEE58#FFEB3B#FDD835#FBC02D#F9A825#F57F17#FFFF8D#FFFF00#FFEA00#FFD600\"),t.mui.amber=i(\"#FFF8E1#FFECB3#FFE082#FFD54F#FFCA28#FFC107#FFB300#FFA000#FF8F00#FF6F00#FFE57F#FFD740#FFC400#FFAB00\"),t.mui.orange=i(\"#FFF3E0#FFE0B2#FFCC80#FFB74D#FFA726#FF9800#FB8C00#F57C00#EF6C00#E65100#FFD180#FFAB40#FF9100#FF6D00\"),t.mui.deeporange=i(\"#FBE9E7#FFCCBC#FFAB91#FF8A65#FF7043#FF5722#F4511E#E64A19#D84315#BF360C#FF9E80#FF6E40#FF3D00#DD2C00\"),t.mui.brown=i(\"#EFEBE9#D7CCC8#BCAAA4#A1887F#8D6E63#795548#6D4C41#5D4037#4E342E#3E2723\"),t.mui.grey=i(\"#FAFAFA#F5F5F5#EEEEEE#E0E0E0#BDBDBD#9E9E9E#757575#616161#424242#212121\"),t.mui.bluegrey=i(\"#ECEFF1#CFD8DC#B0BEC5#90A4AE#78909C#607D8B#546E7A#455A64#37474F#263238\"),t.flat.turquoise=\"#1abc9c\",t.flat.greensea=\"#16a085\",t.flat.sunflower=\"#f1c40f\",t.flat.orange=\"#f39c12\",t.flat.emerland=\"#2ecc71\",t.flat.nephritis=\"#27ae60\",t.flat.carrot=\"#e67e22\",t.flat.pumpkin=\"#d35400\",t.flat.peterriver=\"#3498db\",t.flat.belizehole=\"#2980b9\",t.flat.alizarin=\"#e74c3c\",t.flat.pomegranate=\"#c0392b\",t.flat.amethyst=\"#9b59b6\",t.flat.wisteria=\"#8e44ad\",t.flat.clouds=\"#ecf0f1\",t.flat.silver=\"#bdc3c7\",t.flat.wetasphalt=\"#34495e\",t.flat.midnightblue=\"#2c3e50\",t.flat.concrete=\"#95a5a6\",t.flat.asbestos=\"#7f8c8d\",t.importMUIColors=function(){for(var e in t.mui)t.mui.hasOwnProperty(e)&&(window[e]=t.mui[e])}})),t.exports=i}}]);","map":{"version":3,"sources":["static/chunks/777cf710.2d9d71c2907be1e26d6a.js"],"names":["window","push","QczR","module","exports","__webpack_require__","eve","mina","requestID","animations","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","setTimeout","Date","getTime","isArray","Array","a","Object","prototype","toString","call","idgen","idprefix","timer","now","sta","val","this","s","ds","b","dur","B","speed","spd","duration","stopit","id","update","pause","pdif","get","resume","frame","res","start","j","jj","length","end","easing","set","timeStamp","len","i","hasOwnProperty","A","anim","linear","status","stop","time","getById","n","easeout","Math","pow","easein","easeinout","q","Q","sqrt","x","y","t","abs","backin","backout","elastic","sin","PI","bounce","p","Snap","root","w","h","nodeType","wrap","is","apply","Element","glob","doc","querySelector","String","e","Paper","version","_","win","document","has","Str","toFloat","parseFloat","toInt","parseInt","math","mmax","max","mmin","min","objectToString","round","colourRegExp","commaSpaces","separator","hsrg","hs","rg","pathCommand","tCommand","pathValues","ID","el","type","xlink","xmlns","hub","url","$","attr","createTextNode","text","createComment","substring","getAttributeNS","getAttribute","nodeValue","key","setAttributeNS","setAttribute","removeAttribute","createElementNS","o","toLowerCase","isFinite","slice","repush","array","item","ii","splice","cacher","f","scope","postprocessor","newf","arg","arguments","args","join","cache","count","shift","rad","deg","format","tokenRegex","objNotationRegex","str","obj","replace","all","name","quote","quotedName","isFunc","replacer","clone","constructor","angle","tan","cos","asin","num","acos","atan","atan2","x1","y1","x2","y2","x3","y3","len2","closestPoint","path","distance2","dx","dy","best","bestLength","scan","scanDistance","pathNode","node","pathLength","getTotalLength","precision","pathSegList","numberOfItems","bestDistance","Infinity","scanLength","getPointAtLength","before","after","beforeLength","afterLength","beforeDistance","afterDistance","distance","snapTo","values","value","tolerance","rem","getRGB","colour","indexOf","r","g","hex","error","rgbtoString","charAt","toHex","red","green","blue","opacity","rgb","match","split","hsb2rgb","hsl2rgb","hsb","hsl","l","toFixed","color","getElementsByTagName","style","out","defaultView","getComputedStyle","getPropertyValue","hsbtoString","hsltoString","prepareRGB","string","clr","packageRGB","rgb2hsl","rgb2hsb","v","R","G","X","C","V","L","M","m","parsePathString","pathString","pth","arr","paramCounts","c","u","z","data","params","concat","parseTransformString","TString","svgTransform2string","tstr","rgTransform","transform2matrix","bbox","tdata","Matrix","bb","tlen","command","absolute","inver","invert","translate","rotate","width","height","scale","add","_unit2px","svg","getSomeSVG","mgr","class","fill","appendChild","getW","getBBox","getH","nam","removeChild","contains","compareDocumentPosition","ownerSVGElement","select","add2group","list","forEach","children","childNodes","snap","paper","tagName","nodeName","anims","transform","mask","pattern","symbol","method","Fragment","frag","make","parent","desc","defs","proto","ownerDocument","body","dom","contentDocument","jsonFiller","getSomeDefs","parentNode","pdefs","query","selectAll","nodelist","querySelectorAll","setInterval","attributes","firstDefined","json","att","parse","createDocumentFragment","full","div","createElement","innerHTML","firstChild","fragment","ch","toJSON","on","nt","css","lastIndexOf","letter","cssAttr","alignment-baseline","baseline-shift","clip","clip-path","clip-rule","color-interpolation","color-interpolation-filters","color-profile","color-rendering","cursor","direction","display","dominant-baseline","enable-background","fill-opacity","fill-rule","filter","flood-color","flood-opacity","font","font-family","font-size","font-size-adjust","font-stretch","font-style","font-variant","font-weight","glyph-orientation-horizontal","glyph-orientation-vertical","image-rendering","kerning","letter-spacing","lighting-color","marker","marker-end","marker-mid","marker-start","overflow","pointer-events","shape-rendering","stop-color","stop-opacity","stroke","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","text-anchor","text-decoration","text-rendering","unicode-bidi","visibility","word-spacing","writing-mode","toUpperCase","ajax","postData","req","XMLHttpRequest","pd","encodeURIComponent","open","setRequestHeader","once","onreadystatechange","readyState","send","load","responseText","getElementByPoint","canvas","target","elementFromPoint","opera","so","elem","box","getBoundingClientRect","docElem","documentElement","clientTop","clientLeft","top","pageYOffset","scrollTop","left","pageXOffset","scrollLeft","getOffset","sr","createSVGRect","hits","getIntersectionList","plugin","elproto","unit2px","isWithoutTransform","getClientRects","removed","localMatrix","original","href","getElementById","pathfinder","deflt","bboxwt","realPath","matrix","map","propString","extractTransform","doReturn","test","papa","global","getCTM","local","ms","localString","toTransformString","globalMatrix","totalMatrix","diffMatrix","total","gradientTransform","patternTransform","append","it","appendTo","prepend","first","insertBefore","prependTo","nextSibling","insertAfter","remove","asPX","use","xlink:href","cloneNode","els","ids","uses","urltest","linktest","oldid","old","fs","fixids","toDefs","toPattern","patternUnits","viewBox","refX","refY","cx","cy","markerWidth","markerHeight","orient","eldata","chld","removeData","outerSVG","innerSVG","toDataURL","btoa","contents","unescape","d","matrixproto","norm","normalize","mag","aNew","bNew","multLeft","cNew","eNew","me","skewX","skew","skewY","fromCharCode","offset","determinant","row","scalex","shear","scaley","isSimple","isSuperSimple","noRotation","shorter","clipIt","reURLValue","URL","fillStroke","grad","gradient","attrs","deurl","undefined","gradrg","setFontSize","fontSize","textExtract","chi","getFontSize","tokens","stops","seed","step","k","toAbsolute","txt","className","baseVal","vb","rx","ry","tp","textPath","tuner","chunk","tuned","getter","setter","textContent","internal","rgNotSpace","addClass","clazz","finalValue","classes","curClasses","removeClass","pos","hasClass","toggleClass","flag","operators","+","-","/","*","reUnit","reAddon","getNumber","getUnit","unit","plus","evnt","atr","aUnit","op","isNaN","bplus","from","to","rect","circle","preload","onerror","src","img","cssText","onload","image","preserveAspectRatio","offsetWidth","offsetHeight","ellipse","group","vbx","vby","vbw","vbh","ptrn","vx","vy","vw","vh","line","polyline","points","polygon","Gstops","GaddStop","inserted","GgetBBox","GsetStops","addStop","gradientLinear","setStops","gradientRadial","fx","fy","unshift","gradientUnits","clear","next","p2s","paths","ps","sleep","r1","r2","r0","rectPath","pathClone","pathArray","getPointAtSegmentLength","p1x","p1y","c1x","c1y","c2x","c2y","p2x","p2y","bezlen","findDotsAtSegment","x4","y4","ll","t2","getTotLen","getLengthFactory","istotal","subpath","O","onlystart","point","sp","subpaths","path2curve","getSubpathsAtLength","t1","t13","t12","t3","mx","my","nx","ny","alpha","bezierBBox","curveDim","isPointInsideBBox","isBBoxIntersect","bbox1","bbox2","base3","p1","p2","p3","p4","z2","Tvalues","Cvalues","sum","ct","xbase","ybase","comb","intersect","denominator","px","py","px2","py2","interHelper","bez1","bez2","justCount","n1","n2","dots1","dots2","xy","di","di1","dj","dj1","ci","cj","interPathHelper","path1","path2","x1m","y1m","x2m","y2m","pi","pj","intr","kk","segment1","segment2","pathBBox","Y","dim","xmin","ymin","ellipsePath","getPath","pathToAbsolute","pa0","pa","crz","dots","pop","catmullRom2bezier","l2c","q2c","ax","ay","_13","_23","a2c","large_arc_flag","sweep_flag","recursive","_120","f1","f2","rx2","ry2","df","f2old","x2old","y2old","c1","s1","c2","s2","hx","hy","m1","m2","m3","m4","newres","x0","y0","b2ac","sqrtb2ac","tvalues","bounds","mt","jlen","curve","bx","by","qx","qy","attrs2","processPath","pcom","T","fixArc","pp","pcoms1","pcoms2","fixM","a1","a2","pfirst","seg","seg2","seglen","seg2len","crp","iLen","getSubpath","closest","inside","found","intersection","intersectionNumber","isPointInside","toRelative","lowerCase","rel","toCubic","pathi","Set","items","bindings","setproto","thisArg","animate","Animation","each","begin","handler","cb","callbacker","bind","aname","unbound","index","insertion","tail","todel","arglen","exclude","names","getEmpty","getViewBox","getColour","Function","path2array","isNumeric","equal","Number","tt1","tt2","maxlength","equaliseTransform","arr1","arr2","bUnit","supportsTouch","events","touchMap","mousedown","mousemove","mouseup","getScroll","preventTouch","originalEvent","preventDefault","stopTouch","stopPropagation","addEvent","fn","element","realName","scrollY","scrollX","targetTouches","olde","clientX","clientY","addEventListener","removeEventListener","drag","dragMove","dragi","touch","touches","identifier","_drag","move_scope","dragUp","unmousemove","unmouseup","end_scope","start_scope","off","eventName","unbind","hover","f_in","f_out","scope_in","scope_out","mouseover","mouseout","unhover","unmouseover","unmouseout","draggable","onmove","onstart","onend","origTransform","init","undrag","unmousedown","pproto","rgurl","filstr","filterUnits","blur","def","shadow","grayscale","amount","sepia","saturate","hueRotate","amount2","brightness","contrast","firstLetter","getAlign","way","align","animation","inAnim","_attrs","_callback","curStatus","eq","fkeys","tkeys","keys","saveColor","colors","A100","A200","A400","A700","mui","flat","pink","purple","deeppurple","indigo","lightblue","cyan","teal","lightgreen","lime","yellow","amber","orange","deeporange","brown","grey","bluegrey","turquoise","greensea","sunflower","emerland","nephritis","carrot","pumpkin","peterriver","belizehole","alizarin","pomegranate","amethyst","wisteria","clouds","silver","wetasphalt","midnightblue","concrete","asbestos","importMUIColors"],"mappings":"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"},"name":"static/chunks/777cf710.2d9d71c2907be1e26d6a.js","input":"(window[\"webpackJsonp_N_E\"] = window[\"webpackJsonp_N_E\"] || []).push([[5],{\n\n/***/ \"QczR\":\n/***/ (function(module, exports, __webpack_require__) {\n\nwindow.eve = __webpack_require__(\"oRA+\")\n\n// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar mina = (function (eve) {\n    var animations = {},\n    requestAnimFrame = window.requestAnimationFrame       ||\n                       window.webkitRequestAnimationFrame ||\n                       window.mozRequestAnimationFrame    ||\n                       window.oRequestAnimationFrame      ||\n                       window.msRequestAnimationFrame     ||\n                       function (callback) {\n                           setTimeout(callback, 16, new Date().getTime());\n                           return true;\n                       },\n    requestID,\n    isArray = Array.isArray || function (a) {\n        return a instanceof Array ||\n            Object.prototype.toString.call(a) == \"[object Array]\";\n    },\n    idgen = 0,\n    idprefix = \"M\" + (+new Date).toString(36),\n    ID = function () {\n        return idprefix + (idgen++).toString(36);\n    },\n    diff = function (a, b, A, B) {\n        if (isArray(a)) {\n            res = [];\n            for (var i = 0, ii = a.length; i < ii; i++) {\n                res[i] = diff(a[i], b, A[i], B);\n            }\n            return res;\n        }\n        var dif = (A - a) / (B - b);\n        return function (bb) {\n            return a + dif * (bb - b);\n        };\n    },\n    timer = Date.now || function () {\n        return +new Date;\n    },\n    sta = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.s;\n        }\n        var ds = a.s - val;\n        a.b += a.dur * ds;\n        a.B += a.dur * ds;\n        a.s = val;\n    },\n    speed = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.spd;\n        }\n        a.spd = val;\n    },\n    duration = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.dur;\n        }\n        a.s = a.s * val / a.dur;\n        a.dur = val;\n    },\n    stopit = function () {\n        var a = this;\n        delete animations[a.id];\n        a.update();\n        eve(\"mina.stop.\" + a.id, a);\n    },\n    pause = function () {\n        var a = this;\n        if (a.pdif) {\n            return;\n        }\n        delete animations[a.id];\n        a.update();\n        a.pdif = a.get() - a.b;\n    },\n    resume = function () {\n        var a = this;\n        if (!a.pdif) {\n            return;\n        }\n        a.b = a.get() - a.pdif;\n        delete a.pdif;\n        animations[a.id] = a;\n        frame();\n    },\n    update = function () {\n        var a = this,\n            res;\n        if (isArray(a.start)) {\n            res = [];\n            for (var j = 0, jj = a.start.length; j < jj; j++) {\n                res[j] = +a.start[j] +\n                    (a.end[j] - a.start[j]) * a.easing(a.s);\n            }\n        } else {\n            res = +a.start + (a.end - a.start) * a.easing(a.s);\n        }\n        a.set(res);\n    },\n    frame = function (timeStamp) {\n        // Manual invokation?\n        if (!timeStamp) {\n            // Frame loop stopped?\n            if (!requestID) {\n                // Start frame loop...\n                requestID = requestAnimFrame(frame);\n            }\n            return;\n        }\n        var len = 0;\n        for (var i in animations) if (animations.hasOwnProperty(i)) {\n            var a = animations[i],\n                b = a.get(),\n                res;\n            len++;\n            a.s = (b - a.b) / (a.dur / a.spd);\n            if (a.s >= 1) {\n                delete animations[i];\n                a.s = 1;\n                len--;\n                (function (a) {\n                    setTimeout(function () {\n                        eve(\"mina.finish.\" + a.id, a);\n                    });\n                }(a));\n            }\n            a.update();\n        }\n        requestID = len ? requestAnimFrame(frame) : false;\n    },\n    /*\\\n     * mina\n     [ method ]\n     **\n     * Generic animation of numbers\n     **\n     - a (number) start _slave_ number\n     - A (number) end _slave_ number\n     - b (number) start _master_ number (start time in general case)\n     - B (number) end _master_ number (end time in general case)\n     - get (function) getter of _master_ number (see @mina.time)\n     - set (function) setter of _slave_ number\n     - easing (function) #optional easing function, default is @mina.linear\n     = (object) animation descriptor\n     o {\n     o         id (string) animation id,\n     o         start (number) start _slave_ number,\n     o         end (number) end _slave_ number,\n     o         b (number) start _master_ number,\n     o         s (number) animation status (0..1),\n     o         dur (number) animation duration,\n     o         spd (number) animation speed,\n     o         get (function) getter of _master_ number (see @mina.time),\n     o         set (function) setter of _slave_ number,\n     o         easing (function) easing function, default is @mina.linear,\n     o         status (function) status getter/setter,\n     o         speed (function) speed getter/setter,\n     o         duration (function) duration getter/setter,\n     o         stop (function) animation stopper\n     o         pause (function) pauses the animation\n     o         resume (function) resumes the animation\n     o         update (function) calles setter with the right value of the animation\n     o }\n    \\*/\n    mina = function (a, A, b, B, get, set, easing) {\n        var anim = {\n            id: ID(),\n            start: a,\n            end: A,\n            b: b,\n            s: 0,\n            dur: B - b,\n            spd: 1,\n            get: get,\n            set: set,\n            easing: easing || mina.linear,\n            status: sta,\n            speed: speed,\n            duration: duration,\n            stop: stopit,\n            pause: pause,\n            resume: resume,\n            update: update\n        };\n        animations[anim.id] = anim;\n        var len = 0, i;\n        for (i in animations) if (animations.hasOwnProperty(i)) {\n            len++;\n            if (len == 2) {\n                break;\n            }\n        }\n        len == 1 && frame();\n        return anim;\n    };\n    /*\\\n     * mina.time\n     [ method ]\n     **\n     * Returns the current time. Equivalent to:\n     | function () {\n     |     return (new Date).getTime();\n     | }\n    \\*/\n    mina.time = timer;\n    /*\\\n     * mina.getById\n     [ method ]\n     **\n     * Returns an animation by its id\n     - id (string) animation's id\n     = (object) See @mina\n    \\*/\n    mina.getById = function (id) {\n        return animations[id] || null;\n    };\n\n    /*\\\n     * mina.linear\n     [ method ]\n     **\n     * Default linear easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.linear = function (n) {\n        return n;\n    };\n    /*\\\n     * mina.easeout\n     [ method ]\n     **\n     * Easeout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easeout = function (n) {\n        return Math.pow(n, 1.7);\n    };\n    /*\\\n     * mina.easein\n     [ method ]\n     **\n     * Easein easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easein = function (n) {\n        return Math.pow(n, .48);\n    };\n    /*\\\n     * mina.easeinout\n     [ method ]\n     **\n     * Easeinout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easeinout = function (n) {\n        if (n == 1) {\n            return 1;\n        }\n        if (n == 0) {\n            return 0;\n        }\n        var q = .48 - n / 1.04,\n            Q = Math.sqrt(.1734 + q * q),\n            x = Q - q,\n            X = Math.pow(Math.abs(x), 1 / 3) * (x < 0 ? -1 : 1),\n            y = -Q - q,\n            Y = Math.pow(Math.abs(y), 1 / 3) * (y < 0 ? -1 : 1),\n            t = X + Y + .5;\n        return (1 - t) * 3 * t * t + t * t * t;\n    };\n    /*\\\n     * mina.backin\n     [ method ]\n     **\n     * Backin easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.backin = function (n) {\n        if (n == 1) {\n            return 1;\n        }\n        var s = 1.70158;\n        return n * n * ((s + 1) * n - s);\n    };\n    /*\\\n     * mina.backout\n     [ method ]\n     **\n     * Backout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.backout = function (n) {\n        if (n == 0) {\n            return 0;\n        }\n        n = n - 1;\n        var s = 1.70158;\n        return n * n * ((s + 1) * n + s) + 1;\n    };\n    /*\\\n     * mina.elastic\n     [ method ]\n     **\n     * Elastic easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.elastic = function (n) {\n        if (n == !!n) {\n            return n;\n        }\n        return Math.pow(2, -10 * n) * Math.sin((n - .075) *\n            (2 * Math.PI) / .3) + 1;\n    };\n    /*\\\n     * mina.bounce\n     [ method ]\n     **\n     * Bounce easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.bounce = function (n) {\n        var s = 7.5625,\n            p = 2.75,\n            l;\n        if (n < 1 / p) {\n            l = s * n * n;\n        } else {\n            if (n < 2 / p) {\n                n -= 1.5 / p;\n                l = s * n * n + .75;\n            } else {\n                if (n < 2.5 / p) {\n                    n -= 2.25 / p;\n                    l = s * n * n + .9375;\n                } else {\n                    n -= 2.625 / p;\n                    l = s * n * n + .984375;\n                }\n            }\n        }\n        return l;\n    };\n    window.mina = mina;\n    return mina;\n})(typeof eve == \"undefined\" ? function () {} : eve);\n\n// Copyright (c) 2013 - 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar Snap = (function(root) {\nSnap.version = \"0.5.1\";\n/*\\\n * Snap\n [ method ]\n **\n * Creates a drawing surface or wraps existing SVG element.\n **\n - width (number|string) width of surface\n - height (number|string) height of surface\n * or\n - DOM (SVGElement) element to be wrapped into Snap structure\n * or\n - array (array) array of elements (will return set of elements)\n * or\n - query (string) CSS query selector\n = (object) @Element\n\\*/\nfunction Snap(w, h) {\n    if (w) {\n        if (w.nodeType) {\n            return wrap(w);\n        }\n        if (is(w, \"array\") && Snap.set) {\n            return Snap.set.apply(Snap, w);\n        }\n        if (w instanceof Element) {\n            return w;\n        }\n        if (h == null) {\n            try {\n                w = glob.doc.querySelector(String(w));\n                return wrap(w);\n            } catch (e) {\n                return null;\n            }\n        }\n    }\n    w = w == null ? \"100%\" : w;\n    h = h == null ? \"100%\" : h;\n    return new Paper(w, h);\n}\nSnap.toString = function () {\n    return \"Snap v\" + this.version;\n};\nSnap._ = {};\nvar glob = {\n    win: root.window,\n    doc: root.window.document\n};\nSnap._.glob = glob;\nvar has = \"hasOwnProperty\",\n    Str = String,\n    toFloat = parseFloat,\n    toInt = parseInt,\n    math = Math,\n    mmax = math.max,\n    mmin = math.min,\n    abs = math.abs,\n    pow = math.pow,\n    PI = math.PI,\n    round = math.round,\n    E = \"\",\n    S = \" \",\n    objectToString = Object.prototype.toString,\n    ISURL = /^url\\(['\"]?([^\\)]+?)['\"]?\\)$/i,\n    colourRegExp = /^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\))\\s*$/i,\n    bezierrg = /^(?:cubic-)?bezier\\(([^,]+),([^,]+),([^,]+),([^\\)]+)\\)/,\n    separator = Snap._.separator = /[,\\s]+/,\n    whitespace = /[\\s]/g,\n    commaSpaces = /[\\s]*,[\\s]*/,\n    hsrg = {hs: 1, rg: 1},\n    pathCommand = /([a-z])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n    tCommand = /([rstm])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n    pathValues = /(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\\s]*,?[\\s]*/ig,\n    idgen = 0,\n    idprefix = \"S\" + (+new Date).toString(36),\n    ID = function (el) {\n        return (el && el.type ? el.type : E) + idprefix + (idgen++).toString(36);\n    },\n    xlink = \"http://www.w3.org/1999/xlink\",\n    xmlns = \"http://www.w3.org/2000/svg\",\n    hub = {},\n    /*\\\n     * Snap.url\n     [ method ]\n     **\n     * Wraps path into `\"url('<path>')\"`.\n     - value (string) path\n     = (string) wrapped path\n    \\*/\n    URL = Snap.url = function (url) {\n        return \"url('#\" + url + \"')\";\n    };\n\nfunction $(el, attr) {\n    if (attr) {\n        if (el == \"#text\") {\n            el = glob.doc.createTextNode(attr.text || attr[\"#text\"] || \"\");\n        }\n        if (el == \"#comment\") {\n            el = glob.doc.createComment(attr.text || attr[\"#text\"] || \"\");\n        }\n        if (typeof el == \"string\") {\n            el = $(el);\n        }\n        if (typeof attr == \"string\") {\n            if (el.nodeType == 1) {\n                if (attr.substring(0, 6) == \"xlink:\") {\n                    return el.getAttributeNS(xlink, attr.substring(6));\n                }\n                if (attr.substring(0, 4) == \"xml:\") {\n                    return el.getAttributeNS(xmlns, attr.substring(4));\n                }\n                return el.getAttribute(attr);\n            } else if (attr == \"text\") {\n                return el.nodeValue;\n            } else {\n                return null;\n            }\n        }\n        if (el.nodeType == 1) {\n            for (var key in attr) if (attr[has](key)) {\n                var val = Str(attr[key]);\n                if (val) {\n                    if (key.substring(0, 6) == \"xlink:\") {\n                        el.setAttributeNS(xlink, key.substring(6), val);\n                    } else if (key.substring(0, 4) == \"xml:\") {\n                        el.setAttributeNS(xmlns, key.substring(4), val);\n                    } else {\n                        el.setAttribute(key, val);\n                    }\n                } else {\n                    el.removeAttribute(key);\n                }\n            }\n        } else if (\"text\" in attr) {\n            el.nodeValue = attr.text;\n        }\n    } else {\n        el = glob.doc.createElementNS(xmlns, el);\n    }\n    return el;\n}\nSnap._.$ = $;\nSnap._.id = ID;\nfunction getAttrs(el) {\n    var attrs = el.attributes,\n        name,\n        out = {};\n    for (var i = 0; i < attrs.length; i++) {\n        if (attrs[i].namespaceURI == xlink) {\n            name = \"xlink:\";\n        } else {\n            name = \"\";\n        }\n        name += attrs[i].name;\n        out[name] = attrs[i].textContent;\n    }\n    return out;\n}\nfunction is(o, type) {\n    type = Str.prototype.toLowerCase.call(type);\n    if (type == \"finite\") {\n        return isFinite(o);\n    }\n    if (type == \"array\" &&\n        (o instanceof Array || Array.isArray && Array.isArray(o))) {\n        return true;\n    }\n    return  type == \"null\" && o === null ||\n            type == typeof o && o !== null ||\n            type == \"object\" && o === Object(o) ||\n            objectToString.call(o).slice(8, -1).toLowerCase() == type;\n}\n/*\\\n * Snap.format\n [ method ]\n **\n * Replaces construction of type `{<name>}` to the corresponding argument\n **\n - token (string) string to format\n - json (object) object which properties are used as a replacement\n = (string) formatted string\n > Usage\n | // this draws a rectangular shape equivalent to \"M10,20h40v50h-40z\"\n | paper.path(Snap.format(\"M{x},{y}h{dim.width}v{dim.height}h{dim['negative width']}z\", {\n |     x: 10,\n |     y: 20,\n |     dim: {\n |         width: 40,\n |         height: 50,\n |         \"negative width\": -40\n |     }\n | }));\n\\*/\nSnap.format = (function () {\n    var tokenRegex = /\\{([^\\}]+)\\}/g,\n        objNotationRegex = /(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g, // matches .xxxxx or [\"xxxxx\"] to run over object properties\n        replacer = function (all, key, obj) {\n            var res = obj;\n            key.replace(objNotationRegex, function (all, name, quote, quotedName, isFunc) {\n                name = name || quotedName;\n                if (res) {\n                    if (name in res) {\n                        res = res[name];\n                    }\n                    typeof res == \"function\" && isFunc && (res = res());\n                }\n            });\n            res = (res == null || res == obj ? all : res) + \"\";\n            return res;\n        };\n    return function (str, obj) {\n        return Str(str).replace(tokenRegex, function (all, key) {\n            return replacer(all, key, obj);\n        });\n    };\n})();\nfunction clone(obj) {\n    if (typeof obj == \"function\" || Object(obj) !== obj) {\n        return obj;\n    }\n    var res = new obj.constructor;\n    for (var key in obj) if (obj[has](key)) {\n        res[key] = clone(obj[key]);\n    }\n    return res;\n}\nSnap._.clone = clone;\nfunction repush(array, item) {\n    for (var i = 0, ii = array.length; i < ii; i++) if (array[i] === item) {\n        return array.push(array.splice(i, 1)[0]);\n    }\n}\nfunction cacher(f, scope, postprocessor) {\n    function newf() {\n        var arg = Array.prototype.slice.call(arguments, 0),\n            args = arg.join(\"\\u2400\"),\n            cache = newf.cache = newf.cache || {},\n            count = newf.count = newf.count || [];\n        if (cache[has](args)) {\n            repush(count, args);\n            return postprocessor ? postprocessor(cache[args]) : cache[args];\n        }\n        count.length >= 1e3 && delete cache[count.shift()];\n        count.push(args);\n        cache[args] = f.apply(scope, arg);\n        return postprocessor ? postprocessor(cache[args]) : cache[args];\n    }\n    return newf;\n}\nSnap._.cacher = cacher;\nfunction angle(x1, y1, x2, y2, x3, y3) {\n    if (x3 == null) {\n        var x = x1 - x2,\n            y = y1 - y2;\n        if (!x && !y) {\n            return 0;\n        }\n        return (180 + math.atan2(-y, -x) * 180 / PI + 360) % 360;\n    } else {\n        return angle(x1, y1, x3, y3) - angle(x2, y2, x3, y3);\n    }\n}\nfunction rad(deg) {\n    return deg % 360 * PI / 180;\n}\nfunction deg(rad) {\n    return rad * 180 / PI % 360;\n}\nfunction x_y() {\n    return this.x + S + this.y;\n}\nfunction x_y_w_h() {\n    return this.x + S + this.y + S + this.width + \" \\xd7 \" + this.height;\n}\n\n/*\\\n * Snap.rad\n [ method ]\n **\n * Transform angle to radians\n - deg (number) angle in degrees\n = (number) angle in radians\n\\*/\nSnap.rad = rad;\n/*\\\n * Snap.deg\n [ method ]\n **\n * Transform angle to degrees\n - rad (number) angle in radians\n = (number) angle in degrees\n\\*/\nSnap.deg = deg;\n/*\\\n * Snap.sin\n [ method ]\n **\n * Equivalent to `Math.sin()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) sin\n\\*/\nSnap.sin = function (angle) {\n    return math.sin(Snap.rad(angle));\n};\n/*\\\n * Snap.tan\n [ method ]\n **\n * Equivalent to `Math.tan()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) tan\n\\*/\nSnap.tan = function (angle) {\n    return math.tan(Snap.rad(angle));\n};\n/*\\\n * Snap.cos\n [ method ]\n **\n * Equivalent to `Math.cos()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) cos\n\\*/\nSnap.cos = function (angle) {\n    return math.cos(Snap.rad(angle));\n};\n/*\\\n * Snap.asin\n [ method ]\n **\n * Equivalent to `Math.asin()` only works with degrees, not radians.\n - num (number) value\n = (number) asin in degrees\n\\*/\nSnap.asin = function (num) {\n    return Snap.deg(math.asin(num));\n};\n/*\\\n * Snap.acos\n [ method ]\n **\n * Equivalent to `Math.acos()` only works with degrees, not radians.\n - num (number) value\n = (number) acos in degrees\n\\*/\nSnap.acos = function (num) {\n    return Snap.deg(math.acos(num));\n};\n/*\\\n * Snap.atan\n [ method ]\n **\n * Equivalent to `Math.atan()` only works with degrees, not radians.\n - num (number) value\n = (number) atan in degrees\n\\*/\nSnap.atan = function (num) {\n    return Snap.deg(math.atan(num));\n};\n/*\\\n * Snap.atan2\n [ method ]\n **\n * Equivalent to `Math.atan2()` only works with degrees, not radians.\n - num (number) value\n = (number) atan2 in degrees\n\\*/\nSnap.atan2 = function (num) {\n    return Snap.deg(math.atan2(num));\n};\n/*\\\n * Snap.angle\n [ method ]\n **\n * Returns an angle between two or three points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n - x3 (number) #optional x coord of third point\n - y3 (number) #optional y coord of third point\n = (number) angle in degrees\n\\*/\nSnap.angle = angle;\n/*\\\n * Snap.len\n [ method ]\n **\n * Returns distance between two points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n = (number) distance\n\\*/\nSnap.len = function (x1, y1, x2, y2) {\n    return Math.sqrt(Snap.len2(x1, y1, x2, y2));\n};\n/*\\\n * Snap.len2\n [ method ]\n **\n * Returns squared distance between two points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n = (number) distance\n\\*/\nSnap.len2 = function (x1, y1, x2, y2) {\n    return (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n};\n/*\\\n * Snap.closestPoint\n [ method ]\n **\n * Returns closest point to a given one on a given path.\n - path (Element) path element\n - x (number) x coord of a point\n - y (number) y coord of a point\n = (object) in format\n {\n    x (number) x coord of the point on the path\n    y (number) y coord of the point on the path\n    length (number) length of the path to the point\n    distance (number) distance from the given point to the path\n }\n\\*/\n// Copied from http://bl.ocks.org/mbostock/8027637\nSnap.closestPoint = function (path, x, y) {\n    function distance2(p) {\n        var dx = p.x - x,\n            dy = p.y - y;\n        return dx * dx + dy * dy;\n    }\n    var pathNode = path.node,\n        pathLength = pathNode.getTotalLength(),\n        precision = pathLength / pathNode.pathSegList.numberOfItems * .125,\n        best,\n        bestLength,\n        bestDistance = Infinity;\n\n    // linear scan for coarse approximation\n    for (var scan, scanLength = 0, scanDistance; scanLength <= pathLength; scanLength += precision) {\n        if ((scanDistance = distance2(scan = pathNode.getPointAtLength(scanLength))) < bestDistance) {\n            best = scan;\n            bestLength = scanLength;\n            bestDistance = scanDistance;\n        }\n    }\n\n    // binary search for precise estimate\n    precision *= .5;\n    while (precision > .5) {\n        var before,\n            after,\n            beforeLength,\n            afterLength,\n            beforeDistance,\n            afterDistance;\n        if ((beforeLength = bestLength - precision) >= 0 && (beforeDistance = distance2(before = pathNode.getPointAtLength(beforeLength))) < bestDistance) {\n            best = before;\n            bestLength = beforeLength;\n            bestDistance = beforeDistance;\n        } else if ((afterLength = bestLength + precision) <= pathLength && (afterDistance = distance2(after = pathNode.getPointAtLength(afterLength))) < bestDistance) {\n            best = after;\n            bestLength = afterLength;\n            bestDistance = afterDistance;\n        } else {\n            precision *= .5;\n        }\n    }\n\n    best = {\n        x: best.x,\n        y: best.y,\n        length: bestLength,\n        distance: Math.sqrt(bestDistance)\n    };\n    return best;\n}\n/*\\\n * Snap.is\n [ method ]\n **\n * Handy replacement for the `typeof` operator\n - o (…) any object or primitive\n - type (string) name of the type, e.g., `string`, `function`, `number`, etc.\n = (boolean) `true` if given value is of given type\n\\*/\nSnap.is = is;\n/*\\\n * Snap.snapTo\n [ method ]\n **\n * Snaps given value to given grid\n - values (array|number) given array of values or step of the grid\n - value (number) value to adjust\n - tolerance (number) #optional maximum distance to the target value that would trigger the snap. Default is `10`.\n = (number) adjusted value\n\\*/\nSnap.snapTo = function (values, value, tolerance) {\n    tolerance = is(tolerance, \"finite\") ? tolerance : 10;\n    if (is(values, \"array\")) {\n        var i = values.length;\n        while (i--) if (abs(values[i] - value) <= tolerance) {\n            return values[i];\n        }\n    } else {\n        values = +values;\n        var rem = value % values;\n        if (rem < tolerance) {\n            return value - rem;\n        }\n        if (rem > values - tolerance) {\n            return value - rem + values;\n        }\n    }\n    return value;\n};\n// Colour\n/*\\\n * Snap.getRGB\n [ method ]\n **\n * Parses color string as RGB object\n - color (string) color string in one of the following formats:\n # <ul>\n #     <li>Color name (<code>red</code>, <code>green</code>, <code>cornflowerblue</code>, etc)</li>\n #     <li>#••• — shortened HTML color: (<code>#000</code>, <code>#fc0</code>, etc.)</li>\n #     <li>#•••••• — full length HTML color: (<code>#000000</code>, <code>#bd2300</code>)</li>\n #     <li>rgb(•••, •••, •••) — red, green and blue channels values: (<code>rgb(200,&nbsp;100,&nbsp;0)</code>)</li>\n #     <li>rgba(•••, •••, •••, •••) — also with opacity</li>\n #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>)</li>\n #     <li>rgba(•••%, •••%, •••%, •••%) — also with opacity</li>\n #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>)</li>\n #     <li>hsba(•••, •••, •••, •••) — also with opacity</li>\n #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>\n #     <li>hsba(•••%, •••%, •••%, •••%) — also with opacity</li>\n #     <li>hsl(•••, •••, •••) — hue, saturation and luminosity values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;0.5)</code>)</li>\n #     <li>hsla(•••, •••, •••, •••) — also with opacity</li>\n #     <li>hsl(•••%, •••%, •••%) — same as above, but in %</li>\n #     <li>hsla(•••%, •••%, •••%, •••%) — also with opacity</li>\n # </ul>\n * Note that `%` can be used any time: `rgb(20%, 255, 50%)`.\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••,\n o     error (boolean) true if string can't be parsed\n o }\n\\*/\nSnap.getRGB = cacher(function (colour) {\n    if (!colour || !!((colour = Str(colour)).indexOf(\"-\") + 1)) {\n        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n    }\n    if (colour == \"none\") {\n        return {r: -1, g: -1, b: -1, hex: \"none\", toString: rgbtoString};\n    }\n    !(hsrg[has](colour.toLowerCase().substring(0, 2)) || colour.charAt() == \"#\") && (colour = toHex(colour));\n    if (!colour) {\n        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n    }\n    var res,\n        red,\n        green,\n        blue,\n        opacity,\n        t,\n        values,\n        rgb = colour.match(colourRegExp);\n    if (rgb) {\n        if (rgb[2]) {\n            blue = toInt(rgb[2].substring(5), 16);\n            green = toInt(rgb[2].substring(3, 5), 16);\n            red = toInt(rgb[2].substring(1, 3), 16);\n        }\n        if (rgb[3]) {\n            blue = toInt((t = rgb[3].charAt(3)) + t, 16);\n            green = toInt((t = rgb[3].charAt(2)) + t, 16);\n            red = toInt((t = rgb[3].charAt(1)) + t, 16);\n        }\n        if (rgb[4]) {\n            values = rgb[4].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red *= 2.55);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green *= 2.55);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue *= 2.55);\n            rgb[1].toLowerCase().slice(0, 4) == \"rgba\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n        }\n        if (rgb[5]) {\n            values = rgb[5].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red /= 100);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green /= 100);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue /= 100);\n            (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n            rgb[1].toLowerCase().slice(0, 4) == \"hsba\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n            return Snap.hsb2rgb(red, green, blue, opacity);\n        }\n        if (rgb[6]) {\n            values = rgb[6].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red /= 100);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green /= 100);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue /= 100);\n            (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n            rgb[1].toLowerCase().slice(0, 4) == \"hsla\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n            return Snap.hsl2rgb(red, green, blue, opacity);\n        }\n        red = mmin(math.round(red), 255);\n        green = mmin(math.round(green), 255);\n        blue = mmin(math.round(blue), 255);\n        opacity = mmin(mmax(opacity, 0), 1);\n        rgb = {r: red, g: green, b: blue, toString: rgbtoString};\n        rgb.hex = \"#\" + (16777216 | blue | green << 8 | red << 16).toString(16).slice(1);\n        rgb.opacity = is(opacity, \"finite\") ? opacity : 1;\n        return rgb;\n    }\n    return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n}, Snap);\n/*\\\n * Snap.hsb\n [ method ]\n **\n * Converts HSB values to a hex representation of the color\n - h (number) hue\n - s (number) saturation\n - b (number) value or brightness\n = (string) hex representation of the color\n\\*/\nSnap.hsb = cacher(function (h, s, b) {\n    return Snap.hsb2rgb(h, s, b).hex;\n});\n/*\\\n * Snap.hsl\n [ method ]\n **\n * Converts HSL values to a hex representation of the color\n - h (number) hue\n - s (number) saturation\n - l (number) luminosity\n = (string) hex representation of the color\n\\*/\nSnap.hsl = cacher(function (h, s, l) {\n    return Snap.hsl2rgb(h, s, l).hex;\n});\n/*\\\n * Snap.rgb\n [ method ]\n **\n * Converts RGB values to a hex representation of the color\n - r (number) red\n - g (number) green\n - b (number) blue\n = (string) hex representation of the color\n\\*/\nSnap.rgb = cacher(function (r, g, b, o) {\n    if (is(o, \"finite\")) {\n        var round = math.round;\n        return \"rgba(\" + [round(r), round(g), round(b), +o.toFixed(2)] + \")\";\n    }\n    return \"#\" + (16777216 | b | g << 8 | r << 16).toString(16).slice(1);\n});\nvar toHex = function (color) {\n    var i = glob.doc.getElementsByTagName(\"head\")[0] || glob.doc.getElementsByTagName(\"svg\")[0],\n        red = \"rgb(255, 0, 0)\";\n    toHex = cacher(function (color) {\n        if (color.toLowerCase() == \"red\") {\n            return red;\n        }\n        i.style.color = red;\n        i.style.color = color;\n        var out = glob.doc.defaultView.getComputedStyle(i, E).getPropertyValue(\"color\");\n        return out == red ? null : out;\n    });\n    return toHex(color);\n},\nhsbtoString = function () {\n    return \"hsb(\" + [this.h, this.s, this.b] + \")\";\n},\nhsltoString = function () {\n    return \"hsl(\" + [this.h, this.s, this.l] + \")\";\n},\nrgbtoString = function () {\n    return this.opacity == 1 || this.opacity == null ?\n            this.hex :\n            \"rgba(\" + [this.r, this.g, this.b, this.opacity] + \")\";\n},\nprepareRGB = function (r, g, b) {\n    if (g == null && is(r, \"object\") && \"r\" in r && \"g\" in r && \"b\" in r) {\n        b = r.b;\n        g = r.g;\n        r = r.r;\n    }\n    if (g == null && is(r, string)) {\n        var clr = Snap.getRGB(r);\n        r = clr.r;\n        g = clr.g;\n        b = clr.b;\n    }\n    if (r > 1 || g > 1 || b > 1) {\n        r /= 255;\n        g /= 255;\n        b /= 255;\n    }\n\n    return [r, g, b];\n},\npackageRGB = function (r, g, b, o) {\n    r = math.round(r * 255);\n    g = math.round(g * 255);\n    b = math.round(b * 255);\n    var rgb = {\n        r: r,\n        g: g,\n        b: b,\n        opacity: is(o, \"finite\") ? o : 1,\n        hex: Snap.rgb(r, g, b),\n        toString: rgbtoString\n    };\n    is(o, \"finite\") && (rgb.opacity = o);\n    return rgb;\n};\n/*\\\n * Snap.color\n [ method ]\n **\n * Parses the color string and returns an object featuring the color's component values\n - clr (string) color string in one of the supported formats (see @Snap.getRGB)\n = (object) Combined RGB/HSB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••,\n o     error (boolean) `true` if string can't be parsed,\n o     h (number) hue,\n o     s (number) saturation,\n o     v (number) value (brightness),\n o     l (number) lightness\n o }\n\\*/\nSnap.color = function (clr) {\n    var rgb;\n    if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"b\" in clr) {\n        rgb = Snap.hsb2rgb(clr);\n        clr.r = rgb.r;\n        clr.g = rgb.g;\n        clr.b = rgb.b;\n        clr.opacity = 1;\n        clr.hex = rgb.hex;\n    } else if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"l\" in clr) {\n        rgb = Snap.hsl2rgb(clr);\n        clr.r = rgb.r;\n        clr.g = rgb.g;\n        clr.b = rgb.b;\n        clr.opacity = 1;\n        clr.hex = rgb.hex;\n    } else {\n        if (is(clr, \"string\")) {\n            clr = Snap.getRGB(clr);\n        }\n        if (is(clr, \"object\") && \"r\" in clr && \"g\" in clr && \"b\" in clr && !(\"error\" in clr)) {\n            rgb = Snap.rgb2hsl(clr);\n            clr.h = rgb.h;\n            clr.s = rgb.s;\n            clr.l = rgb.l;\n            rgb = Snap.rgb2hsb(clr);\n            clr.v = rgb.b;\n        } else {\n            clr = {hex: \"none\"};\n            clr.r = clr.g = clr.b = clr.h = clr.s = clr.v = clr.l = -1;\n            clr.error = 1;\n        }\n    }\n    clr.toString = rgbtoString;\n    return clr;\n};\n/*\\\n * Snap.hsb2rgb\n [ method ]\n **\n * Converts HSB values to an RGB object\n - h (number) hue\n - s (number) saturation\n - v (number) value or brightness\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••\n o }\n\\*/\nSnap.hsb2rgb = function (h, s, v, o) {\n    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"b\" in h) {\n        v = h.b;\n        s = h.s;\n        o = h.o;\n        h = h.h;\n    }\n    h *= 360;\n    var R, G, B, X, C;\n    h = h % 360 / 60;\n    C = v * s;\n    X = C * (1 - abs(h % 2 - 1));\n    R = G = B = v - C;\n\n    h = ~~h;\n    R += [C, X, 0, 0, X, C][h];\n    G += [X, C, C, X, 0, 0][h];\n    B += [0, 0, X, C, C, X][h];\n    return packageRGB(R, G, B, o);\n};\n/*\\\n * Snap.hsl2rgb\n [ method ]\n **\n * Converts HSL values to an RGB object\n - h (number) hue\n - s (number) saturation\n - l (number) luminosity\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••\n o }\n\\*/\nSnap.hsl2rgb = function (h, s, l, o) {\n    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"l\" in h) {\n        l = h.l;\n        s = h.s;\n        h = h.h;\n    }\n    if (h > 1 || s > 1 || l > 1) {\n        h /= 360;\n        s /= 100;\n        l /= 100;\n    }\n    h *= 360;\n    var R, G, B, X, C;\n    h = h % 360 / 60;\n    C = 2 * s * (l < .5 ? l : 1 - l);\n    X = C * (1 - abs(h % 2 - 1));\n    R = G = B = l - C / 2;\n\n    h = ~~h;\n    R += [C, X, 0, 0, X, C][h];\n    G += [X, C, C, X, 0, 0][h];\n    B += [0, 0, X, C, C, X][h];\n    return packageRGB(R, G, B, o);\n};\n/*\\\n * Snap.rgb2hsb\n [ method ]\n **\n * Converts RGB values to an HSB object\n - r (number) red\n - g (number) green\n - b (number) blue\n = (object) HSB object in the following format:\n o {\n o     h (number) hue,\n o     s (number) saturation,\n o     b (number) brightness\n o }\n\\*/\nSnap.rgb2hsb = function (r, g, b) {\n    b = prepareRGB(r, g, b);\n    r = b[0];\n    g = b[1];\n    b = b[2];\n\n    var H, S, V, C;\n    V = mmax(r, g, b);\n    C = V - mmin(r, g, b);\n    H = C == 0 ? null :\n        V == r ? (g - b) / C :\n        V == g ? (b - r) / C + 2 :\n                 (r - g) / C + 4;\n    H = (H + 360) % 6 * 60 / 360;\n    S = C == 0 ? 0 : C / V;\n    return {h: H, s: S, b: V, toString: hsbtoString};\n};\n/*\\\n * Snap.rgb2hsl\n [ method ]\n **\n * Converts RGB values to an HSL object\n - r (number) red\n - g (number) green\n - b (number) blue\n = (object) HSL object in the following format:\n o {\n o     h (number) hue,\n o     s (number) saturation,\n o     l (number) luminosity\n o }\n\\*/\nSnap.rgb2hsl = function (r, g, b) {\n    b = prepareRGB(r, g, b);\n    r = b[0];\n    g = b[1];\n    b = b[2];\n\n    var H, S, L, M, m, C;\n    M = mmax(r, g, b);\n    m = mmin(r, g, b);\n    C = M - m;\n    H = C == 0 ? null :\n        M == r ? (g - b) / C :\n        M == g ? (b - r) / C + 2 :\n                 (r - g) / C + 4;\n    H = (H + 360) % 6 * 60 / 360;\n    L = (M + m) / 2;\n    S = C == 0 ? 0 :\n         L < .5 ? C / (2 * L) :\n                  C / (2 - 2 * L);\n    return {h: H, s: S, l: L, toString: hsltoString};\n};\n\n// Transformations\n/*\\\n * Snap.parsePathString\n [ method ]\n **\n * Utility method\n **\n * Parses given path string into an array of arrays of path segments\n - pathString (string|array) path string or array of segments (in the last case it is returned straight away)\n = (array) array of segments\n\\*/\nSnap.parsePathString = function (pathString) {\n    if (!pathString) {\n        return null;\n    }\n    var pth = Snap.path(pathString);\n    if (pth.arr) {\n        return Snap.path.clone(pth.arr);\n    }\n\n    var paramCounts = {a: 7, c: 6, o: 2, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, u: 3, z: 0},\n        data = [];\n    if (is(pathString, \"array\") && is(pathString[0], \"array\")) { // rough assumption\n        data = Snap.path.clone(pathString);\n    }\n    if (!data.length) {\n        Str(pathString).replace(pathCommand, function (a, b, c) {\n            var params = [],\n                name = b.toLowerCase();\n            c.replace(pathValues, function (a, b) {\n                b && params.push(+b);\n            });\n            if (name == \"m\" && params.length > 2) {\n                data.push([b].concat(params.splice(0, 2)));\n                name = \"l\";\n                b = b == \"m\" ? \"l\" : \"L\";\n            }\n            if (name == \"o\" && params.length == 1) {\n                data.push([b, params[0]]);\n            }\n            if (name == \"r\") {\n                data.push([b].concat(params));\n            } else while (params.length >= paramCounts[name]) {\n                data.push([b].concat(params.splice(0, paramCounts[name])));\n                if (!paramCounts[name]) {\n                    break;\n                }\n            }\n        });\n    }\n    data.toString = Snap.path.toString;\n    pth.arr = Snap.path.clone(data);\n    return data;\n};\n/*\\\n * Snap.parseTransformString\n [ method ]\n **\n * Utility method\n **\n * Parses given transform string into an array of transformations\n - TString (string|array) transform string or array of transformations (in the last case it is returned straight away)\n = (array) array of transformations\n\\*/\nvar parseTransformString = Snap.parseTransformString = function (TString) {\n    if (!TString) {\n        return null;\n    }\n    var paramCounts = {r: 3, s: 4, t: 2, m: 6},\n        data = [];\n    if (is(TString, \"array\") && is(TString[0], \"array\")) { // rough assumption\n        data = Snap.path.clone(TString);\n    }\n    if (!data.length) {\n        Str(TString).replace(tCommand, function (a, b, c) {\n            var params = [],\n                name = b.toLowerCase();\n            c.replace(pathValues, function (a, b) {\n                b && params.push(+b);\n            });\n            data.push([b].concat(params));\n        });\n    }\n    data.toString = Snap.path.toString;\n    return data;\n};\nfunction svgTransform2string(tstr) {\n    var res = [];\n    tstr = tstr.replace(/(?:^|\\s)(\\w+)\\(([^)]+)\\)/g, function (all, name, params) {\n        params = params.split(/\\s*,\\s*|\\s+/);\n        if (name == \"rotate\" && params.length == 1) {\n            params.push(0, 0);\n        }\n        if (name == \"scale\") {\n            if (params.length > 2) {\n                params = params.slice(0, 2);\n            } else if (params.length == 2) {\n                params.push(0, 0);\n            }\n            if (params.length == 1) {\n                params.push(params[0], 0, 0);\n            }\n        }\n        if (name == \"skewX\") {\n            res.push([\"m\", 1, 0, math.tan(rad(params[0])), 1, 0, 0]);\n        } else if (name == \"skewY\") {\n            res.push([\"m\", 1, math.tan(rad(params[0])), 0, 1, 0, 0]);\n        } else {\n            res.push([name.charAt(0)].concat(params));\n        }\n        return all;\n    });\n    return res;\n}\nSnap._.svgTransform2string = svgTransform2string;\nSnap._.rgTransform = /^[a-z][\\s]*-?\\.?\\d/i;\nfunction transform2matrix(tstr, bbox) {\n    var tdata = parseTransformString(tstr),\n        m = new Snap.Matrix;\n    if (tdata) {\n        for (var i = 0, ii = tdata.length; i < ii; i++) {\n            var t = tdata[i],\n                tlen = t.length,\n                command = Str(t[0]).toLowerCase(),\n                absolute = t[0] != command,\n                inver = absolute ? m.invert() : 0,\n                x1,\n                y1,\n                x2,\n                y2,\n                bb;\n            if (command == \"t\" && tlen == 2){\n                m.translate(t[1], 0);\n            } else if (command == \"t\" && tlen == 3) {\n                if (absolute) {\n                    x1 = inver.x(0, 0);\n                    y1 = inver.y(0, 0);\n                    x2 = inver.x(t[1], t[2]);\n                    y2 = inver.y(t[1], t[2]);\n                    m.translate(x2 - x1, y2 - y1);\n                } else {\n                    m.translate(t[1], t[2]);\n                }\n            } else if (command == \"r\") {\n                if (tlen == 2) {\n                    bb = bb || bbox;\n                    m.rotate(t[1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n                } else if (tlen == 4) {\n                    if (absolute) {\n                        x2 = inver.x(t[2], t[3]);\n                        y2 = inver.y(t[2], t[3]);\n                        m.rotate(t[1], x2, y2);\n                    } else {\n                        m.rotate(t[1], t[2], t[3]);\n                    }\n                }\n            } else if (command == \"s\") {\n                if (tlen == 2 || tlen == 3) {\n                    bb = bb || bbox;\n                    m.scale(t[1], t[tlen - 1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n                } else if (tlen == 4) {\n                    if (absolute) {\n                        x2 = inver.x(t[2], t[3]);\n                        y2 = inver.y(t[2], t[3]);\n                        m.scale(t[1], t[1], x2, y2);\n                    } else {\n                        m.scale(t[1], t[1], t[2], t[3]);\n                    }\n                } else if (tlen == 5) {\n                    if (absolute) {\n                        x2 = inver.x(t[3], t[4]);\n                        y2 = inver.y(t[3], t[4]);\n                        m.scale(t[1], t[2], x2, y2);\n                    } else {\n                        m.scale(t[1], t[2], t[3], t[4]);\n                    }\n                }\n            } else if (command == \"m\" && tlen == 7) {\n                m.add(t[1], t[2], t[3], t[4], t[5], t[6]);\n            }\n        }\n    }\n    return m;\n}\nSnap._.transform2matrix = transform2matrix;\nSnap._unit2px = unit2px;\nvar contains = glob.doc.contains || glob.doc.compareDocumentPosition ?\n    function (a, b) {\n        var adown = a.nodeType == 9 ? a.documentElement : a,\n            bup = b && b.parentNode;\n            return a == bup || !!(bup && bup.nodeType == 1 && (\n                adown.contains ?\n                    adown.contains(bup) :\n                    a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16\n            ));\n    } :\n    function (a, b) {\n        if (b) {\n            while (b) {\n                b = b.parentNode;\n                if (b == a) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\nfunction getSomeDefs(el) {\n    var p = el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) ||\n            el.node.parentNode && wrap(el.node.parentNode) ||\n            Snap.select(\"svg\") ||\n            Snap(0, 0),\n        pdefs = p.select(\"defs\"),\n        defs  = pdefs == null ? false : pdefs.node;\n    if (!defs) {\n        defs = make(\"defs\", p.node).node;\n    }\n    return defs;\n}\nfunction getSomeSVG(el) {\n    return el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) || Snap.select(\"svg\");\n}\nSnap._.getSomeDefs = getSomeDefs;\nSnap._.getSomeSVG = getSomeSVG;\nfunction unit2px(el, name, value) {\n    var svg = getSomeSVG(el).node,\n        out = {},\n        mgr = svg.querySelector(\".svg---mgr\");\n    if (!mgr) {\n        mgr = $(\"rect\");\n        $(mgr, {x: -9e9, y: -9e9, width: 10, height: 10, \"class\": \"svg---mgr\", fill: \"none\"});\n        svg.appendChild(mgr);\n    }\n    function getW(val) {\n        if (val == null) {\n            return E;\n        }\n        if (val == +val) {\n            return val;\n        }\n        $(mgr, {width: val});\n        try {\n            return mgr.getBBox().width;\n        } catch (e) {\n            return 0;\n        }\n    }\n    function getH(val) {\n        if (val == null) {\n            return E;\n        }\n        if (val == +val) {\n            return val;\n        }\n        $(mgr, {height: val});\n        try {\n            return mgr.getBBox().height;\n        } catch (e) {\n            return 0;\n        }\n    }\n    function set(nam, f) {\n        if (name == null) {\n            out[nam] = f(el.attr(nam) || 0);\n        } else if (nam == name) {\n            out = f(value == null ? el.attr(nam) || 0 : value);\n        }\n    }\n    switch (el.type) {\n        case \"rect\":\n            set(\"rx\", getW);\n            set(\"ry\", getH);\n        case \"image\":\n            set(\"width\", getW);\n            set(\"height\", getH);\n        case \"text\":\n            set(\"x\", getW);\n            set(\"y\", getH);\n        break;\n        case \"circle\":\n            set(\"cx\", getW);\n            set(\"cy\", getH);\n            set(\"r\", getW);\n        break;\n        case \"ellipse\":\n            set(\"cx\", getW);\n            set(\"cy\", getH);\n            set(\"rx\", getW);\n            set(\"ry\", getH);\n        break;\n        case \"line\":\n            set(\"x1\", getW);\n            set(\"x2\", getW);\n            set(\"y1\", getH);\n            set(\"y2\", getH);\n        break;\n        case \"marker\":\n            set(\"refX\", getW);\n            set(\"markerWidth\", getW);\n            set(\"refY\", getH);\n            set(\"markerHeight\", getH);\n        break;\n        case \"radialGradient\":\n            set(\"fx\", getW);\n            set(\"fy\", getH);\n        break;\n        case \"tspan\":\n            set(\"dx\", getW);\n            set(\"dy\", getH);\n        break;\n        default:\n            set(name, getW);\n    }\n    svg.removeChild(mgr);\n    return out;\n}\n/*\\\n * Snap.select\n [ method ]\n **\n * Wraps a DOM element specified by CSS selector as @Element\n - query (string) CSS selector of the element\n = (Element) the current element\n\\*/\nSnap.select = function (query) {\n    query = Str(query).replace(/([^\\\\]):/g, \"$1\\\\:\");\n    return wrap(glob.doc.querySelector(query));\n};\n/*\\\n * Snap.selectAll\n [ method ]\n **\n * Wraps DOM elements specified by CSS selector as set or array of @Element\n - query (string) CSS selector of the element\n = (Element) the current element\n\\*/\nSnap.selectAll = function (query) {\n    var nodelist = glob.doc.querySelectorAll(query),\n        set = (Snap.set || Array)();\n    for (var i = 0; i < nodelist.length; i++) {\n        set.push(wrap(nodelist[i]));\n    }\n    return set;\n};\n\nfunction add2group(list) {\n    if (!is(list, \"array\")) {\n        list = Array.prototype.slice.call(arguments, 0);\n    }\n    var i = 0,\n        j = 0,\n        node = this.node;\n    while (this[i]) delete this[i++];\n    for (i = 0; i < list.length; i++) {\n        if (list[i].type == \"set\") {\n            list[i].forEach(function (el) {\n                node.appendChild(el.node);\n            });\n        } else {\n            node.appendChild(list[i].node);\n        }\n    }\n    var children = node.childNodes;\n    for (i = 0; i < children.length; i++) {\n        this[j++] = wrap(children[i]);\n    }\n    return this;\n}\n// Hub garbage collector every 10s\nsetInterval(function () {\n    for (var key in hub) if (hub[has](key)) {\n        var el = hub[key],\n            node = el.node;\n        if (el.type != \"svg\" && !node.ownerSVGElement || el.type == \"svg\" && (!node.parentNode || \"ownerSVGElement\" in node.parentNode && !node.ownerSVGElement)) {\n            delete hub[key];\n        }\n    }\n}, 1e4);\nfunction Element(el) {\n    if (el.snap in hub) {\n        return hub[el.snap];\n    }\n    var svg;\n    try {\n        svg = el.ownerSVGElement;\n    } catch(e) {}\n    /*\\\n     * Element.node\n     [ property (object) ]\n     **\n     * Gives you a reference to the DOM object, so you can assign event handlers or just mess around.\n     > Usage\n     | // draw a circle at coordinate 10,10 with radius of 10\n     | var c = paper.circle(10, 10, 10);\n     | c.node.onclick = function () {\n     |     c.attr(\"fill\", \"red\");\n     | };\n    \\*/\n    this.node = el;\n    if (svg) {\n        this.paper = new Paper(svg);\n    }\n    /*\\\n     * Element.type\n     [ property (string) ]\n     **\n     * SVG tag name of the given element.\n    \\*/\n    this.type = el.tagName || el.nodeName;\n    var id = this.id = ID(this);\n    this.anims = {};\n    this._ = {\n        transform: []\n    };\n    el.snap = id;\n    hub[id] = this;\n    if (this.type == \"g\") {\n        this.add = add2group;\n    }\n    if (this.type in {g: 1, mask: 1, pattern: 1, symbol: 1}) {\n        for (var method in Paper.prototype) if (Paper.prototype[has](method)) {\n            this[method] = Paper.prototype[method];\n        }\n    }\n}\n   /*\\\n     * Element.attr\n     [ method ]\n     **\n     * Gets or sets given attributes of the element.\n     **\n     - params (object) contains key-value pairs of attributes you want to set\n     * or\n     - param (string) name of the attribute\n     = (Element) the current element\n     * or\n     = (string) value of attribute\n     > Usage\n     | el.attr({\n     |     fill: \"#fc0\",\n     |     stroke: \"#000\",\n     |     strokeWidth: 2, // CamelCase...\n     |     \"fill-opacity\": 0.5, // or dash-separated names\n     |     width: \"*=2\" // prefixed values\n     | });\n     | console.log(el.attr(\"fill\")); // #fc0\n     * Prefixed values in format `\"+=10\"` supported. All four operations\n     * (`+`, `-`, `*` and `/`) could be used. Optionally you can use units for `+`\n     * and `-`: `\"+=2em\"`.\n    \\*/\n    Element.prototype.attr = function (params, value) {\n        var el = this,\n            node = el.node;\n        if (!params) {\n            if (node.nodeType != 1) {\n                return {\n                    text: node.nodeValue\n                };\n            }\n            var attr = node.attributes,\n                out = {};\n            for (var i = 0, ii = attr.length; i < ii; i++) {\n                out[attr[i].nodeName] = attr[i].nodeValue;\n            }\n            return out;\n        }\n        if (is(params, \"string\")) {\n            if (arguments.length > 1) {\n                var json = {};\n                json[params] = value;\n                params = json;\n            } else {\n                return eve(\"snap.util.getattr.\" + params, el).firstDefined();\n            }\n        }\n        for (var att in params) {\n            if (params[has](att)) {\n                eve(\"snap.util.attr.\" + att, el, params[att]);\n            }\n        }\n        return el;\n    };\n/*\\\n * Snap.parse\n [ method ]\n **\n * Parses SVG fragment and converts it into a @Fragment\n **\n - svg (string) SVG string\n = (Fragment) the @Fragment\n\\*/\nSnap.parse = function (svg) {\n    var f = glob.doc.createDocumentFragment(),\n        full = true,\n        div = glob.doc.createElement(\"div\");\n    svg = Str(svg);\n    if (!svg.match(/^\\s*<\\s*svg(?:\\s|>)/)) {\n        svg = \"<svg>\" + svg + \"</svg>\";\n        full = false;\n    }\n    div.innerHTML = svg;\n    svg = div.getElementsByTagName(\"svg\")[0];\n    if (svg) {\n        if (full) {\n            f = svg;\n        } else {\n            while (svg.firstChild) {\n                f.appendChild(svg.firstChild);\n            }\n        }\n    }\n    return new Fragment(f);\n};\nfunction Fragment(frag) {\n    this.node = frag;\n}\n/*\\\n * Snap.fragment\n [ method ]\n **\n * Creates a DOM fragment from a given list of elements or strings\n **\n - varargs (…) SVG string\n = (Fragment) the @Fragment\n\\*/\nSnap.fragment = function () {\n    var args = Array.prototype.slice.call(arguments, 0),\n        f = glob.doc.createDocumentFragment();\n    for (var i = 0, ii = args.length; i < ii; i++) {\n        var item = args[i];\n        if (item.node && item.node.nodeType) {\n            f.appendChild(item.node);\n        }\n        if (item.nodeType) {\n            f.appendChild(item);\n        }\n        if (typeof item == \"string\") {\n            f.appendChild(Snap.parse(item).node);\n        }\n    }\n    return new Fragment(f);\n};\n\nfunction make(name, parent) {\n    var res = $(name);\n    parent.appendChild(res);\n    var el = wrap(res);\n    return el;\n}\nfunction Paper(w, h) {\n    var res,\n        desc,\n        defs,\n        proto = Paper.prototype;\n    if (w && w.tagName && w.tagName.toLowerCase() == \"svg\") {\n        if (w.snap in hub) {\n            return hub[w.snap];\n        }\n        var doc = w.ownerDocument;\n        res = new Element(w);\n        desc = w.getElementsByTagName(\"desc\")[0];\n        defs = w.getElementsByTagName(\"defs\")[0];\n        if (!desc) {\n            desc = $(\"desc\");\n            desc.appendChild(doc.createTextNode(\"Created with Snap\"));\n            res.node.appendChild(desc);\n        }\n        if (!defs) {\n            defs = $(\"defs\");\n            res.node.appendChild(defs);\n        }\n        res.defs = defs;\n        for (var key in proto) if (proto[has](key)) {\n            res[key] = proto[key];\n        }\n        res.paper = res.root = res;\n    } else {\n        res = make(\"svg\", glob.doc.body);\n        $(res.node, {\n            height: h,\n            version: 1.1,\n            width: w,\n            xmlns: xmlns\n        });\n    }\n    return res;\n}\nfunction wrap(dom) {\n    if (!dom) {\n        return dom;\n    }\n    if (dom instanceof Element || dom instanceof Fragment) {\n        return dom;\n    }\n    if (dom.tagName && dom.tagName.toLowerCase() == \"svg\") {\n        return new Paper(dom);\n    }\n    if (dom.tagName && dom.tagName.toLowerCase() == \"object\" && dom.type == \"image/svg+xml\") {\n        return new Paper(dom.contentDocument.getElementsByTagName(\"svg\")[0]);\n    }\n    return new Element(dom);\n}\n\nSnap._.make = make;\nSnap._.wrap = wrap;\n/*\\\n * Paper.el\n [ method ]\n **\n * Creates an element on paper with a given name and no attributes\n **\n - name (string) tag name\n - attr (object) attributes\n = (Element) the current element\n > Usage\n | var c = paper.circle(10, 10, 10); // is the same as...\n | var c = paper.el(\"circle\").attr({\n |     cx: 10,\n |     cy: 10,\n |     r: 10\n | });\n | // and the same as\n | var c = paper.el(\"circle\", {\n |     cx: 10,\n |     cy: 10,\n |     r: 10\n | });\n\\*/\nPaper.prototype.el = function (name, attr) {\n    var el = make(name, this.node);\n    attr && el.attr(attr);\n    return el;\n};\n/*\\\n * Element.children\n [ method ]\n **\n * Returns array of all the children of the element.\n = (array) array of Elements\n\\*/\nElement.prototype.children = function () {\n    var out = [],\n        ch = this.node.childNodes;\n    for (var i = 0, ii = ch.length; i < ii; i++) {\n        out[i] = Snap(ch[i]);\n    }\n    return out;\n};\nfunction jsonFiller(root, o) {\n    for (var i = 0, ii = root.length; i < ii; i++) {\n        var item = {\n                type: root[i].type,\n                attr: root[i].attr()\n            },\n            children = root[i].children();\n        o.push(item);\n        if (children.length) {\n            jsonFiller(children, item.childNodes = []);\n        }\n    }\n}\n/*\\\n * Element.toJSON\n [ method ]\n **\n * Returns object representation of the given element and all its children.\n = (object) in format\n o {\n o     type (string) this.type,\n o     attr (object) attributes map,\n o     childNodes (array) optional array of children in the same format\n o }\n\\*/\nElement.prototype.toJSON = function () {\n    var out = [];\n    jsonFiller([this], out);\n    return out[0];\n};\n// default\neve.on(\"snap.util.getattr\", function () {\n    var att = eve.nt();\n    att = att.substring(att.lastIndexOf(\".\") + 1);\n    var css = att.replace(/[A-Z]/g, function (letter) {\n        return \"-\" + letter.toLowerCase();\n    });\n    if (cssAttr[has](css)) {\n        return this.node.ownerDocument.defaultView.getComputedStyle(this.node, null).getPropertyValue(css);\n    } else {\n        return $(this.node, att);\n    }\n});\nvar cssAttr = {\n    \"alignment-baseline\": 0,\n    \"baseline-shift\": 0,\n    \"clip\": 0,\n    \"clip-path\": 0,\n    \"clip-rule\": 0,\n    \"color\": 0,\n    \"color-interpolation\": 0,\n    \"color-interpolation-filters\": 0,\n    \"color-profile\": 0,\n    \"color-rendering\": 0,\n    \"cursor\": 0,\n    \"direction\": 0,\n    \"display\": 0,\n    \"dominant-baseline\": 0,\n    \"enable-background\": 0,\n    \"fill\": 0,\n    \"fill-opacity\": 0,\n    \"fill-rule\": 0,\n    \"filter\": 0,\n    \"flood-color\": 0,\n    \"flood-opacity\": 0,\n    \"font\": 0,\n    \"font-family\": 0,\n    \"font-size\": 0,\n    \"font-size-adjust\": 0,\n    \"font-stretch\": 0,\n    \"font-style\": 0,\n    \"font-variant\": 0,\n    \"font-weight\": 0,\n    \"glyph-orientation-horizontal\": 0,\n    \"glyph-orientation-vertical\": 0,\n    \"image-rendering\": 0,\n    \"kerning\": 0,\n    \"letter-spacing\": 0,\n    \"lighting-color\": 0,\n    \"marker\": 0,\n    \"marker-end\": 0,\n    \"marker-mid\": 0,\n    \"marker-start\": 0,\n    \"mask\": 0,\n    \"opacity\": 0,\n    \"overflow\": 0,\n    \"pointer-events\": 0,\n    \"shape-rendering\": 0,\n    \"stop-color\": 0,\n    \"stop-opacity\": 0,\n    \"stroke\": 0,\n    \"stroke-dasharray\": 0,\n    \"stroke-dashoffset\": 0,\n    \"stroke-linecap\": 0,\n    \"stroke-linejoin\": 0,\n    \"stroke-miterlimit\": 0,\n    \"stroke-opacity\": 0,\n    \"stroke-width\": 0,\n    \"text-anchor\": 0,\n    \"text-decoration\": 0,\n    \"text-rendering\": 0,\n    \"unicode-bidi\": 0,\n    \"visibility\": 0,\n    \"word-spacing\": 0,\n    \"writing-mode\": 0\n};\n\neve.on(\"snap.util.attr\", function (value) {\n    var att = eve.nt(),\n        attr = {};\n    att = att.substring(att.lastIndexOf(\".\") + 1);\n    attr[att] = value;\n    var style = att.replace(/-(\\w)/gi, function (all, letter) {\n            return letter.toUpperCase();\n        }),\n        css = att.replace(/[A-Z]/g, function (letter) {\n            return \"-\" + letter.toLowerCase();\n        });\n    if (cssAttr[has](css)) {\n        this.node.style[style] = value == null ? E : value;\n    } else {\n        $(this.node, attr);\n    }\n});\n(function (proto) {}(Paper.prototype));\n\n// simple ajax\n/*\\\n * Snap.ajax\n [ method ]\n **\n * Simple implementation of Ajax\n **\n - url (string) URL\n - postData (object|string) data for post request\n - callback (function) callback\n - scope (object) #optional scope of callback\n * or\n - url (string) URL\n - callback (function) callback\n - scope (object) #optional scope of callback\n = (XMLHttpRequest) the XMLHttpRequest object, just in case\n\\*/\nSnap.ajax = function (url, postData, callback, scope){\n    var req = new XMLHttpRequest,\n        id = ID();\n    if (req) {\n        if (is(postData, \"function\")) {\n            scope = callback;\n            callback = postData;\n            postData = null;\n        } else if (is(postData, \"object\")) {\n            var pd = [];\n            for (var key in postData) if (postData.hasOwnProperty(key)) {\n                pd.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(postData[key]));\n            }\n            postData = pd.join(\"&\");\n        }\n        req.open(postData ? \"POST\" : \"GET\", url, true);\n        if (postData) {\n            req.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n            req.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n        }\n        if (callback) {\n            eve.once(\"snap.ajax.\" + id + \".0\", callback);\n            eve.once(\"snap.ajax.\" + id + \".200\", callback);\n            eve.once(\"snap.ajax.\" + id + \".304\", callback);\n        }\n        req.onreadystatechange = function() {\n            if (req.readyState != 4) return;\n            eve(\"snap.ajax.\" + id + \".\" + req.status, scope, req);\n        };\n        if (req.readyState == 4) {\n            return req;\n        }\n        req.send(postData);\n        return req;\n    }\n};\n/*\\\n * Snap.load\n [ method ]\n **\n * Loads external SVG file as a @Fragment (see @Snap.ajax for more advanced AJAX)\n **\n - url (string) URL\n - callback (function) callback\n - scope (object) #optional scope of callback\n\\*/\nSnap.load = function (url, callback, scope) {\n    Snap.ajax(url, function (req) {\n        var f = Snap.parse(req.responseText);\n        scope ? callback.call(scope, f) : callback(f);\n    });\n};\nvar getOffset = function (elem) {\n    var box = elem.getBoundingClientRect(),\n        doc = elem.ownerDocument,\n        body = doc.body,\n        docElem = doc.documentElement,\n        clientTop = docElem.clientTop || body.clientTop || 0, clientLeft = docElem.clientLeft || body.clientLeft || 0,\n        top  = box.top  + (g.win.pageYOffset || docElem.scrollTop || body.scrollTop ) - clientTop,\n        left = box.left + (g.win.pageXOffset || docElem.scrollLeft || body.scrollLeft) - clientLeft;\n    return {\n        y: top,\n        x: left\n    };\n};\n/*\\\n * Snap.getElementByPoint\n [ method ]\n **\n * Returns you topmost element under given point.\n **\n = (object) Snap element object\n - x (number) x coordinate from the top left corner of the window\n - y (number) y coordinate from the top left corner of the window\n > Usage\n | Snap.getElementByPoint(mouseX, mouseY).attr({stroke: \"#f00\"});\n\\*/\nSnap.getElementByPoint = function (x, y) {\n    var paper = this,\n        svg = paper.canvas,\n        target = glob.doc.elementFromPoint(x, y);\n    if (glob.win.opera && target.tagName == \"svg\") {\n        var so = getOffset(target),\n            sr = target.createSVGRect();\n        sr.x = x - so.x;\n        sr.y = y - so.y;\n        sr.width = sr.height = 1;\n        var hits = target.getIntersectionList(sr, null);\n        if (hits.length) {\n            target = hits[hits.length - 1];\n        }\n    }\n    if (!target) {\n        return null;\n    }\n    return wrap(target);\n};\n/*\\\n * Snap.plugin\n [ method ]\n **\n * Let you write plugins. You pass in a function with five arguments, like this:\n | Snap.plugin(function (Snap, Element, Paper, global, Fragment) {\n |     Snap.newmethod = function () {};\n |     Element.prototype.newmethod = function () {};\n |     Paper.prototype.newmethod = function () {};\n | });\n * Inside the function you have access to all main objects (and their\n * prototypes). This allow you to extend anything you want.\n **\n - f (function) your plugin body\n\\*/\nSnap.plugin = function (f) {\n    f(Snap, Element, Paper, glob, Fragment);\n};\nglob.win.Snap = Snap;\nreturn Snap;\n}(window || this));\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        Str = String,\n        unit2px = Snap._unit2px,\n        $ = Snap._.$,\n        make = Snap._.make,\n        getSomeDefs = Snap._.getSomeDefs,\n        has = \"hasOwnProperty\",\n        wrap = Snap._.wrap;\n    /*\\\n     * Element.getBBox\n     [ method ]\n     **\n     * Returns the bounding box descriptor for the given element\n     **\n     = (object) bounding box descriptor:\n     o {\n     o     cx: (number) x of the center,\n     o     cy: (number) x of the center,\n     o     h: (number) height,\n     o     height: (number) height,\n     o     path: (string) path command for the box,\n     o     r0: (number) radius of a circle that fully encloses the box,\n     o     r1: (number) radius of the smallest circle that can be enclosed,\n     o     r2: (number) radius of the largest circle that can be enclosed,\n     o     vb: (string) box as a viewbox command,\n     o     w: (number) width,\n     o     width: (number) width,\n     o     x2: (number) x of the right side,\n     o     x: (number) x of the left side,\n     o     y2: (number) y of the bottom edge,\n     o     y: (number) y of the top edge\n     o }\n    \\*/\n    elproto.getBBox = function (isWithoutTransform) {\n        if (this.type == \"tspan\") {\n            return Snap._.box(this.node.getClientRects().item(0));\n        }\n        if (!Snap.Matrix || !Snap.path) {\n            return this.node.getBBox();\n        }\n        var el = this,\n            m = new Snap.Matrix;\n        if (el.removed) {\n            return Snap._.box();\n        }\n        while (el.type == \"use\") {\n            if (!isWithoutTransform) {\n                m = m.add(el.transform().localMatrix.translate(el.attr(\"x\") || 0, el.attr(\"y\") || 0));\n            }\n            if (el.original) {\n                el = el.original;\n            } else {\n                var href = el.attr(\"xlink:href\");\n                el = el.original = el.node.ownerDocument.getElementById(href.substring(href.indexOf(\"#\") + 1));\n            }\n        }\n        var _ = el._,\n            pathfinder = Snap.path.get[el.type] || Snap.path.get.deflt;\n        try {\n            if (isWithoutTransform) {\n                _.bboxwt = pathfinder ? Snap.path.getBBox(el.realPath = pathfinder(el)) : Snap._.box(el.node.getBBox());\n                return Snap._.box(_.bboxwt);\n            } else {\n                el.realPath = pathfinder(el);\n                el.matrix = el.transform().localMatrix;\n                _.bbox = Snap.path.getBBox(Snap.path.map(el.realPath, m.add(el.matrix)));\n                return Snap._.box(_.bbox);\n            }\n        } catch (e) {\n            // Firefox doesn’t give you bbox of hidden element\n            return Snap._.box();\n        }\n    };\n    var propString = function () {\n        return this.string;\n    };\n    function extractTransform(el, tstr) {\n        if (tstr == null) {\n            var doReturn = true;\n            if (el.type == \"linearGradient\" || el.type == \"radialGradient\") {\n                tstr = el.node.getAttribute(\"gradientTransform\");\n            } else if (el.type == \"pattern\") {\n                tstr = el.node.getAttribute(\"patternTransform\");\n            } else {\n                tstr = el.node.getAttribute(\"transform\");\n            }\n            if (!tstr) {\n                return new Snap.Matrix;\n            }\n            tstr = Snap._.svgTransform2string(tstr);\n        } else {\n            if (!Snap._.rgTransform.test(tstr)) {\n                tstr = Snap._.svgTransform2string(tstr);\n            } else {\n                tstr = Str(tstr).replace(/\\.{3}|\\u2026/g, el._.transform || \"\");\n            }\n            if (is(tstr, \"array\")) {\n                tstr = Snap.path ? Snap.path.toString.call(tstr) : Str(tstr);\n            }\n            el._.transform = tstr;\n        }\n        var m = Snap._.transform2matrix(tstr, el.getBBox(1));\n        if (doReturn) {\n            return m;\n        } else {\n            el.matrix = m;\n        }\n    }\n    /*\\\n     * Element.transform\n     [ method ]\n     **\n     * Gets or sets transformation of the element\n     **\n     - tstr (string) transform string in Snap or SVG format\n     = (Element) the current element\n     * or\n     = (object) transformation descriptor:\n     o {\n     o     string (string) transform string,\n     o     globalMatrix (Matrix) matrix of all transformations applied to element or its parents,\n     o     localMatrix (Matrix) matrix of transformations applied only to the element,\n     o     diffMatrix (Matrix) matrix of difference between global and local transformations,\n     o     global (string) global transformation as string,\n     o     local (string) local transformation as string,\n     o     toString (function) returns `string` property\n     o }\n    \\*/\n    elproto.transform = function (tstr) {\n        var _ = this._;\n        if (tstr == null) {\n            var papa = this,\n                global = new Snap.Matrix(this.node.getCTM()),\n                local = extractTransform(this),\n                ms = [local],\n                m = new Snap.Matrix,\n                i,\n                localString = local.toTransformString(),\n                string = Str(local) == Str(this.matrix) ?\n                            Str(_.transform) : localString;\n            while (papa.type != \"svg\" && (papa = papa.parent())) {\n                ms.push(extractTransform(papa));\n            }\n            i = ms.length;\n            while (i--) {\n                m.add(ms[i]);\n            }\n            return {\n                string: string,\n                globalMatrix: global,\n                totalMatrix: m,\n                localMatrix: local,\n                diffMatrix: global.clone().add(local.invert()),\n                global: global.toTransformString(),\n                total: m.toTransformString(),\n                local: localString,\n                toString: propString\n            };\n        }\n        if (tstr instanceof Snap.Matrix) {\n            this.matrix = tstr;\n            this._.transform = tstr.toTransformString();\n        } else {\n            extractTransform(this, tstr);\n        }\n\n        if (this.node) {\n            if (this.type == \"linearGradient\" || this.type == \"radialGradient\") {\n                $(this.node, {gradientTransform: this.matrix});\n            } else if (this.type == \"pattern\") {\n                $(this.node, {patternTransform: this.matrix});\n            } else {\n                $(this.node, {transform: this.matrix});\n            }\n        }\n\n        return this;\n    };\n    /*\\\n     * Element.parent\n     [ method ]\n     **\n     * Returns the element's parent\n     **\n     = (Element) the parent element\n    \\*/\n    elproto.parent = function () {\n        return wrap(this.node.parentNode);\n    };\n    /*\\\n     * Element.append\n     [ method ]\n     **\n     * Appends the given element to current one\n     **\n     - el (Element|Set) element to append\n     = (Element) the parent element\n    \\*/\n    /*\\\n     * Element.add\n     [ method ]\n     **\n     * See @Element.append\n    \\*/\n    elproto.append = elproto.add = function (el) {\n        if (el) {\n            if (el.type == \"set\") {\n                var it = this;\n                el.forEach(function (el) {\n                    it.add(el);\n                });\n                return this;\n            }\n            el = wrap(el);\n            this.node.appendChild(el.node);\n            el.paper = this.paper;\n        }\n        return this;\n    };\n    /*\\\n     * Element.appendTo\n     [ method ]\n     **\n     * Appends the current element to the given one\n     **\n     - el (Element) parent element to append to\n     = (Element) the child element\n    \\*/\n    elproto.appendTo = function (el) {\n        if (el) {\n            el = wrap(el);\n            el.append(this);\n        }\n        return this;\n    };\n    /*\\\n     * Element.prepend\n     [ method ]\n     **\n     * Prepends the given element to the current one\n     **\n     - el (Element) element to prepend\n     = (Element) the parent element\n    \\*/\n    elproto.prepend = function (el) {\n        if (el) {\n            if (el.type == \"set\") {\n                var it = this,\n                    first;\n                el.forEach(function (el) {\n                    if (first) {\n                        first.after(el);\n                    } else {\n                        it.prepend(el);\n                    }\n                    first = el;\n                });\n                return this;\n            }\n            el = wrap(el);\n            var parent = el.parent();\n            this.node.insertBefore(el.node, this.node.firstChild);\n            this.add && this.add();\n            el.paper = this.paper;\n            this.parent() && this.parent().add();\n            parent && parent.add();\n        }\n        return this;\n    };\n    /*\\\n     * Element.prependTo\n     [ method ]\n     **\n     * Prepends the current element to the given one\n     **\n     - el (Element) parent element to prepend to\n     = (Element) the child element\n    \\*/\n    elproto.prependTo = function (el) {\n        el = wrap(el);\n        el.prepend(this);\n        return this;\n    };\n    /*\\\n     * Element.before\n     [ method ]\n     **\n     * Inserts given element before the current one\n     **\n     - el (Element) element to insert\n     = (Element) the parent element\n    \\*/\n    elproto.before = function (el) {\n        if (el.type == \"set\") {\n            var it = this;\n            el.forEach(function (el) {\n                var parent = el.parent();\n                it.node.parentNode.insertBefore(el.node, it.node);\n                parent && parent.add();\n            });\n            this.parent().add();\n            return this;\n        }\n        el = wrap(el);\n        var parent = el.parent();\n        this.node.parentNode.insertBefore(el.node, this.node);\n        this.parent() && this.parent().add();\n        parent && parent.add();\n        el.paper = this.paper;\n        return this;\n    };\n    /*\\\n     * Element.after\n     [ method ]\n     **\n     * Inserts given element after the current one\n     **\n     - el (Element) element to insert\n     = (Element) the parent element\n    \\*/\n    elproto.after = function (el) {\n        el = wrap(el);\n        var parent = el.parent();\n        if (this.node.nextSibling) {\n            this.node.parentNode.insertBefore(el.node, this.node.nextSibling);\n        } else {\n            this.node.parentNode.appendChild(el.node);\n        }\n        this.parent() && this.parent().add();\n        parent && parent.add();\n        el.paper = this.paper;\n        return this;\n    };\n    /*\\\n     * Element.insertBefore\n     [ method ]\n     **\n     * Inserts the element after the given one\n     **\n     - el (Element) element next to whom insert to\n     = (Element) the parent element\n    \\*/\n    elproto.insertBefore = function (el) {\n        el = wrap(el);\n        var parent = this.parent();\n        el.node.parentNode.insertBefore(this.node, el.node);\n        this.paper = el.paper;\n        parent && parent.add();\n        el.parent() && el.parent().add();\n        return this;\n    };\n    /*\\\n     * Element.insertAfter\n     [ method ]\n     **\n     * Inserts the element after the given one\n     **\n     - el (Element) element next to whom insert to\n     = (Element) the parent element\n    \\*/\n    elproto.insertAfter = function (el) {\n        el = wrap(el);\n        var parent = this.parent();\n        el.node.parentNode.insertBefore(this.node, el.node.nextSibling);\n        this.paper = el.paper;\n        parent && parent.add();\n        el.parent() && el.parent().add();\n        return this;\n    };\n    /*\\\n     * Element.remove\n     [ method ]\n     **\n     * Removes element from the DOM\n     = (Element) the detached element\n    \\*/\n    elproto.remove = function () {\n        var parent = this.parent();\n        this.node.parentNode && this.node.parentNode.removeChild(this.node);\n        delete this.paper;\n        this.removed = true;\n        parent && parent.add();\n        return this;\n    };\n    /*\\\n     * Element.select\n     [ method ]\n     **\n     * Gathers the nested @Element matching the given set of CSS selectors\n     **\n     - query (string) CSS selector\n     = (Element) result of query selection\n    \\*/\n    elproto.select = function (query) {\n        return wrap(this.node.querySelector(query));\n    };\n    /*\\\n     * Element.selectAll\n     [ method ]\n     **\n     * Gathers nested @Element objects matching the given set of CSS selectors\n     **\n     - query (string) CSS selector\n     = (Set|array) result of query selection\n    \\*/\n    elproto.selectAll = function (query) {\n        var nodelist = this.node.querySelectorAll(query),\n            set = (Snap.set || Array)();\n        for (var i = 0; i < nodelist.length; i++) {\n            set.push(wrap(nodelist[i]));\n        }\n        return set;\n    };\n    /*\\\n     * Element.asPX\n     [ method ]\n     **\n     * Returns given attribute of the element as a `px` value (not %, em, etc.)\n     **\n     - attr (string) attribute name\n     - value (string) #optional attribute value\n     = (Element) result of query selection\n    \\*/\n    elproto.asPX = function (attr, value) {\n        if (value == null) {\n            value = this.attr(attr);\n        }\n        return +unit2px(this, attr, value);\n    };\n    // SIERRA Element.use(): I suggest adding a note about how to access the original element the returned <use> instantiates. It's a part of SVG with which ordinary web developers may be least familiar.\n    /*\\\n     * Element.use\n     [ method ]\n     **\n     * Creates a `<use>` element linked to the current element\n     **\n     = (Element) the `<use>` element\n    \\*/\n    elproto.use = function () {\n        var use,\n            id = this.node.id;\n        if (!id) {\n            id = this.id;\n            $(this.node, {\n                id: id\n            });\n        }\n        if (this.type == \"linearGradient\" || this.type == \"radialGradient\" ||\n            this.type == \"pattern\") {\n            use = make(this.type, this.node.parentNode);\n        } else {\n            use = make(\"use\", this.node.parentNode);\n        }\n        $(use.node, {\n            \"xlink:href\": \"#\" + id\n        });\n        use.original = this;\n        return use;\n    };\n    function fixids(el) {\n        var els = el.selectAll(\"*\"),\n            it,\n            url = /^\\s*url\\((\"|'|)(.*)\\1\\)\\s*$/,\n            ids = [],\n            uses = {};\n        function urltest(it, name) {\n            var val = $(it.node, name);\n            val = val && val.match(url);\n            val = val && val[2];\n            if (val && val.charAt() == \"#\") {\n                val = val.substring(1);\n            } else {\n                return;\n            }\n            if (val) {\n                uses[val] = (uses[val] || []).concat(function (id) {\n                    var attr = {};\n                    attr[name] = Snap.url(id);\n                    $(it.node, attr);\n                });\n            }\n        }\n        function linktest(it) {\n            var val = $(it.node, \"xlink:href\");\n            if (val && val.charAt() == \"#\") {\n                val = val.substring(1);\n            } else {\n                return;\n            }\n            if (val) {\n                uses[val] = (uses[val] || []).concat(function (id) {\n                    it.attr(\"xlink:href\", \"#\" + id);\n                });\n            }\n        }\n        for (var i = 0, ii = els.length; i < ii; i++) {\n            it = els[i];\n            urltest(it, \"fill\");\n            urltest(it, \"stroke\");\n            urltest(it, \"filter\");\n            urltest(it, \"mask\");\n            urltest(it, \"clip-path\");\n            linktest(it);\n            var oldid = $(it.node, \"id\");\n            if (oldid) {\n                $(it.node, {id: it.id});\n                ids.push({\n                    old: oldid,\n                    id: it.id\n                });\n            }\n        }\n        for (i = 0, ii = ids.length; i < ii; i++) {\n            var fs = uses[ids[i].old];\n            if (fs) {\n                for (var j = 0, jj = fs.length; j < jj; j++) {\n                    fs[j](ids[i].id);\n                }\n            }\n        }\n    }\n    /*\\\n     * Element.clone\n     [ method ]\n     **\n     * Creates a clone of the element and inserts it after the element\n     **\n     = (Element) the clone\n    \\*/\n    elproto.clone = function () {\n        var clone = wrap(this.node.cloneNode(true));\n        if ($(clone.node, \"id\")) {\n            $(clone.node, {id: clone.id});\n        }\n        fixids(clone);\n        clone.insertAfter(this);\n        return clone;\n    };\n    /*\\\n     * Element.toDefs\n     [ method ]\n     **\n     * Moves element to the shared `<defs>` area\n     **\n     = (Element) the element\n    \\*/\n    elproto.toDefs = function () {\n        var defs = getSomeDefs(this);\n        defs.appendChild(this.node);\n        return this;\n    };\n    /*\\\n     * Element.toPattern\n     [ method ]\n     **\n     * Creates a `<pattern>` element from the current element\n     **\n     * To create a pattern you have to specify the pattern rect:\n     - x (string|number)\n     - y (string|number)\n     - width (string|number)\n     - height (string|number)\n     = (Element) the `<pattern>` element\n     * You can use pattern later on as an argument for `fill` attribute:\n     | var p = paper.path(\"M10-5-10,15M15,0,0,15M0-5-20,15\").attr({\n     |         fill: \"none\",\n     |         stroke: \"#bada55\",\n     |         strokeWidth: 5\n     |     }).pattern(0, 0, 10, 10),\n     |     c = paper.circle(200, 200, 100);\n     | c.attr({\n     |     fill: p\n     | });\n    \\*/\n    elproto.pattern = elproto.toPattern = function (x, y, width, height) {\n        var p = make(\"pattern\", getSomeDefs(this));\n        if (x == null) {\n            x = this.getBBox();\n        }\n        if (is(x, \"object\") && \"x\" in x) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            x = x.x;\n        }\n        $(p.node, {\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n            patternUnits: \"userSpaceOnUse\",\n            id: p.id,\n            viewBox: [x, y, width, height].join(\" \")\n        });\n        p.node.appendChild(this.node);\n        return p;\n    };\n// SIERRA Element.marker(): clarify what a reference point is. E.g., helps you offset the object from its edge such as when centering it over a path.\n// SIERRA Element.marker(): I suggest the method should accept default reference point values.  Perhaps centered with (refX = width/2) and (refY = height/2)? Also, couldn't it assume the element's current _width_ and _height_? And please specify what _x_ and _y_ mean: offsets? If so, from where?  Couldn't they also be assigned default values?\n    /*\\\n     * Element.marker\n     [ method ]\n     **\n     * Creates a `<marker>` element from the current element\n     **\n     * To create a marker you have to specify the bounding rect and reference point:\n     - x (number)\n     - y (number)\n     - width (number)\n     - height (number)\n     - refX (number)\n     - refY (number)\n     = (Element) the `<marker>` element\n     * You can specify the marker later as an argument for `marker-start`, `marker-end`, `marker-mid`, and `marker` attributes. The `marker` attribute places the marker at every point along the path, and `marker-mid` places them at every point except the start and end.\n    \\*/\n    // TODO add usage for markers\n    elproto.marker = function (x, y, width, height, refX, refY) {\n        var p = make(\"marker\", getSomeDefs(this));\n        if (x == null) {\n            x = this.getBBox();\n        }\n        if (is(x, \"object\") && \"x\" in x) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            refX = x.refX || x.cx;\n            refY = x.refY || x.cy;\n            x = x.x;\n        }\n        $(p.node, {\n            viewBox: [x, y, width, height].join(\" \"),\n            markerWidth: width,\n            markerHeight: height,\n            orient: \"auto\",\n            refX: refX || 0,\n            refY: refY || 0,\n            id: p.id\n        });\n        p.node.appendChild(this.node);\n        return p;\n    };\n    var eldata = {};\n    /*\\\n     * Element.data\n     [ method ]\n     **\n     * Adds or retrieves given value associated with given key. (Don’t confuse\n     * with `data-` attributes)\n     *\n     * See also @Element.removeData\n     - key (string) key to store data\n     - value (any) #optional value to store\n     = (object) @Element\n     * or, if value is not specified:\n     = (any) value\n     > Usage\n     | for (var i = 0, i < 5, i++) {\n     |     paper.circle(10 + 15 * i, 10, 10)\n     |          .attr({fill: \"#000\"})\n     |          .data(\"i\", i)\n     |          .click(function () {\n     |             alert(this.data(\"i\"));\n     |          });\n     | }\n    \\*/\n    elproto.data = function (key, value) {\n        var data = eldata[this.id] = eldata[this.id] || {};\n        if (arguments.length == 0){\n            eve(\"snap.data.get.\" + this.id, this, data, null);\n            return data;\n        }\n        if (arguments.length == 1) {\n            if (Snap.is(key, \"object\")) {\n                for (var i in key) if (key[has](i)) {\n                    this.data(i, key[i]);\n                }\n                return this;\n            }\n            eve(\"snap.data.get.\" + this.id, this, data[key], key);\n            return data[key];\n        }\n        data[key] = value;\n        eve(\"snap.data.set.\" + this.id, this, value, key);\n        return this;\n    };\n    /*\\\n     * Element.removeData\n     [ method ]\n     **\n     * Removes value associated with an element by given key.\n     * If key is not provided, removes all the data of the element.\n     - key (string) #optional key\n     = (object) @Element\n    \\*/\n    elproto.removeData = function (key) {\n        if (key == null) {\n            eldata[this.id] = {};\n        } else {\n            eldata[this.id] && delete eldata[this.id][key];\n        }\n        return this;\n    };\n    /*\\\n     * Element.outerSVG\n     [ method ]\n     **\n     * Returns SVG code for the element, equivalent to HTML's `outerHTML`.\n     *\n     * See also @Element.innerSVG\n     = (string) SVG code for the element\n    \\*/\n    /*\\\n     * Element.toString\n     [ method ]\n     **\n     * See @Element.outerSVG\n    \\*/\n    elproto.outerSVG = elproto.toString = toString(1);\n    /*\\\n     * Element.innerSVG\n     [ method ]\n     **\n     * Returns SVG code for the element's contents, equivalent to HTML's `innerHTML`\n     = (string) SVG code for the element\n    \\*/\n    elproto.innerSVG = toString();\n    function toString(type) {\n        return function () {\n            var res = type ? \"<\" + this.type : \"\",\n                attr = this.node.attributes,\n                chld = this.node.childNodes;\n            if (type) {\n                for (var i = 0, ii = attr.length; i < ii; i++) {\n                    res += \" \" + attr[i].name + '=\"' +\n                            attr[i].value.replace(/\"/g, '\\\\\"') + '\"';\n                }\n            }\n            if (chld.length) {\n                type && (res += \">\");\n                for (i = 0, ii = chld.length; i < ii; i++) {\n                    if (chld[i].nodeType == 3) {\n                        res += chld[i].nodeValue;\n                    } else if (chld[i].nodeType == 1) {\n                        res += wrap(chld[i]).toString();\n                    }\n                }\n                type && (res += \"</\" + this.type + \">\");\n            } else {\n                type && (res += \"/>\");\n            }\n            return res;\n        };\n    }\n    elproto.toDataURL = function () {\n        if (window && window.btoa) {\n            var bb = this.getBBox(),\n                svg = Snap.format('<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"{width}\" height=\"{height}\" viewBox=\"{x} {y} {width} {height}\">{contents}</svg>', {\n                x: +bb.x.toFixed(3),\n                y: +bb.y.toFixed(3),\n                width: +bb.width.toFixed(3),\n                height: +bb.height.toFixed(3),\n                contents: this.outerSVG()\n            });\n            return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(svg)));\n        }\n    };\n    /*\\\n     * Fragment.select\n     [ method ]\n     **\n     * See @Element.select\n    \\*/\n    Fragment.prototype.select = elproto.select;\n    /*\\\n     * Fragment.selectAll\n     [ method ]\n     **\n     * See @Element.selectAll\n    \\*/\n    Fragment.prototype.selectAll = elproto.selectAll;\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var objectToString = Object.prototype.toString,\n        Str = String,\n        math = Math,\n        E = \"\";\n    function Matrix(a, b, c, d, e, f) {\n        if (b == null && objectToString.call(a) == \"[object SVGMatrix]\") {\n            this.a = a.a;\n            this.b = a.b;\n            this.c = a.c;\n            this.d = a.d;\n            this.e = a.e;\n            this.f = a.f;\n            return;\n        }\n        if (a != null) {\n            this.a = +a;\n            this.b = +b;\n            this.c = +c;\n            this.d = +d;\n            this.e = +e;\n            this.f = +f;\n        } else {\n            this.a = 1;\n            this.b = 0;\n            this.c = 0;\n            this.d = 1;\n            this.e = 0;\n            this.f = 0;\n        }\n    }\n    (function (matrixproto) {\n        /*\\\n         * Matrix.add\n         [ method ]\n         **\n         * Adds the given matrix to existing one\n         - a (number)\n         - b (number)\n         - c (number)\n         - d (number)\n         - e (number)\n         - f (number)\n         * or\n         - matrix (object) @Matrix\n        \\*/\n        matrixproto.add = function (a, b, c, d, e, f) {\n            if (a && a instanceof Matrix) {\n                return this.add(a.a, a.b, a.c, a.d, a.e, a.f);\n            }\n            var aNew = a * this.a + b * this.c,\n                bNew = a * this.b + b * this.d;\n            this.e += e * this.a + f * this.c;\n            this.f += e * this.b + f * this.d;\n            this.c = c * this.a + d * this.c;\n            this.d = c * this.b + d * this.d;\n\n            this.a = aNew;\n            this.b = bNew;\n            return this;\n        };\n        /*\\\n         * Matrix.multLeft\n         [ method ]\n         **\n         * Multiplies a passed affine transform to the left: M * this.\n         - a (number)\n         - b (number)\n         - c (number)\n         - d (number)\n         - e (number)\n         - f (number)\n         * or\n         - matrix (object) @Matrix\n        \\*/\n        Matrix.prototype.multLeft = function (a, b, c, d, e, f) {\n            if (a && a instanceof Matrix) {\n                return this.multLeft(a.a, a.b, a.c, a.d, a.e, a.f);\n            }\n            var aNew = a * this.a + c * this.b,\n                cNew = a * this.c + c * this.d,\n                eNew = a * this.e + c * this.f + e;\n            this.b = b * this.a + d * this.b;\n            this.d = b * this.c + d * this.d;\n            this.f = b * this.e + d * this.f + f;\n\n            this.a = aNew;\n            this.c = cNew;\n            this.e = eNew;\n            return this;\n        };\n        /*\\\n         * Matrix.invert\n         [ method ]\n         **\n         * Returns an inverted version of the matrix\n         = (object) @Matrix\n        \\*/\n        matrixproto.invert = function () {\n            var me = this,\n                x = me.a * me.d - me.b * me.c;\n            return new Matrix(me.d / x, -me.b / x, -me.c / x, me.a / x, (me.c * me.f - me.d * me.e) / x, (me.b * me.e - me.a * me.f) / x);\n        };\n        /*\\\n         * Matrix.clone\n         [ method ]\n         **\n         * Returns a copy of the matrix\n         = (object) @Matrix\n        \\*/\n        matrixproto.clone = function () {\n            return new Matrix(this.a, this.b, this.c, this.d, this.e, this.f);\n        };\n        /*\\\n         * Matrix.translate\n         [ method ]\n         **\n         * Translate the matrix\n         - x (number) horizontal offset distance\n         - y (number) vertical offset distance\n        \\*/\n        matrixproto.translate = function (x, y) {\n            this.e += x * this.a + y * this.c;\n            this.f += x * this.b + y * this.d;\n            return this;\n        };\n        /*\\\n         * Matrix.scale\n         [ method ]\n         **\n         * Scales the matrix\n         - x (number) amount to be scaled, with `1` resulting in no change\n         - y (number) #optional amount to scale along the vertical axis. (Otherwise `x` applies to both axes.)\n         - cx (number) #optional horizontal origin point from which to scale\n         - cy (number) #optional vertical origin point from which to scale\n         * Default cx, cy is the middle point of the element.\n        \\*/\n        matrixproto.scale = function (x, y, cx, cy) {\n            y == null && (y = x);\n            (cx || cy) && this.translate(cx, cy);\n            this.a *= x;\n            this.b *= x;\n            this.c *= y;\n            this.d *= y;\n            (cx || cy) && this.translate(-cx, -cy);\n            return this;\n        };\n        /*\\\n         * Matrix.rotate\n         [ method ]\n         **\n         * Rotates the matrix\n         - a (number) angle of rotation, in degrees\n         - x (number) horizontal origin point from which to rotate\n         - y (number) vertical origin point from which to rotate\n        \\*/\n        matrixproto.rotate = function (a, x, y) {\n            a = Snap.rad(a);\n            x = x || 0;\n            y = y || 0;\n            var cos = +math.cos(a).toFixed(9),\n                sin = +math.sin(a).toFixed(9);\n            this.add(cos, sin, -sin, cos, x, y);\n            return this.add(1, 0, 0, 1, -x, -y);\n        };\n        /*\\\n         * Matrix.skewX\n         [ method ]\n         **\n         * Skews the matrix along the x-axis\n         - x (number) Angle to skew along the x-axis (in degrees).\n        \\*/\n        matrixproto.skewX = function (x) {\n            return this.skew(x, 0);\n        };\n        /*\\\n         * Matrix.skewY\n         [ method ]\n         **\n         * Skews the matrix along the y-axis\n         - y (number) Angle to skew along the y-axis (in degrees).\n        \\*/\n        matrixproto.skewY = function (y) {\n            return this.skew(0, y);\n        };\n        /*\\\n         * Matrix.skew\n         [ method ]\n         **\n         * Skews the matrix\n         - y (number) Angle to skew along the y-axis (in degrees).\n         - x (number) Angle to skew along the x-axis (in degrees).\n        \\*/\n        matrixproto.skew = function (x, y) {\n            x = x || 0;\n            y = y || 0;\n            x = Snap.rad(x);\n            y = Snap.rad(y);\n            var c = math.tan(x).toFixed(9);\n            var b = math.tan(y).toFixed(9);\n            return this.add(1, b, c, 1, 0, 0);\n        };\n        /*\\\n         * Matrix.x\n         [ method ]\n         **\n         * Returns x coordinate for given point after transformation described by the matrix. See also @Matrix.y\n         - x (number)\n         - y (number)\n         = (number) x\n        \\*/\n        matrixproto.x = function (x, y) {\n            return x * this.a + y * this.c + this.e;\n        };\n        /*\\\n         * Matrix.y\n         [ method ]\n         **\n         * Returns y coordinate for given point after transformation described by the matrix. See also @Matrix.x\n         - x (number)\n         - y (number)\n         = (number) y\n        \\*/\n        matrixproto.y = function (x, y) {\n            return x * this.b + y * this.d + this.f;\n        };\n        matrixproto.get = function (i) {\n            return +this[Str.fromCharCode(97 + i)].toFixed(4);\n        };\n        matrixproto.toString = function () {\n            return \"matrix(\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)].join() + \")\";\n        };\n        matrixproto.offset = function () {\n            return [this.e.toFixed(4), this.f.toFixed(4)];\n        };\n        function norm(a) {\n            return a[0] * a[0] + a[1] * a[1];\n        }\n        function normalize(a) {\n            var mag = math.sqrt(norm(a));\n            a[0] && (a[0] /= mag);\n            a[1] && (a[1] /= mag);\n        }\n        /*\\\n         * Matrix.determinant\n         [ method ]\n         **\n         * Finds determinant of the given matrix.\n         = (number) determinant\n        \\*/\n        matrixproto.determinant = function () {\n            return this.a * this.d - this.b * this.c;\n        };\n        /*\\\n         * Matrix.split\n         [ method ]\n         **\n         * Splits matrix into primitive transformations\n         = (object) in format:\n         o dx (number) translation by x\n         o dy (number) translation by y\n         o scalex (number) scale by x\n         o scaley (number) scale by y\n         o shear (number) shear\n         o rotate (number) rotation in deg\n         o isSimple (boolean) could it be represented via simple transformations\n        \\*/\n        matrixproto.split = function () {\n            var out = {};\n            // translation\n            out.dx = this.e;\n            out.dy = this.f;\n\n            // scale and shear\n            var row = [[this.a, this.b], [this.c, this.d]];\n            out.scalex = math.sqrt(norm(row[0]));\n            normalize(row[0]);\n\n            out.shear = row[0][0] * row[1][0] + row[0][1] * row[1][1];\n            row[1] = [row[1][0] - row[0][0] * out.shear, row[1][1] - row[0][1] * out.shear];\n\n            out.scaley = math.sqrt(norm(row[1]));\n            normalize(row[1]);\n            out.shear /= out.scaley;\n\n            if (this.determinant() < 0) {\n                out.scalex = -out.scalex;\n            }\n\n            // rotation\n            var sin = row[0][1],\n                cos = row[1][1];\n            if (cos < 0) {\n                out.rotate = Snap.deg(math.acos(cos));\n                if (sin < 0) {\n                    out.rotate = 360 - out.rotate;\n                }\n            } else {\n                out.rotate = Snap.deg(math.asin(sin));\n            }\n\n            out.isSimple = !+out.shear.toFixed(9) && (out.scalex.toFixed(9) == out.scaley.toFixed(9) || !out.rotate);\n            out.isSuperSimple = !+out.shear.toFixed(9) && out.scalex.toFixed(9) == out.scaley.toFixed(9) && !out.rotate;\n            out.noRotation = !+out.shear.toFixed(9) && !out.rotate;\n            return out;\n        };\n        /*\\\n         * Matrix.toTransformString\n         [ method ]\n         **\n         * Returns transform string that represents given matrix\n         = (string) transform string\n        \\*/\n        matrixproto.toTransformString = function (shorter) {\n            var s = shorter || this.split();\n            if (!+s.shear.toFixed(9)) {\n                s.scalex = +s.scalex.toFixed(4);\n                s.scaley = +s.scaley.toFixed(4);\n                s.rotate = +s.rotate.toFixed(4);\n                return  (s.dx || s.dy ? \"t\" + [+s.dx.toFixed(4), +s.dy.toFixed(4)] : E) +\n                        (s.rotate ? \"r\" + [+s.rotate.toFixed(4), 0, 0] : E) +\n                        (s.scalex != 1 || s.scaley != 1 ? \"s\" + [s.scalex, s.scaley, 0, 0] : E);\n            } else {\n                return \"m\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)];\n            }\n        };\n    })(Matrix.prototype);\n    /*\\\n     * Snap.Matrix\n     [ method ]\n     **\n     * Matrix constructor, extend on your own risk.\n     * To create matrices use @Snap.matrix.\n    \\*/\n    Snap.Matrix = Matrix;\n    /*\\\n     * Snap.matrix\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns a matrix based on the given parameters\n     - a (number)\n     - b (number)\n     - c (number)\n     - d (number)\n     - e (number)\n     - f (number)\n     * or\n     - svgMatrix (SVGMatrix)\n     = (object) @Matrix\n    \\*/\n    Snap.matrix = function (a, b, c, d, e, f) {\n        return new Matrix(a, b, c, d, e, f);\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var has = \"hasOwnProperty\",\n        make = Snap._.make,\n        wrap = Snap._.wrap,\n        is = Snap.is,\n        getSomeDefs = Snap._.getSomeDefs,\n        reURLValue = /^url\\((['\"]?)([^)]+)\\1\\)$/,\n        $ = Snap._.$,\n        URL = Snap.url,\n        Str = String,\n        separator = Snap._.separator,\n        E = \"\";\n    /*\\\n     * Snap.deurl\n     [ method ]\n     **\n     * Unwraps path from `\"url(<path>)\"`.\n     - value (string) url path\n     = (string) unwrapped path\n    \\*/\n    Snap.deurl = function (value) {\n        var res = String(value).match(reURLValue);\n        return res ? res[2] : value;\n    }\n    // Attributes event handlers\n    eve.on(\"snap.util.attr.mask\", function (value) {\n        if (value instanceof Element || value instanceof Fragment) {\n            eve.stop();\n            if (value instanceof Fragment && value.node.childNodes.length == 1) {\n                value = value.node.firstChild;\n                getSomeDefs(this).appendChild(value);\n                value = wrap(value);\n            }\n            if (value.type == \"mask\") {\n                var mask = value;\n            } else {\n                mask = make(\"mask\", getSomeDefs(this));\n                mask.node.appendChild(value.node);\n            }\n            !mask.node.id && $(mask.node, {\n                id: mask.id\n            });\n            $(this.node, {\n                mask: URL(mask.id)\n            });\n        }\n    });\n    (function (clipIt) {\n        eve.on(\"snap.util.attr.clip\", clipIt);\n        eve.on(\"snap.util.attr.clip-path\", clipIt);\n        eve.on(\"snap.util.attr.clipPath\", clipIt);\n    }(function (value) {\n        if (value instanceof Element || value instanceof Fragment) {\n            eve.stop();\n            var clip,\n                node = value.node;\n            while (node) {\n                if (node.nodeName === \"clipPath\") {\n                    clip = new Element(node);\n                    break;\n                }\n                if (node.nodeName === \"svg\") {\n                    clip = undefined;\n                    break;\n                }\n                node = node.parentNode;\n            }\n            if (!clip) {\n                clip = make(\"clipPath\", getSomeDefs(this));\n                clip.node.appendChild(value.node);\n                !clip.node.id && $(clip.node, {\n                    id: clip.id\n                });\n            }\n            $(this.node, {\n                \"clip-path\": URL(clip.node.id || clip.id)\n            });\n        }\n    }));\n    function fillStroke(name) {\n        return function (value) {\n            eve.stop();\n            if (value instanceof Fragment && value.node.childNodes.length == 1 &&\n                (value.node.firstChild.tagName == \"radialGradient\" ||\n                value.node.firstChild.tagName == \"linearGradient\" ||\n                value.node.firstChild.tagName == \"pattern\")) {\n                value = value.node.firstChild;\n                getSomeDefs(this).appendChild(value);\n                value = wrap(value);\n            }\n            if (value instanceof Element) {\n                if (value.type == \"radialGradient\" || value.type == \"linearGradient\"\n                   || value.type == \"pattern\") {\n                    if (!value.node.id) {\n                        $(value.node, {\n                            id: value.id\n                        });\n                    }\n                    var fill = URL(value.node.id);\n                } else {\n                    fill = value.attr(name);\n                }\n            } else {\n                fill = Snap.color(value);\n                if (fill.error) {\n                    var grad = Snap(getSomeDefs(this).ownerSVGElement).gradient(value);\n                    if (grad) {\n                        if (!grad.node.id) {\n                            $(grad.node, {\n                                id: grad.id\n                            });\n                        }\n                        fill = URL(grad.node.id);\n                    } else {\n                        fill = value;\n                    }\n                } else {\n                    fill = Str(fill);\n                }\n            }\n            var attrs = {};\n            attrs[name] = fill;\n            $(this.node, attrs);\n            this.node.style[name] = E;\n        };\n    }\n    eve.on(\"snap.util.attr.fill\", fillStroke(\"fill\"));\n    eve.on(\"snap.util.attr.stroke\", fillStroke(\"stroke\"));\n    var gradrg = /^([lr])(?:\\(([^)]*)\\))?(.*)$/i;\n    eve.on(\"snap.util.grad.parse\", function parseGrad(string) {\n        string = Str(string);\n        var tokens = string.match(gradrg);\n        if (!tokens) {\n            return null;\n        }\n        var type = tokens[1],\n            params = tokens[2],\n            stops = tokens[3];\n        params = params.split(/\\s*,\\s*/).map(function (el) {\n            return +el == el ? +el : el;\n        });\n        if (params.length == 1 && params[0] == 0) {\n            params = [];\n        }\n        stops = stops.split(\"-\");\n        stops = stops.map(function (el) {\n            el = el.split(\":\");\n            var out = {\n                color: el[0]\n            };\n            if (el[1]) {\n                out.offset = parseFloat(el[1]);\n            }\n            return out;\n        });\n        var len = stops.length,\n            start = 0,\n            j = 0;\n        function seed(i, end) {\n            var step = (end - start) / (i - j);\n            for (var k = j; k < i; k++) {\n                stops[k].offset = +(+start + step * (k - j)).toFixed(2);\n            }\n            j = i;\n            start = end;\n        }\n        len--;\n        for (var i = 0; i < len; i++) if (\"offset\" in stops[i]) {\n            seed(i, stops[i].offset);\n        }\n        stops[len].offset = stops[len].offset || 100;\n        seed(len, stops[len].offset);\n        return {\n            type: type,\n            params: params,\n            stops: stops\n        };\n    });\n\n    eve.on(\"snap.util.attr.d\", function (value) {\n        eve.stop();\n        if (is(value, \"array\") && is(value[0], \"array\")) {\n            value = Snap.path.toString.call(value);\n        }\n        value = Str(value);\n        if (value.match(/[ruo]/i)) {\n            value = Snap.path.toAbsolute(value);\n        }\n        $(this.node, {d: value});\n    })(-1);\n    eve.on(\"snap.util.attr.#text\", function (value) {\n        eve.stop();\n        value = Str(value);\n        var txt = glob.doc.createTextNode(value);\n        while (this.node.firstChild) {\n            this.node.removeChild(this.node.firstChild);\n        }\n        this.node.appendChild(txt);\n    })(-1);\n    eve.on(\"snap.util.attr.path\", function (value) {\n        eve.stop();\n        this.attr({d: value});\n    })(-1);\n    eve.on(\"snap.util.attr.class\", function (value) {\n        eve.stop();\n        this.node.className.baseVal = value;\n    })(-1);\n    eve.on(\"snap.util.attr.viewBox\", function (value) {\n        var vb;\n        if (is(value, \"object\") && \"x\" in value) {\n            vb = [value.x, value.y, value.width, value.height].join(\" \");\n        } else if (is(value, \"array\")) {\n            vb = value.join(\" \");\n        } else {\n            vb = value;\n        }\n        $(this.node, {\n            viewBox: vb\n        });\n        eve.stop();\n    })(-1);\n    eve.on(\"snap.util.attr.transform\", function (value) {\n        this.transform(value);\n        eve.stop();\n    })(-1);\n    eve.on(\"snap.util.attr.r\", function (value) {\n        if (this.type == \"rect\") {\n            eve.stop();\n            $(this.node, {\n                rx: value,\n                ry: value\n            });\n        }\n    })(-1);\n    eve.on(\"snap.util.attr.textpath\", function (value) {\n        eve.stop();\n        if (this.type == \"text\") {\n            var id, tp, node;\n            if (!value && this.textPath) {\n                tp = this.textPath;\n                while (tp.node.firstChild) {\n                    this.node.appendChild(tp.node.firstChild);\n                }\n                tp.remove();\n                delete this.textPath;\n                return;\n            }\n            if (is(value, \"string\")) {\n                var defs = getSomeDefs(this),\n                    path = wrap(defs.parentNode).path(value);\n                defs.appendChild(path.node);\n                id = path.id;\n                path.attr({id: id});\n            } else {\n                value = wrap(value);\n                if (value instanceof Element) {\n                    id = value.attr(\"id\");\n                    if (!id) {\n                        id = value.id;\n                        value.attr({id: id});\n                    }\n                }\n            }\n            if (id) {\n                tp = this.textPath;\n                node = this.node;\n                if (tp) {\n                    tp.attr({\"xlink:href\": \"#\" + id});\n                } else {\n                    tp = $(\"textPath\", {\n                        \"xlink:href\": \"#\" + id\n                    });\n                    while (node.firstChild) {\n                        tp.appendChild(node.firstChild);\n                    }\n                    node.appendChild(tp);\n                    this.textPath = wrap(tp);\n                }\n            }\n        }\n    })(-1);\n    eve.on(\"snap.util.attr.text\", function (value) {\n        if (this.type == \"text\") {\n            var i = 0,\n                node = this.node,\n                tuner = function (chunk) {\n                    var out = $(\"tspan\");\n                    if (is(chunk, \"array\")) {\n                        for (var i = 0; i < chunk.length; i++) {\n                            out.appendChild(tuner(chunk[i]));\n                        }\n                    } else {\n                        out.appendChild(glob.doc.createTextNode(chunk));\n                    }\n                    out.normalize && out.normalize();\n                    return out;\n                };\n            while (node.firstChild) {\n                node.removeChild(node.firstChild);\n            }\n            var tuned = tuner(value);\n            while (tuned.firstChild) {\n                node.appendChild(tuned.firstChild);\n            }\n        }\n        eve.stop();\n    })(-1);\n    function setFontSize(value) {\n        eve.stop();\n        if (value == +value) {\n            value += \"px\";\n        }\n        this.node.style.fontSize = value;\n    }\n    eve.on(\"snap.util.attr.fontSize\", setFontSize)(-1);\n    eve.on(\"snap.util.attr.font-size\", setFontSize)(-1);\n\n\n    eve.on(\"snap.util.getattr.transform\", function () {\n        eve.stop();\n        return this.transform();\n    })(-1);\n    eve.on(\"snap.util.getattr.textpath\", function () {\n        eve.stop();\n        return this.textPath;\n    })(-1);\n    // Markers\n    (function () {\n        function getter(end) {\n            return function () {\n                eve.stop();\n                var style = glob.doc.defaultView.getComputedStyle(this.node, null).getPropertyValue(\"marker-\" + end);\n                if (style == \"none\") {\n                    return style;\n                } else {\n                    return Snap(glob.doc.getElementById(style.match(reURLValue)[1]));\n                }\n            };\n        }\n        function setter(end) {\n            return function (value) {\n                eve.stop();\n                var name = \"marker\" + end.charAt(0).toUpperCase() + end.substring(1);\n                if (value == \"\" || !value) {\n                    this.node.style[name] = \"none\";\n                    return;\n                }\n                if (value.type == \"marker\") {\n                    var id = value.node.id;\n                    if (!id) {\n                        $(value.node, {id: value.id});\n                    }\n                    this.node.style[name] = URL(id);\n                    return;\n                }\n            };\n        }\n        eve.on(\"snap.util.getattr.marker-end\", getter(\"end\"))(-1);\n        eve.on(\"snap.util.getattr.markerEnd\", getter(\"end\"))(-1);\n        eve.on(\"snap.util.getattr.marker-start\", getter(\"start\"))(-1);\n        eve.on(\"snap.util.getattr.markerStart\", getter(\"start\"))(-1);\n        eve.on(\"snap.util.getattr.marker-mid\", getter(\"mid\"))(-1);\n        eve.on(\"snap.util.getattr.markerMid\", getter(\"mid\"))(-1);\n        eve.on(\"snap.util.attr.marker-end\", setter(\"end\"))(-1);\n        eve.on(\"snap.util.attr.markerEnd\", setter(\"end\"))(-1);\n        eve.on(\"snap.util.attr.marker-start\", setter(\"start\"))(-1);\n        eve.on(\"snap.util.attr.markerStart\", setter(\"start\"))(-1);\n        eve.on(\"snap.util.attr.marker-mid\", setter(\"mid\"))(-1);\n        eve.on(\"snap.util.attr.markerMid\", setter(\"mid\"))(-1);\n    }());\n    eve.on(\"snap.util.getattr.r\", function () {\n        if (this.type == \"rect\" && $(this.node, \"rx\") == $(this.node, \"ry\")) {\n            eve.stop();\n            return $(this.node, \"rx\");\n        }\n    })(-1);\n    function textExtract(node) {\n        var out = [];\n        var children = node.childNodes;\n        for (var i = 0, ii = children.length; i < ii; i++) {\n            var chi = children[i];\n            if (chi.nodeType == 3) {\n                out.push(chi.nodeValue);\n            }\n            if (chi.tagName == \"tspan\") {\n                if (chi.childNodes.length == 1 && chi.firstChild.nodeType == 3) {\n                    out.push(chi.firstChild.nodeValue);\n                } else {\n                    out.push(textExtract(chi));\n                }\n            }\n        }\n        return out;\n    }\n    eve.on(\"snap.util.getattr.text\", function () {\n        if (this.type == \"text\" || this.type == \"tspan\") {\n            eve.stop();\n            var out = textExtract(this.node);\n            return out.length == 1 ? out[0] : out;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.#text\", function () {\n        return this.node.textContent;\n    })(-1);\n    eve.on(\"snap.util.getattr.fill\", function (internal) {\n        if (internal) {\n            return;\n        }\n        eve.stop();\n        var value = eve(\"snap.util.getattr.fill\", this, true).firstDefined();\n        return Snap(Snap.deurl(value)) || value;\n    })(-1);\n    eve.on(\"snap.util.getattr.stroke\", function (internal) {\n        if (internal) {\n            return;\n        }\n        eve.stop();\n        var value = eve(\"snap.util.getattr.stroke\", this, true).firstDefined();\n        return Snap(Snap.deurl(value)) || value;\n    })(-1);\n    eve.on(\"snap.util.getattr.viewBox\", function () {\n        eve.stop();\n        var vb = $(this.node, \"viewBox\");\n        if (vb) {\n            vb = vb.split(separator);\n            return Snap._.box(+vb[0], +vb[1], +vb[2], +vb[3]);\n        } else {\n            return;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.points\", function () {\n        var p = $(this.node, \"points\");\n        eve.stop();\n        if (p) {\n            return p.split(separator);\n        } else {\n            return;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.path\", function () {\n        var p = $(this.node, \"d\");\n        eve.stop();\n        return p;\n    })(-1);\n    eve.on(\"snap.util.getattr.class\", function () {\n        return this.node.className.baseVal;\n    })(-1);\n    function getFontSize() {\n        eve.stop();\n        return this.node.style.fontSize;\n    }\n    eve.on(\"snap.util.getattr.fontSize\", getFontSize)(-1);\n    eve.on(\"snap.util.getattr.font-size\", getFontSize)(-1);\n});\n\n// Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var rgNotSpace = /\\S+/g,\n        rgBadSpace = /[\\t\\r\\n\\f]/g,\n        rgTrim = /(^\\s+|\\s+$)/g,\n        Str = String,\n        elproto = Element.prototype;\n    /*\\\n     * Element.addClass\n     [ method ]\n     **\n     * Adds given class name or list of class names to the element.\n     - value (string) class name or space separated list of class names\n     **\n     = (Element) original element.\n    \\*/\n    elproto.addClass = function (value) {\n        var classes = Str(value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n\n        if (classes.length) {\n            j = 0;\n            while (clazz = classes[j++]) {\n                pos = curClasses.indexOf(clazz);\n                if (!~pos) {\n                    curClasses.push(clazz);\n                }\n            }\n\n            finalValue = curClasses.join(\" \");\n            if (className != finalValue) {\n                elem.className.baseVal = finalValue;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Element.removeClass\n     [ method ]\n     **\n     * Removes given class name or list of class names from the element.\n     - value (string) class name or space separated list of class names\n     **\n     = (Element) original element.\n    \\*/\n    elproto.removeClass = function (value) {\n        var classes = Str(value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n        if (curClasses.length) {\n            j = 0;\n            while (clazz = classes[j++]) {\n                pos = curClasses.indexOf(clazz);\n                if (~pos) {\n                    curClasses.splice(pos, 1);\n                }\n            }\n\n            finalValue = curClasses.join(\" \");\n            if (className != finalValue) {\n                elem.className.baseVal = finalValue;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Element.hasClass\n     [ method ]\n     **\n     * Checks if the element has a given class name in the list of class names applied to it.\n     - value (string) class name\n     **\n     = (boolean) `true` if the element has given class\n    \\*/\n    elproto.hasClass = function (value) {\n        var elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [];\n        return !!~curClasses.indexOf(value);\n    };\n    /*\\\n     * Element.toggleClass\n     [ method ]\n     **\n     * Add or remove one or more classes from the element, depending on either\n     * the class’s presence or the value of the `flag` argument.\n     - value (string) class name or space separated list of class names\n     - flag (boolean) value to determine whether the class should be added or removed\n     **\n     = (Element) original element.\n    \\*/\n    elproto.toggleClass = function (value, flag) {\n        if (flag != null) {\n            if (flag) {\n                return this.addClass(value);\n            } else {\n                return this.removeClass(value);\n            }\n        }\n        var classes = (value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n        j = 0;\n        while (clazz = classes[j++]) {\n            pos = curClasses.indexOf(clazz);\n            if (~pos) {\n                curClasses.splice(pos, 1);\n            } else {\n                curClasses.push(clazz);\n            }\n        }\n\n        finalValue = curClasses.join(\" \");\n        if (className != finalValue) {\n            elem.className.baseVal = finalValue;\n        }\n        return this;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var operators = {\n            \"+\": function (x, y) {\n                    return x + y;\n                },\n            \"-\": function (x, y) {\n                    return x - y;\n                },\n            \"/\": function (x, y) {\n                    return x / y;\n                },\n            \"*\": function (x, y) {\n                    return x * y;\n                }\n        },\n        Str = String,\n        reUnit = /[a-z]+$/i,\n        reAddon = /^\\s*([+\\-\\/*])\\s*=\\s*([\\d.eE+\\-]+)\\s*([^\\d\\s]+)?\\s*$/;\n    function getNumber(val) {\n        return val;\n    }\n    function getUnit(unit) {\n        return function (val) {\n            return +val.toFixed(3) + unit;\n        };\n    }\n    eve.on(\"snap.util.attr\", function (val) {\n        var plus = Str(val).match(reAddon);\n        if (plus) {\n            var evnt = eve.nt(),\n                name = evnt.substring(evnt.lastIndexOf(\".\") + 1),\n                a = this.attr(name),\n                atr = {};\n            eve.stop();\n            var unit = plus[3] || \"\",\n                aUnit = a.match(reUnit),\n                op = operators[plus[1]];\n            if (aUnit && aUnit == unit) {\n                val = op(parseFloat(a), +plus[2]);\n            } else {\n                a = this.asPX(name);\n                val = op(this.asPX(name), this.asPX(name, plus[2] + unit));\n            }\n            if (isNaN(a) || isNaN(val)) {\n                return;\n            }\n            atr[name] = val;\n            this.attr(atr);\n        }\n    })(-10);\n    eve.on(\"snap.util.equal\", function (name, b) {\n        var A, B, a = Str(this.attr(name) || \"\"),\n            el = this,\n            bplus = Str(b).match(reAddon);\n        if (bplus) {\n            eve.stop();\n            var unit = bplus[3] || \"\",\n                aUnit = a.match(reUnit),\n                op = operators[bplus[1]];\n            if (aUnit && aUnit == unit) {\n                return {\n                    from: parseFloat(a),\n                    to: op(parseFloat(a), +bplus[2]),\n                    f: getUnit(aUnit)\n                };\n            } else {\n                a = this.asPX(name);\n                return {\n                    from: a,\n                    to: op(a, this.asPX(name, bplus[2] + unit)),\n                    f: getNumber\n                };\n            }\n        }\n    })(-10);\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var proto = Paper.prototype,\n        is = Snap.is;\n    /*\\\n     * Paper.rect\n     [ method ]\n     *\n     * Draws a rectangle\n     **\n     - x (number) x coordinate of the top left corner\n     - y (number) y coordinate of the top left corner\n     - width (number) width\n     - height (number) height\n     - rx (number) #optional horizontal radius for rounded corners, default is 0\n     - ry (number) #optional vertical radius for rounded corners, default is rx or 0\n     = (object) the `rect` element\n     **\n     > Usage\n     | // regular rectangle\n     | var c = paper.rect(10, 10, 50, 50);\n     | // rectangle with rounded corners\n     | var c = paper.rect(40, 40, 50, 50, 10);\n    \\*/\n    proto.rect = function (x, y, w, h, rx, ry) {\n        var attr;\n        if (ry == null) {\n            ry = rx;\n        }\n        if (is(x, \"object\") && x == \"[object Object]\") {\n            attr = x;\n        } else if (x != null) {\n            attr = {\n                x: x,\n                y: y,\n                width: w,\n                height: h\n            };\n            if (rx != null) {\n                attr.rx = rx;\n                attr.ry = ry;\n            }\n        }\n        return this.el(\"rect\", attr);\n    };\n    /*\\\n     * Paper.circle\n     [ method ]\n     **\n     * Draws a circle\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - r (number) radius\n     = (object) the `circle` element\n     **\n     > Usage\n     | var c = paper.circle(50, 50, 40);\n    \\*/\n    proto.circle = function (cx, cy, r) {\n        var attr;\n        if (is(cx, \"object\") && cx == \"[object Object]\") {\n            attr = cx;\n        } else if (cx != null) {\n            attr = {\n                cx: cx,\n                cy: cy,\n                r: r\n            };\n        }\n        return this.el(\"circle\", attr);\n    };\n\n    var preload = (function () {\n        function onerror() {\n            this.parentNode.removeChild(this);\n        }\n        return function (src, f) {\n            var img = glob.doc.createElement(\"img\"),\n                body = glob.doc.body;\n            img.style.cssText = \"position:absolute;left:-9999em;top:-9999em\";\n            img.onload = function () {\n                f.call(img);\n                img.onload = img.onerror = null;\n                body.removeChild(img);\n            };\n            img.onerror = onerror;\n            body.appendChild(img);\n            img.src = src;\n        };\n    }());\n\n    /*\\\n     * Paper.image\n     [ method ]\n     **\n     * Places an image on the surface\n     **\n     - src (string) URI of the source image\n     - x (number) x offset position\n     - y (number) y offset position\n     - width (number) width of the image\n     - height (number) height of the image\n     = (object) the `image` element\n     * or\n     = (object) Snap element object with type `image`\n     **\n     > Usage\n     | var c = paper.image(\"apple.png\", 10, 10, 80, 80);\n    \\*/\n    proto.image = function (src, x, y, width, height) {\n        var el = this.el(\"image\");\n        if (is(src, \"object\") && \"src\" in src) {\n            el.attr(src);\n        } else if (src != null) {\n            var set = {\n                \"xlink:href\": src,\n                preserveAspectRatio: \"none\"\n            };\n            if (x != null && y != null) {\n                set.x = x;\n                set.y = y;\n            }\n            if (width != null && height != null) {\n                set.width = width;\n                set.height = height;\n            } else {\n                preload(src, function () {\n                    Snap._.$(el.node, {\n                        width: this.offsetWidth,\n                        height: this.offsetHeight\n                    });\n                });\n            }\n            Snap._.$(el.node, set);\n        }\n        return el;\n    };\n    /*\\\n     * Paper.ellipse\n     [ method ]\n     **\n     * Draws an ellipse\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - rx (number) horizontal radius\n     - ry (number) vertical radius\n     = (object) the `ellipse` element\n     **\n     > Usage\n     | var c = paper.ellipse(50, 50, 40, 20);\n    \\*/\n    proto.ellipse = function (cx, cy, rx, ry) {\n        var attr;\n        if (is(cx, \"object\") && cx == \"[object Object]\") {\n            attr = cx;\n        } else if (cx != null) {\n            attr ={\n                cx: cx,\n                cy: cy,\n                rx: rx,\n                ry: ry\n            };\n        }\n        return this.el(\"ellipse\", attr);\n    };\n    // SIERRA Paper.path(): Unclear from the link what a Catmull-Rom curveto is, and why it would make life any easier.\n    /*\\\n     * Paper.path\n     [ method ]\n     **\n     * Creates a `<path>` element using the given string as the path's definition\n     - pathString (string) #optional path string in SVG format\n     * Path string consists of one-letter commands, followed by comma seprarated arguments in numerical form. Example:\n     | \"M10,20L30,40\"\n     * This example features two commands: `M`, with arguments `(10, 20)` and `L` with arguments `(30, 40)`. Uppercase letter commands express coordinates in absolute terms, while lowercase commands express them in relative terms from the most recently declared coordinates.\n     *\n     # <p>Here is short list of commands available, for more details see <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" title=\"Details of a path's data attribute's format are described in the SVG specification.\">SVG path string format</a> or <a href=\"https://developer.mozilla.org/en/SVG/Tutorial/Paths\">article about path strings at MDN</a>.</p>\n     # <table><thead><tr><th>Command</th><th>Name</th><th>Parameters</th></tr></thead><tbody>\n     # <tr><td>M</td><td>moveto</td><td>(x y)+</td></tr>\n     # <tr><td>Z</td><td>closepath</td><td>(none)</td></tr>\n     # <tr><td>L</td><td>lineto</td><td>(x y)+</td></tr>\n     # <tr><td>H</td><td>horizontal lineto</td><td>x+</td></tr>\n     # <tr><td>V</td><td>vertical lineto</td><td>y+</td></tr>\n     # <tr><td>C</td><td>curveto</td><td>(x1 y1 x2 y2 x y)+</td></tr>\n     # <tr><td>S</td><td>smooth curveto</td><td>(x2 y2 x y)+</td></tr>\n     # <tr><td>Q</td><td>quadratic Bézier curveto</td><td>(x1 y1 x y)+</td></tr>\n     # <tr><td>T</td><td>smooth quadratic Bézier curveto</td><td>(x y)+</td></tr>\n     # <tr><td>A</td><td>elliptical arc</td><td>(rx ry x-axis-rotation large-arc-flag sweep-flag x y)+</td></tr>\n     # <tr><td>R</td><td><a href=\"http://en.wikipedia.org/wiki/Catmull–Rom_spline#Catmull.E2.80.93Rom_spline\">Catmull-Rom curveto</a>*</td><td>x1 y1 (x y)+</td></tr></tbody></table>\n     * * _Catmull-Rom curveto_ is a not standard SVG command and added to make life easier.\n     * Note: there is a special case when a path consists of only three commands: `M10,10R…z`. In this case the path connects back to its starting point.\n     > Usage\n     | var c = paper.path(\"M10 10L90 90\");\n     | // draw a diagonal line:\n     | // move to 10,10, line to 90,90\n    \\*/\n    proto.path = function (d) {\n        var attr;\n        if (is(d, \"object\") && !is(d, \"array\")) {\n            attr = d;\n        } else if (d) {\n            attr = {d: d};\n        }\n        return this.el(\"path\", attr);\n    };\n    /*\\\n     * Paper.g\n     [ method ]\n     **\n     * Creates a group element\n     **\n     - varargs (…) #optional elements to nest within the group\n     = (object) the `g` element\n     **\n     > Usage\n     | var c1 = paper.circle(),\n     |     c2 = paper.rect(),\n     |     g = paper.g(c2, c1); // note that the order of elements is different\n     * or\n     | var c1 = paper.circle(),\n     |     c2 = paper.rect(),\n     |     g = paper.g();\n     | g.add(c2, c1);\n    \\*/\n    /*\\\n     * Paper.group\n     [ method ]\n     **\n     * See @Paper.g\n    \\*/\n    proto.group = proto.g = function (first) {\n        var attr,\n            el = this.el(\"g\");\n        if (arguments.length == 1 && first && !first.type) {\n            el.attr(first);\n        } else if (arguments.length) {\n            el.add(Array.prototype.slice.call(arguments, 0));\n        }\n        return el;\n    };\n    /*\\\n     * Paper.svg\n     [ method ]\n     **\n     * Creates a nested SVG element.\n     - x (number) @optional X of the element\n     - y (number) @optional Y of the element\n     - width (number) @optional width of the element\n     - height (number) @optional height of the element\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     **\n     = (object) the `svg` element\n     **\n    \\*/\n    proto.svg = function (x, y, width, height, vbx, vby, vbw, vbh) {\n        var attrs = {};\n        if (is(x, \"object\") && y == null) {\n            attrs = x;\n        } else {\n            if (x != null) {\n                attrs.x = x;\n            }\n            if (y != null) {\n                attrs.y = y;\n            }\n            if (width != null) {\n                attrs.width = width;\n            }\n            if (height != null) {\n                attrs.height = height;\n            }\n            if (vbx != null && vby != null && vbw != null && vbh != null) {\n                attrs.viewBox = [vbx, vby, vbw, vbh];\n            }\n        }\n        return this.el(\"svg\", attrs);\n    };\n    /*\\\n     * Paper.mask\n     [ method ]\n     **\n     * Equivalent in behaviour to @Paper.g, except it’s a mask.\n     **\n     = (object) the `mask` element\n     **\n    \\*/\n    proto.mask = function (first) {\n        var attr,\n            el = this.el(\"mask\");\n        if (arguments.length == 1 && first && !first.type) {\n            el.attr(first);\n        } else if (arguments.length) {\n            el.add(Array.prototype.slice.call(arguments, 0));\n        }\n        return el;\n    };\n    /*\\\n     * Paper.ptrn\n     [ method ]\n     **\n     * Equivalent in behaviour to @Paper.g, except it’s a pattern.\n     - x (number) @optional X of the element\n     - y (number) @optional Y of the element\n     - width (number) @optional width of the element\n     - height (number) @optional height of the element\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     **\n     = (object) the `pattern` element\n     **\n    \\*/\n    proto.ptrn = function (x, y, width, height, vx, vy, vw, vh) {\n        if (is(x, \"object\")) {\n            var attr = x;\n        } else {\n            attr = {patternUnits: \"userSpaceOnUse\"};\n            if (x) {\n                attr.x = x;\n            }\n            if (y) {\n                attr.y = y;\n            }\n            if (width != null) {\n                attr.width = width;\n            }\n            if (height != null) {\n                attr.height = height;\n            }\n            if (vx != null && vy != null && vw != null && vh != null) {\n                attr.viewBox = [vx, vy, vw, vh];\n            } else {\n                attr.viewBox = [x || 0, y || 0, width || 0, height || 0];\n            }\n        }\n        return this.el(\"pattern\", attr);\n    };\n    /*\\\n     * Paper.use\n     [ method ]\n     **\n     * Creates a <use> element.\n     - id (string) @optional id of element to link\n     * or\n     - id (Element) @optional element to link\n     **\n     = (object) the `use` element\n     **\n    \\*/\n    proto.use = function (id) {\n        if (id != null) {\n            if (id instanceof Element) {\n                if (!id.attr(\"id\")) {\n                    id.attr({id: Snap._.id(id)});\n                }\n                id = id.attr(\"id\");\n            }\n            if (String(id).charAt() == \"#\") {\n                id = id.substring(1);\n            }\n            return this.el(\"use\", {\"xlink:href\": \"#\" + id});\n        } else {\n            return Element.prototype.use.call(this);\n        }\n    };\n    /*\\\n     * Paper.symbol\n     [ method ]\n     **\n     * Creates a <symbol> element.\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     = (object) the `symbol` element\n     **\n    \\*/\n    proto.symbol = function (vx, vy, vw, vh) {\n        var attr = {};\n        if (vx != null && vy != null && vw != null && vh != null) {\n            attr.viewBox = [vx, vy, vw, vh];\n        }\n\n        return this.el(\"symbol\", attr);\n    };\n    /*\\\n     * Paper.text\n     [ method ]\n     **\n     * Draws a text string\n     **\n     - x (number) x coordinate position\n     - y (number) y coordinate position\n     - text (string|array) The text string to draw or array of strings to nest within separate `<tspan>` elements\n     = (object) the `text` element\n     **\n     > Usage\n     | var t1 = paper.text(50, 50, \"Snap\");\n     | var t2 = paper.text(50, 50, [\"S\",\"n\",\"a\",\"p\"]);\n     | // Text path usage\n     | t1.attr({textpath: \"M10,10L100,100\"});\n     | // or\n     | var pth = paper.path(\"M10,10L100,100\");\n     | t1.attr({textpath: pth});\n    \\*/\n    proto.text = function (x, y, text) {\n        var attr = {};\n        if (is(x, \"object\")) {\n            attr = x;\n        } else if (x != null) {\n            attr = {\n                x: x,\n                y: y,\n                text: text || \"\"\n            };\n        }\n        return this.el(\"text\", attr);\n    };\n    /*\\\n     * Paper.line\n     [ method ]\n     **\n     * Draws a line\n     **\n     - x1 (number) x coordinate position of the start\n     - y1 (number) y coordinate position of the start\n     - x2 (number) x coordinate position of the end\n     - y2 (number) y coordinate position of the end\n     = (object) the `line` element\n     **\n     > Usage\n     | var t1 = paper.line(50, 50, 100, 100);\n    \\*/\n    proto.line = function (x1, y1, x2, y2) {\n        var attr = {};\n        if (is(x1, \"object\")) {\n            attr = x1;\n        } else if (x1 != null) {\n            attr = {\n                x1: x1,\n                x2: x2,\n                y1: y1,\n                y2: y2\n            };\n        }\n        return this.el(\"line\", attr);\n    };\n    /*\\\n     * Paper.polyline\n     [ method ]\n     **\n     * Draws a polyline\n     **\n     - points (array) array of points\n     * or\n     - varargs (…) points\n     = (object) the `polyline` element\n     **\n     > Usage\n     | var p1 = paper.polyline([10, 10, 100, 100]);\n     | var p2 = paper.polyline(10, 10, 100, 100);\n    \\*/\n    proto.polyline = function (points) {\n        if (arguments.length > 1) {\n            points = Array.prototype.slice.call(arguments, 0);\n        }\n        var attr = {};\n        if (is(points, \"object\") && !is(points, \"array\")) {\n            attr = points;\n        } else if (points != null) {\n            attr = {points: points};\n        }\n        return this.el(\"polyline\", attr);\n    };\n    /*\\\n     * Paper.polygon\n     [ method ]\n     **\n     * Draws a polygon. See @Paper.polyline\n    \\*/\n    proto.polygon = function (points) {\n        if (arguments.length > 1) {\n            points = Array.prototype.slice.call(arguments, 0);\n        }\n        var attr = {};\n        if (is(points, \"object\") && !is(points, \"array\")) {\n            attr = points;\n        } else if (points != null) {\n            attr = {points: points};\n        }\n        return this.el(\"polygon\", attr);\n    };\n    // gradients\n    (function () {\n        var $ = Snap._.$;\n        // gradients' helpers\n        /*\\\n         * Element.stops\n         [ method ]\n         **\n         * Only for gradients!\n         * Returns array of gradient stops elements.\n         = (array) the stops array.\n        \\*/\n        function Gstops() {\n            return this.selectAll(\"stop\");\n        }\n        /*\\\n         * Element.addStop\n         [ method ]\n         **\n         * Only for gradients!\n         * Adds another stop to the gradient.\n         - color (string) stops color\n         - offset (number) stops offset 0..100\n         = (object) gradient element\n        \\*/\n        function GaddStop(color, offset) {\n            var stop = $(\"stop\"),\n                attr = {\n                    offset: +offset + \"%\"\n                };\n            color = Snap.color(color);\n            attr[\"stop-color\"] = color.hex;\n            if (color.opacity < 1) {\n                attr[\"stop-opacity\"] = color.opacity;\n            }\n            $(stop, attr);\n            var stops = this.stops(),\n                inserted;\n            for (var i = 0; i < stops.length; i++) {\n                var stopOffset = parseFloat(stops[i].attr(\"offset\"));\n                if (stopOffset > offset) {\n                    this.node.insertBefore(stop, stops[i].node);\n                    inserted = true;\n                    break;\n                }\n            }\n            if (!inserted) {\n                this.node.appendChild(stop);\n            }\n            return this;\n        }\n        function GgetBBox() {\n            if (this.type == \"linearGradient\") {\n                var x1 = $(this.node, \"x1\") || 0,\n                    x2 = $(this.node, \"x2\") || 1,\n                    y1 = $(this.node, \"y1\") || 0,\n                    y2 = $(this.node, \"y2\") || 0;\n                return Snap._.box(x1, y1, math.abs(x2 - x1), math.abs(y2 - y1));\n            } else {\n                var cx = this.node.cx || .5,\n                    cy = this.node.cy || .5,\n                    r = this.node.r || 0;\n                return Snap._.box(cx - r, cy - r, r * 2, r * 2);\n            }\n        }\n        /*\\\n         * Element.setStops\n         [ method ]\n         **\n         * Only for gradients!\n         * Updates stops of the gradient based on passed gradient descriptor. See @Ppaer.gradient\n         - str (string) gradient descriptor part after `()`.\n         = (object) gradient element\n         | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n         | g.setStops(\"#fff-#000-#f00-#fc0\");\n        \\*/\n        function GsetStops(str) {\n            var grad = str,\n                stops = this.stops();\n            if (typeof str == \"string\") {\n                grad = eve(\"snap.util.grad.parse\", null, \"l(0,0,0,1)\" + str).firstDefined().stops;\n            }\n            if (!Snap.is(grad, \"array\")) {\n                return;\n            }\n            for (var i = 0; i < stops.length; i++) {\n                if (grad[i]) {\n                    var color = Snap.color(grad[i].color),\n                        attr = {\"offset\": grad[i].offset + \"%\"};\n                    attr[\"stop-color\"] = color.hex;\n                    if (color.opacity < 1) {\n                        attr[\"stop-opacity\"] = color.opacity;\n                    }\n                    stops[i].attr(attr);\n                } else {\n                    stops[i].remove();\n                }\n            }\n            for (i = stops.length; i < grad.length; i++) {\n                this.addStop(grad[i].color, grad[i].offset);\n            }\n            return this;\n        }\n        function gradient(defs, str) {\n            var grad = eve(\"snap.util.grad.parse\", null, str).firstDefined(),\n                el;\n            if (!grad) {\n                return null;\n            }\n            grad.params.unshift(defs);\n            if (grad.type.toLowerCase() == \"l\") {\n                el = gradientLinear.apply(0, grad.params);\n            } else {\n                el = gradientRadial.apply(0, grad.params);\n            }\n            if (grad.type != grad.type.toLowerCase()) {\n                $(el.node, {\n                    gradientUnits: \"userSpaceOnUse\"\n                });\n            }\n            var stops = grad.stops,\n                len = stops.length;\n            for (var i = 0; i < len; i++) {\n                var stop = stops[i];\n                el.addStop(stop.color, stop.offset);\n            }\n            return el;\n        }\n        function gradientLinear(defs, x1, y1, x2, y2) {\n            var el = Snap._.make(\"linearGradient\", defs);\n            el.stops = Gstops;\n            el.addStop = GaddStop;\n            el.getBBox = GgetBBox;\n            el.setStops = GsetStops;\n            if (x1 != null) {\n                $(el.node, {\n                    x1: x1,\n                    y1: y1,\n                    x2: x2,\n                    y2: y2\n                });\n            }\n            return el;\n        }\n        function gradientRadial(defs, cx, cy, r, fx, fy) {\n            var el = Snap._.make(\"radialGradient\", defs);\n            el.stops = Gstops;\n            el.addStop = GaddStop;\n            el.getBBox = GgetBBox;\n            if (cx != null) {\n                $(el.node, {\n                    cx: cx,\n                    cy: cy,\n                    r: r\n                });\n            }\n            if (fx != null && fy != null) {\n                $(el.node, {\n                    fx: fx,\n                    fy: fy\n                });\n            }\n            return el;\n        }\n        /*\\\n         * Paper.gradient\n         [ method ]\n         **\n         * Creates a gradient element\n         **\n         - gradient (string) gradient descriptor\n         > Gradient Descriptor\n         * The gradient descriptor is an expression formatted as\n         * follows: `<type>(<coords>)<colors>`.  The `<type>` can be\n         * either linear or radial.  The uppercase `L` or `R` letters\n         * indicate absolute coordinates offset from the SVG surface.\n         * Lowercase `l` or `r` letters indicate coordinates\n         * calculated relative to the element to which the gradient is\n         * applied.  Coordinates specify a linear gradient vector as\n         * `x1`, `y1`, `x2`, `y2`, or a radial gradient as `cx`, `cy`,\n         * `r` and optional `fx`, `fy` specifying a focal point away\n         * from the center of the circle. Specify `<colors>` as a list\n         * of dash-separated CSS color values.  Each color may be\n         * followed by a custom offset value, separated with a colon\n         * character.\n         > Examples\n         * Linear gradient, relative from top-left corner to bottom-right\n         * corner, from black through red to white:\n         | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n         * Linear gradient, absolute from (0, 0) to (100, 100), from black\n         * through red at 25% to white:\n         | var g = paper.gradient(\"L(0, 0, 100, 100)#000-#f00:25-#fff\");\n         * Radial gradient, relative from the center of the element with radius\n         * half the width, from black to white:\n         | var g = paper.gradient(\"r(0.5, 0.5, 0.5)#000-#fff\");\n         * To apply the gradient:\n         | paper.circle(50, 50, 40).attr({\n         |     fill: g\n         | });\n         = (object) the `gradient` element\n        \\*/\n        proto.gradient = function (str) {\n            return gradient(this.defs, str);\n        };\n        proto.gradientLinear = function (x1, y1, x2, y2) {\n            return gradientLinear(this.defs, x1, y1, x2, y2);\n        };\n        proto.gradientRadial = function (cx, cy, r, fx, fy) {\n            return gradientRadial(this.defs, cx, cy, r, fx, fy);\n        };\n        /*\\\n         * Paper.toString\n         [ method ]\n         **\n         * Returns SVG code for the @Paper\n         = (string) SVG code for the @Paper\n        \\*/\n        proto.toString = function () {\n            var doc = this.node.ownerDocument,\n                f = doc.createDocumentFragment(),\n                d = doc.createElement(\"div\"),\n                svg = this.node.cloneNode(true),\n                res;\n            f.appendChild(d);\n            d.appendChild(svg);\n            Snap._.$(svg, {xmlns: \"http://www.w3.org/2000/svg\"});\n            res = d.innerHTML;\n            f.removeChild(f.firstChild);\n            return res;\n        };\n        /*\\\n         * Paper.toDataURL\n         [ method ]\n         **\n         * Returns SVG code for the @Paper as Data URI string.\n         = (string) Data URI string\n        \\*/\n        proto.toDataURL = function () {\n            if (window && window.btoa) {\n                return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(this)));\n            }\n        };\n        /*\\\n         * Paper.clear\n         [ method ]\n         **\n         * Removes all child nodes of the paper, except <defs>.\n        \\*/\n        proto.clear = function () {\n            var node = this.node.firstChild,\n                next;\n            while (node) {\n                next = node.nextSibling;\n                if (node.tagName != \"defs\") {\n                    node.parentNode.removeChild(node);\n                } else {\n                    proto.clear.call({node: node});\n                }\n                node = next;\n            }\n        };\n    }());\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        clone = Snap._.clone,\n        has = \"hasOwnProperty\",\n        p2s = /,?([a-z]),?/gi,\n        toFloat = parseFloat,\n        math = Math,\n        PI = math.PI,\n        mmin = math.min,\n        mmax = math.max,\n        pow = math.pow,\n        abs = math.abs;\n    function paths(ps) {\n        var p = paths.ps = paths.ps || {};\n        if (p[ps]) {\n            p[ps].sleep = 100;\n        } else {\n            p[ps] = {\n                sleep: 100\n            };\n        }\n        setTimeout(function () {\n            for (var key in p) if (p[has](key) && key != ps) {\n                p[key].sleep--;\n                !p[key].sleep && delete p[key];\n            }\n        });\n        return p[ps];\n    }\n    function box(x, y, width, height) {\n        if (x == null) {\n            x = y = width = height = 0;\n        }\n        if (y == null) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            x = x.x;\n        }\n        return {\n            x: x,\n            y: y,\n            width: width,\n            w: width,\n            height: height,\n            h: height,\n            x2: x + width,\n            y2: y + height,\n            cx: x + width / 2,\n            cy: y + height / 2,\n            r1: math.min(width, height) / 2,\n            r2: math.max(width, height) / 2,\n            r0: math.sqrt(width * width + height * height) / 2,\n            path: rectPath(x, y, width, height),\n            vb: [x, y, width, height].join(\" \")\n        };\n    }\n    function toString() {\n        return this.join(\",\").replace(p2s, \"$1\");\n    }\n    function pathClone(pathArray) {\n        var res = clone(pathArray);\n        res.toString = toString;\n        return res;\n    }\n    function getPointAtSegmentLength(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length) {\n        if (length == null) {\n            return bezlen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y);\n        } else {\n            return findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y,\n                getTotLen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length));\n        }\n    }\n    function getLengthFactory(istotal, subpath) {\n        function O(val) {\n            return +(+val).toFixed(3);\n        }\n        return Snap._.cacher(function (path, length, onlystart) {\n            if (path instanceof Element) {\n                path = path.attr(\"d\");\n            }\n            path = path2curve(path);\n            var x, y, p, l, sp = \"\", subpaths = {}, point,\n                len = 0;\n            for (var i = 0, ii = path.length; i < ii; i++) {\n                p = path[i];\n                if (p[0] == \"M\") {\n                    x = +p[1];\n                    y = +p[2];\n                } else {\n                    l = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n                    if (len + l > length) {\n                        if (subpath && !subpaths.start) {\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                            sp += [\n                                \"C\" + O(point.start.x),\n                                O(point.start.y),\n                                O(point.m.x),\n                                O(point.m.y),\n                                O(point.x),\n                                O(point.y)\n                            ];\n                            if (onlystart) {return sp;}\n                            subpaths.start = sp;\n                            sp = [\n                                \"M\" + O(point.x),\n                                O(point.y) + \"C\" + O(point.n.x),\n                                O(point.n.y),\n                                O(point.end.x),\n                                O(point.end.y),\n                                O(p[5]),\n                                O(p[6])\n                            ].join();\n                            len += l;\n                            x = +p[5];\n                            y = +p[6];\n                            continue;\n                        }\n                        if (!istotal && !subpath) {\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                            return point;\n                        }\n                    }\n                    len += l;\n                    x = +p[5];\n                    y = +p[6];\n                }\n                sp += p.shift() + p;\n            }\n            subpaths.end = sp;\n            point = istotal ? len : subpath ? subpaths : findDotsAtSegment(x, y, p[0], p[1], p[2], p[3], p[4], p[5], 1);\n            return point;\n        }, null, Snap._.clone);\n    }\n    var getTotalLength = getLengthFactory(1),\n        getPointAtLength = getLengthFactory(),\n        getSubpathsAtLength = getLengthFactory(0, 1);\n    function findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n        var t1 = 1 - t,\n            t13 = pow(t1, 3),\n            t12 = pow(t1, 2),\n            t2 = t * t,\n            t3 = t2 * t,\n            x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\n            y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\n            mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\n            my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\n            nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\n            ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\n            ax = t1 * p1x + t * c1x,\n            ay = t1 * p1y + t * c1y,\n            cx = t1 * c2x + t * p2x,\n            cy = t1 * c2y + t * p2y,\n            alpha = 90 - math.atan2(mx - nx, my - ny) * 180 / PI;\n        // (mx > nx || my < ny) && (alpha += 180);\n        return {\n            x: x,\n            y: y,\n            m: {x: mx, y: my},\n            n: {x: nx, y: ny},\n            start: {x: ax, y: ay},\n            end: {x: cx, y: cy},\n            alpha: alpha\n        };\n    }\n    function bezierBBox(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\n        if (!Snap.is(p1x, \"array\")) {\n            p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\n        }\n        var bbox = curveDim.apply(null, p1x);\n        return box(\n            bbox.min.x,\n            bbox.min.y,\n            bbox.max.x - bbox.min.x,\n            bbox.max.y - bbox.min.y\n        );\n    }\n    function isPointInsideBBox(bbox, x, y) {\n        return  x >= bbox.x &&\n                x <= bbox.x + bbox.width &&\n                y >= bbox.y &&\n                y <= bbox.y + bbox.height;\n    }\n    function isBBoxIntersect(bbox1, bbox2) {\n        bbox1 = box(bbox1);\n        bbox2 = box(bbox2);\n        return isPointInsideBBox(bbox2, bbox1.x, bbox1.y)\n            || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y)\n            || isPointInsideBBox(bbox2, bbox1.x, bbox1.y2)\n            || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2)\n            || isPointInsideBBox(bbox1, bbox2.x, bbox2.y)\n            || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y)\n            || isPointInsideBBox(bbox1, bbox2.x, bbox2.y2)\n            || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2)\n            || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x\n                || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x)\n            && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y\n                || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\n    }\n    function base3(t, p1, p2, p3, p4) {\n        var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\n            t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n        return t * t2 - 3 * p1 + 3 * p2;\n    }\n    function bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\n        if (z == null) {\n            z = 1;\n        }\n        z = z > 1 ? 1 : z < 0 ? 0 : z;\n        var z2 = z / 2,\n            n = 12,\n            Tvalues = [-.1252,.1252,-.3678,.3678,-.5873,.5873,-.7699,.7699,-.9041,.9041,-.9816,.9816],\n            Cvalues = [0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],\n            sum = 0;\n        for (var i = 0; i < n; i++) {\n            var ct = z2 * Tvalues[i] + z2,\n                xbase = base3(ct, x1, x2, x3, x4),\n                ybase = base3(ct, y1, y2, y3, y4),\n                comb = xbase * xbase + ybase * ybase;\n            sum += Cvalues[i] * math.sqrt(comb);\n        }\n        return z2 * sum;\n    }\n    function getTotLen(x1, y1, x2, y2, x3, y3, x4, y4, ll) {\n        if (ll < 0 || bezlen(x1, y1, x2, y2, x3, y3, x4, y4) < ll) {\n            return;\n        }\n        var t = 1,\n            step = t / 2,\n            t2 = t - step,\n            l,\n            e = .01;\n        l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n        while (abs(l - ll) > e) {\n            step /= 2;\n            t2 += (l < ll ? 1 : -1) * step;\n            l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n        }\n        return t2;\n    }\n    function intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n        if (\n            mmax(x1, x2) < mmin(x3, x4) ||\n            mmin(x1, x2) > mmax(x3, x4) ||\n            mmax(y1, y2) < mmin(y3, y4) ||\n            mmin(y1, y2) > mmax(y3, y4)\n        ) {\n            return;\n        }\n        var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\n            ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\n            denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n        if (!denominator) {\n            return;\n        }\n        var px = nx / denominator,\n            py = ny / denominator,\n            px2 = +px.toFixed(2),\n            py2 = +py.toFixed(2);\n        if (\n            px2 < +mmin(x1, x2).toFixed(2) ||\n            px2 > +mmax(x1, x2).toFixed(2) ||\n            px2 < +mmin(x3, x4).toFixed(2) ||\n            px2 > +mmax(x3, x4).toFixed(2) ||\n            py2 < +mmin(y1, y2).toFixed(2) ||\n            py2 > +mmax(y1, y2).toFixed(2) ||\n            py2 < +mmin(y3, y4).toFixed(2) ||\n            py2 > +mmax(y3, y4).toFixed(2)\n        ) {\n            return;\n        }\n        return {x: px, y: py};\n    }\n    function inter(bez1, bez2) {\n        return interHelper(bez1, bez2);\n    }\n    function interCount(bez1, bez2) {\n        return interHelper(bez1, bez2, 1);\n    }\n    function interHelper(bez1, bez2, justCount) {\n        var bbox1 = bezierBBox(bez1),\n            bbox2 = bezierBBox(bez2);\n        if (!isBBoxIntersect(bbox1, bbox2)) {\n            return justCount ? 0 : [];\n        }\n        var l1 = bezlen.apply(0, bez1),\n            l2 = bezlen.apply(0, bez2),\n            n1 = ~~(l1 / 8),\n            n2 = ~~(l2 / 8),\n            dots1 = [],\n            dots2 = [],\n            xy = {},\n            res = justCount ? 0 : [];\n        for (var i = 0; i < n1 + 1; i++) {\n            var p = findDotsAtSegment.apply(0, bez1.concat(i / n1));\n            dots1.push({x: p.x, y: p.y, t: i / n1});\n        }\n        for (i = 0; i < n2 + 1; i++) {\n            p = findDotsAtSegment.apply(0, bez2.concat(i / n2));\n            dots2.push({x: p.x, y: p.y, t: i / n2});\n        }\n        for (i = 0; i < n1; i++) {\n            for (var j = 0; j < n2; j++) {\n                var di = dots1[i],\n                    di1 = dots1[i + 1],\n                    dj = dots2[j],\n                    dj1 = dots2[j + 1],\n                    ci = abs(di1.x - di.x) < .001 ? \"y\" : \"x\",\n                    cj = abs(dj1.x - dj.x) < .001 ? \"y\" : \"x\",\n                    is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\n                if (is) {\n                    if (xy[is.x.toFixed(4)] == is.y.toFixed(4)) {\n                        continue;\n                    }\n                    xy[is.x.toFixed(4)] = is.y.toFixed(4);\n                    var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\n                        t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\n                    if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {\n                        if (justCount) {\n                            res++;\n                        } else {\n                            res.push({\n                                x: is.x,\n                                y: is.y,\n                                t1: t1,\n                                t2: t2\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    function pathIntersection(path1, path2) {\n        return interPathHelper(path1, path2);\n    }\n    function pathIntersectionNumber(path1, path2) {\n        return interPathHelper(path1, path2, 1);\n    }\n    function interPathHelper(path1, path2, justCount) {\n        path1 = path2curve(path1);\n        path2 = path2curve(path2);\n        var x1, y1, x2, y2, x1m, y1m, x2m, y2m, bez1, bez2,\n            res = justCount ? 0 : [];\n        for (var i = 0, ii = path1.length; i < ii; i++) {\n            var pi = path1[i];\n            if (pi[0] == \"M\") {\n                x1 = x1m = pi[1];\n                y1 = y1m = pi[2];\n            } else {\n                if (pi[0] == \"C\") {\n                    bez1 = [x1, y1].concat(pi.slice(1));\n                    x1 = bez1[6];\n                    y1 = bez1[7];\n                } else {\n                    bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\n                    x1 = x1m;\n                    y1 = y1m;\n                }\n                for (var j = 0, jj = path2.length; j < jj; j++) {\n                    var pj = path2[j];\n                    if (pj[0] == \"M\") {\n                        x2 = x2m = pj[1];\n                        y2 = y2m = pj[2];\n                    } else {\n                        if (pj[0] == \"C\") {\n                            bez2 = [x2, y2].concat(pj.slice(1));\n                            x2 = bez2[6];\n                            y2 = bez2[7];\n                        } else {\n                            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\n                            x2 = x2m;\n                            y2 = y2m;\n                        }\n                        var intr = interHelper(bez1, bez2, justCount);\n                        if (justCount) {\n                            res += intr;\n                        } else {\n                            for (var k = 0, kk = intr.length; k < kk; k++) {\n                                intr[k].segment1 = i;\n                                intr[k].segment2 = j;\n                                intr[k].bez1 = bez1;\n                                intr[k].bez2 = bez2;\n                            }\n                            res = res.concat(intr);\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    function isPointInsidePath(path, x, y) {\n        var bbox = pathBBox(path);\n        return isPointInsideBBox(bbox, x, y) &&\n               interPathHelper(path, [[\"M\", x, y], [\"H\", bbox.x2 + 10]], 1) % 2 == 1;\n    }\n    function pathBBox(path) {\n        var pth = paths(path);\n        if (pth.bbox) {\n            return clone(pth.bbox);\n        }\n        if (!path) {\n            return box();\n        }\n        path = path2curve(path);\n        var x = 0,\n            y = 0,\n            X = [],\n            Y = [],\n            p;\n        for (var i = 0, ii = path.length; i < ii; i++) {\n            p = path[i];\n            if (p[0] == \"M\") {\n                x = p[1];\n                y = p[2];\n                X.push(x);\n                Y.push(y);\n            } else {\n                var dim = curveDim(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n                X = X.concat(dim.min.x, dim.max.x);\n                Y = Y.concat(dim.min.y, dim.max.y);\n                x = p[5];\n                y = p[6];\n            }\n        }\n        var xmin = mmin.apply(0, X),\n            ymin = mmin.apply(0, Y),\n            xmax = mmax.apply(0, X),\n            ymax = mmax.apply(0, Y),\n            bb = box(xmin, ymin, xmax - xmin, ymax - ymin);\n        pth.bbox = clone(bb);\n        return bb;\n    }\n    function rectPath(x, y, w, h, r) {\n        if (r) {\n            return [\n                [\"M\", +x + +r, y],\n                [\"l\", w - r * 2, 0],\n                [\"a\", r, r, 0, 0, 1, r, r],\n                [\"l\", 0, h - r * 2],\n                [\"a\", r, r, 0, 0, 1, -r, r],\n                [\"l\", r * 2 - w, 0],\n                [\"a\", r, r, 0, 0, 1, -r, -r],\n                [\"l\", 0, r * 2 - h],\n                [\"a\", r, r, 0, 0, 1, r, -r],\n                [\"z\"]\n            ];\n        }\n        var res = [[\"M\", x, y], [\"l\", w, 0], [\"l\", 0, h], [\"l\", -w, 0], [\"z\"]];\n        res.toString = toString;\n        return res;\n    }\n    function ellipsePath(x, y, rx, ry, a) {\n        if (a == null && ry == null) {\n            ry = rx;\n        }\n        x = +x;\n        y = +y;\n        rx = +rx;\n        ry = +ry;\n        if (a != null) {\n            var rad = Math.PI / 180,\n                x1 = x + rx * Math.cos(-ry * rad),\n                x2 = x + rx * Math.cos(-a * rad),\n                y1 = y + rx * Math.sin(-ry * rad),\n                y2 = y + rx * Math.sin(-a * rad),\n                res = [[\"M\", x1, y1], [\"A\", rx, rx, 0, +(a - ry > 180), 0, x2, y2]];\n        } else {\n            res = [\n                [\"M\", x, y],\n                [\"m\", 0, -ry],\n                [\"a\", rx, ry, 0, 1, 1, 0, 2 * ry],\n                [\"a\", rx, ry, 0, 1, 1, 0, -2 * ry],\n                [\"z\"]\n            ];\n        }\n        res.toString = toString;\n        return res;\n    }\n    var unit2px = Snap._unit2px,\n        getPath = {\n        path: function (el) {\n            return el.attr(\"path\");\n        },\n        circle: function (el) {\n            var attr = unit2px(el);\n            return ellipsePath(attr.cx, attr.cy, attr.r);\n        },\n        ellipse: function (el) {\n            var attr = unit2px(el);\n            return ellipsePath(attr.cx || 0, attr.cy || 0, attr.rx, attr.ry);\n        },\n        rect: function (el) {\n            var attr = unit2px(el);\n            return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height, attr.rx, attr.ry);\n        },\n        image: function (el) {\n            var attr = unit2px(el);\n            return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height);\n        },\n        line: function (el) {\n            return \"M\" + [el.attr(\"x1\") || 0, el.attr(\"y1\") || 0, el.attr(\"x2\"), el.attr(\"y2\")];\n        },\n        polyline: function (el) {\n            return \"M\" + el.attr(\"points\");\n        },\n        polygon: function (el) {\n            return \"M\" + el.attr(\"points\") + \"z\";\n        },\n        deflt: function (el) {\n            var bbox = el.node.getBBox();\n            return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);\n        }\n    };\n    function pathToRelative(pathArray) {\n        var pth = paths(pathArray),\n            lowerCase = String.prototype.toLowerCase;\n        if (pth.rel) {\n            return pathClone(pth.rel);\n        }\n        if (!Snap.is(pathArray, \"array\") || !Snap.is(pathArray && pathArray[0], \"array\")) {\n            pathArray = Snap.parsePathString(pathArray);\n        }\n        var res = [],\n            x = 0,\n            y = 0,\n            mx = 0,\n            my = 0,\n            start = 0;\n        if (pathArray[0][0] == \"M\") {\n            x = pathArray[0][1];\n            y = pathArray[0][2];\n            mx = x;\n            my = y;\n            start++;\n            res.push([\"M\", x, y]);\n        }\n        for (var i = start, ii = pathArray.length; i < ii; i++) {\n            var r = res[i] = [],\n                pa = pathArray[i];\n            if (pa[0] != lowerCase.call(pa[0])) {\n                r[0] = lowerCase.call(pa[0]);\n                switch (r[0]) {\n                    case \"a\":\n                        r[1] = pa[1];\n                        r[2] = pa[2];\n                        r[3] = pa[3];\n                        r[4] = pa[4];\n                        r[5] = pa[5];\n                        r[6] = +(pa[6] - x).toFixed(3);\n                        r[7] = +(pa[7] - y).toFixed(3);\n                        break;\n                    case \"v\":\n                        r[1] = +(pa[1] - y).toFixed(3);\n                        break;\n                    case \"m\":\n                        mx = pa[1];\n                        my = pa[2];\n                    default:\n                        for (var j = 1, jj = pa.length; j < jj; j++) {\n                            r[j] = +(pa[j] - (j % 2 ? x : y)).toFixed(3);\n                        }\n                }\n            } else {\n                r = res[i] = [];\n                if (pa[0] == \"m\") {\n                    mx = pa[1] + x;\n                    my = pa[2] + y;\n                }\n                for (var k = 0, kk = pa.length; k < kk; k++) {\n                    res[i][k] = pa[k];\n                }\n            }\n            var len = res[i].length;\n            switch (res[i][0]) {\n                case \"z\":\n                    x = mx;\n                    y = my;\n                    break;\n                case \"h\":\n                    x += +res[i][len - 1];\n                    break;\n                case \"v\":\n                    y += +res[i][len - 1];\n                    break;\n                default:\n                    x += +res[i][len - 2];\n                    y += +res[i][len - 1];\n            }\n        }\n        res.toString = toString;\n        pth.rel = pathClone(res);\n        return res;\n    }\n    function pathToAbsolute(pathArray) {\n        var pth = paths(pathArray);\n        if (pth.abs) {\n            return pathClone(pth.abs);\n        }\n        if (!is(pathArray, \"array\") || !is(pathArray && pathArray[0], \"array\")) { // rough assumption\n            pathArray = Snap.parsePathString(pathArray);\n        }\n        if (!pathArray || !pathArray.length) {\n            return [[\"M\", 0, 0]];\n        }\n        var res = [],\n            x = 0,\n            y = 0,\n            mx = 0,\n            my = 0,\n            start = 0,\n            pa0;\n        if (pathArray[0][0] == \"M\") {\n            x = +pathArray[0][1];\n            y = +pathArray[0][2];\n            mx = x;\n            my = y;\n            start++;\n            res[0] = [\"M\", x, y];\n        }\n        var crz = pathArray.length == 3 &&\n            pathArray[0][0] == \"M\" &&\n            pathArray[1][0].toUpperCase() == \"R\" &&\n            pathArray[2][0].toUpperCase() == \"Z\";\n        for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n            res.push(r = []);\n            pa = pathArray[i];\n            pa0 = pa[0];\n            if (pa0 != pa0.toUpperCase()) {\n                r[0] = pa0.toUpperCase();\n                switch (r[0]) {\n                    case \"A\":\n                        r[1] = pa[1];\n                        r[2] = pa[2];\n                        r[3] = pa[3];\n                        r[4] = pa[4];\n                        r[5] = pa[5];\n                        r[6] = +pa[6] + x;\n                        r[7] = +pa[7] + y;\n                        break;\n                    case \"V\":\n                        r[1] = +pa[1] + y;\n                        break;\n                    case \"H\":\n                        r[1] = +pa[1] + x;\n                        break;\n                    case \"R\":\n                        var dots = [x, y].concat(pa.slice(1));\n                        for (var j = 2, jj = dots.length; j < jj; j++) {\n                            dots[j] = +dots[j] + x;\n                            dots[++j] = +dots[j] + y;\n                        }\n                        res.pop();\n                        res = res.concat(catmullRom2bezier(dots, crz));\n                        break;\n                    case \"O\":\n                        res.pop();\n                        dots = ellipsePath(x, y, pa[1], pa[2]);\n                        dots.push(dots[0]);\n                        res = res.concat(dots);\n                        break;\n                    case \"U\":\n                        res.pop();\n                        res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n                        r = [\"U\"].concat(res[res.length - 1].slice(-2));\n                        break;\n                    case \"M\":\n                        mx = +pa[1] + x;\n                        my = +pa[2] + y;\n                    default:\n                        for (j = 1, jj = pa.length; j < jj; j++) {\n                            r[j] = +pa[j] + (j % 2 ? x : y);\n                        }\n                }\n            } else if (pa0 == \"R\") {\n                dots = [x, y].concat(pa.slice(1));\n                res.pop();\n                res = res.concat(catmullRom2bezier(dots, crz));\n                r = [\"R\"].concat(pa.slice(-2));\n            } else if (pa0 == \"O\") {\n                res.pop();\n                dots = ellipsePath(x, y, pa[1], pa[2]);\n                dots.push(dots[0]);\n                res = res.concat(dots);\n            } else if (pa0 == \"U\") {\n                res.pop();\n                res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n                r = [\"U\"].concat(res[res.length - 1].slice(-2));\n            } else {\n                for (var k = 0, kk = pa.length; k < kk; k++) {\n                    r[k] = pa[k];\n                }\n            }\n            pa0 = pa0.toUpperCase();\n            if (pa0 != \"O\") {\n                switch (r[0]) {\n                    case \"Z\":\n                        x = +mx;\n                        y = +my;\n                        break;\n                    case \"H\":\n                        x = r[1];\n                        break;\n                    case \"V\":\n                        y = r[1];\n                        break;\n                    case \"M\":\n                        mx = r[r.length - 2];\n                        my = r[r.length - 1];\n                    default:\n                        x = r[r.length - 2];\n                        y = r[r.length - 1];\n                }\n            }\n        }\n        res.toString = toString;\n        pth.abs = pathClone(res);\n        return res;\n    }\n    function l2c(x1, y1, x2, y2) {\n        return [x1, y1, x2, y2, x2, y2];\n    }\n    function q2c(x1, y1, ax, ay, x2, y2) {\n        var _13 = 1 / 3,\n            _23 = 2 / 3;\n        return [\n                _13 * x1 + _23 * ax,\n                _13 * y1 + _23 * ay,\n                _13 * x2 + _23 * ax,\n                _13 * y2 + _23 * ay,\n                x2,\n                y2\n            ];\n    }\n    function a2c(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n        // for more information of where this math came from visit:\n        // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n        var _120 = PI * 120 / 180,\n            rad = PI / 180 * (+angle || 0),\n            res = [],\n            xy,\n            rotate = Snap._.cacher(function (x, y, rad) {\n                var X = x * math.cos(rad) - y * math.sin(rad),\n                    Y = x * math.sin(rad) + y * math.cos(rad);\n                return {x: X, y: Y};\n            });\n        if (!rx || !ry) {\n            return [x1, y1, x2, y2, x2, y2];\n        }\n        if (!recursive) {\n            xy = rotate(x1, y1, -rad);\n            x1 = xy.x;\n            y1 = xy.y;\n            xy = rotate(x2, y2, -rad);\n            x2 = xy.x;\n            y2 = xy.y;\n            var cos = math.cos(PI / 180 * angle),\n                sin = math.sin(PI / 180 * angle),\n                x = (x1 - x2) / 2,\n                y = (y1 - y2) / 2;\n            var h = x * x / (rx * rx) + y * y / (ry * ry);\n            if (h > 1) {\n                h = math.sqrt(h);\n                rx = h * rx;\n                ry = h * ry;\n            }\n            var rx2 = rx * rx,\n                ry2 = ry * ry,\n                k = (large_arc_flag == sweep_flag ? -1 : 1) *\n                    math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\n                cx = k * rx * y / ry + (x1 + x2) / 2,\n                cy = k * -ry * x / rx + (y1 + y2) / 2,\n                f1 = math.asin(((y1 - cy) / ry).toFixed(9)),\n                f2 = math.asin(((y2 - cy) / ry).toFixed(9));\n\n            f1 = x1 < cx ? PI - f1 : f1;\n            f2 = x2 < cx ? PI - f2 : f2;\n            f1 < 0 && (f1 = PI * 2 + f1);\n            f2 < 0 && (f2 = PI * 2 + f2);\n            if (sweep_flag && f1 > f2) {\n                f1 = f1 - PI * 2;\n            }\n            if (!sweep_flag && f2 > f1) {\n                f2 = f2 - PI * 2;\n            }\n        } else {\n            f1 = recursive[0];\n            f2 = recursive[1];\n            cx = recursive[2];\n            cy = recursive[3];\n        }\n        var df = f2 - f1;\n        if (abs(df) > _120) {\n            var f2old = f2,\n                x2old = x2,\n                y2old = y2;\n            f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n            x2 = cx + rx * math.cos(f2);\n            y2 = cy + ry * math.sin(f2);\n            res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n        }\n        df = f2 - f1;\n        var c1 = math.cos(f1),\n            s1 = math.sin(f1),\n            c2 = math.cos(f2),\n            s2 = math.sin(f2),\n            t = math.tan(df / 4),\n            hx = 4 / 3 * rx * t,\n            hy = 4 / 3 * ry * t,\n            m1 = [x1, y1],\n            m2 = [x1 + hx * s1, y1 - hy * c1],\n            m3 = [x2 + hx * s2, y2 - hy * c2],\n            m4 = [x2, y2];\n        m2[0] = 2 * m1[0] - m2[0];\n        m2[1] = 2 * m1[1] - m2[1];\n        if (recursive) {\n            return [m2, m3, m4].concat(res);\n        } else {\n            res = [m2, m3, m4].concat(res).join().split(\",\");\n            var newres = [];\n            for (var i = 0, ii = res.length; i < ii; i++) {\n                newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n            }\n            return newres;\n        }\n    }\n    function findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n        var t1 = 1 - t;\n        return {\n            x: pow(t1, 3) * p1x + pow(t1, 2) * 3 * t * c1x + t1 * 3 * t * t * c2x + pow(t, 3) * p2x,\n            y: pow(t1, 3) * p1y + pow(t1, 2) * 3 * t * c1y + t1 * 3 * t * t * c2y + pow(t, 3) * p2y\n        };\n    }\n\n    // Returns bounding box of cubic bezier curve.\n    // Source: http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n    // Original version: NISHIO Hirokazu\n    // Modifications: https://github.com/timo22345\n    function curveDim(x0, y0, x1, y1, x2, y2, x3, y3) {\n        var tvalues = [],\n            bounds = [[], []],\n            a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n        for (var i = 0; i < 2; ++i) {\n            if (i == 0) {\n                b = 6 * x0 - 12 * x1 + 6 * x2;\n                a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n                c = 3 * x1 - 3 * x0;\n            } else {\n                b = 6 * y0 - 12 * y1 + 6 * y2;\n                a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n                c = 3 * y1 - 3 * y0;\n            }\n            if (abs(a) < 1e-12) {\n                if (abs(b) < 1e-12) {\n                    continue;\n                }\n                t = -c / b;\n                if (0 < t && t < 1) {\n                    tvalues.push(t);\n                }\n                continue;\n            }\n            b2ac = b * b - 4 * c * a;\n            sqrtb2ac = math.sqrt(b2ac);\n            if (b2ac < 0) {\n                continue;\n            }\n            t1 = (-b + sqrtb2ac) / (2 * a);\n            if (0 < t1 && t1 < 1) {\n                tvalues.push(t1);\n            }\n            t2 = (-b - sqrtb2ac) / (2 * a);\n            if (0 < t2 && t2 < 1) {\n                tvalues.push(t2);\n            }\n        }\n\n        var x, y, j = tvalues.length,\n            jlen = j,\n            mt;\n        while (j--) {\n            t = tvalues[j];\n            mt = 1 - t;\n            bounds[0][j] = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n            bounds[1][j] = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n        }\n\n        bounds[0][jlen] = x0;\n        bounds[1][jlen] = y0;\n        bounds[0][jlen + 1] = x3;\n        bounds[1][jlen + 1] = y3;\n        bounds[0].length = bounds[1].length = jlen + 2;\n\n\n        return {\n          min: {x: mmin.apply(0, bounds[0]), y: mmin.apply(0, bounds[1])},\n          max: {x: mmax.apply(0, bounds[0]), y: mmax.apply(0, bounds[1])}\n        };\n    }\n\n    function path2curve(path, path2) {\n        var pth = !path2 && paths(path);\n        if (!path2 && pth.curve) {\n            return pathClone(pth.curve);\n        }\n        var p = pathToAbsolute(path),\n            p2 = path2 && pathToAbsolute(path2),\n            attrs = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n            attrs2 = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n            processPath = function (path, d, pcom) {\n                var nx, ny;\n                if (!path) {\n                    return [\"C\", d.x, d.y, d.x, d.y, d.x, d.y];\n                }\n                !(path[0] in {T: 1, Q: 1}) && (d.qx = d.qy = null);\n                switch (path[0]) {\n                    case \"M\":\n                        d.X = path[1];\n                        d.Y = path[2];\n                        break;\n                    case \"A\":\n                        path = [\"C\"].concat(a2c.apply(0, [d.x, d.y].concat(path.slice(1))));\n                        break;\n                    case \"S\":\n                        if (pcom == \"C\" || pcom == \"S\") { // In \"S\" case we have to take into account, if the previous command is C/S.\n                            nx = d.x * 2 - d.bx;          // And reflect the previous\n                            ny = d.y * 2 - d.by;          // command's control point relative to the current point.\n                        }\n                        else {                            // or some else or nothing\n                            nx = d.x;\n                            ny = d.y;\n                        }\n                        path = [\"C\", nx, ny].concat(path.slice(1));\n                        break;\n                    case \"T\":\n                        if (pcom == \"Q\" || pcom == \"T\") { // In \"T\" case we have to take into account, if the previous command is Q/T.\n                            d.qx = d.x * 2 - d.qx;        // And make a reflection similar\n                            d.qy = d.y * 2 - d.qy;        // to case \"S\".\n                        }\n                        else {                            // or something else or nothing\n                            d.qx = d.x;\n                            d.qy = d.y;\n                        }\n                        path = [\"C\"].concat(q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n                        break;\n                    case \"Q\":\n                        d.qx = path[1];\n                        d.qy = path[2];\n                        path = [\"C\"].concat(q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\n                        break;\n                    case \"L\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, path[1], path[2]));\n                        break;\n                    case \"H\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, path[1], d.y));\n                        break;\n                    case \"V\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, d.x, path[1]));\n                        break;\n                    case \"Z\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, d.X, d.Y));\n                        break;\n                }\n                return path;\n            },\n            fixArc = function (pp, i) {\n                if (pp[i].length > 7) {\n                    pp[i].shift();\n                    var pi = pp[i];\n                    while (pi.length) {\n                        pcoms1[i] = \"A\"; // if created multiple C:s, their original seg is saved\n                        p2 && (pcoms2[i] = \"A\"); // the same as above\n                        pp.splice(i++, 0, [\"C\"].concat(pi.splice(0, 6)));\n                    }\n                    pp.splice(i, 1);\n                    ii = mmax(p.length, p2 && p2.length || 0);\n                }\n            },\n            fixM = function (path1, path2, a1, a2, i) {\n                if (path1 && path2 && path1[i][0] == \"M\" && path2[i][0] != \"M\") {\n                    path2.splice(i, 0, [\"M\", a2.x, a2.y]);\n                    a1.bx = 0;\n                    a1.by = 0;\n                    a1.x = path1[i][1];\n                    a1.y = path1[i][2];\n                    ii = mmax(p.length, p2 && p2.length || 0);\n                }\n            },\n            pcoms1 = [], // path commands of original path p\n            pcoms2 = [], // path commands of original path p2\n            pfirst = \"\", // temporary holder for original path command\n            pcom = \"\"; // holder for previous path command of original path\n        for (var i = 0, ii = mmax(p.length, p2 && p2.length || 0); i < ii; i++) {\n            p[i] && (pfirst = p[i][0]); // save current path command\n\n            if (pfirst != \"C\") // C is not saved yet, because it may be result of conversion\n            {\n                pcoms1[i] = pfirst; // Save current path command\n                i && ( pcom = pcoms1[i - 1]); // Get previous path command pcom\n            }\n            p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\n\n            if (pcoms1[i] != \"A\" && pfirst == \"C\") pcoms1[i] = \"C\"; // A is the only command\n            // which may produce multiple C:s\n            // so we have to make sure that C is also C in original path\n\n            fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n\n            if (p2) { // the same procedures is done to p2\n                p2[i] && (pfirst = p2[i][0]);\n                if (pfirst != \"C\") {\n                    pcoms2[i] = pfirst;\n                    i && (pcom = pcoms2[i - 1]);\n                }\n                p2[i] = processPath(p2[i], attrs2, pcom);\n\n                if (pcoms2[i] != \"A\" && pfirst == \"C\") {\n                    pcoms2[i] = \"C\";\n                }\n\n                fixArc(p2, i);\n            }\n            fixM(p, p2, attrs, attrs2, i);\n            fixM(p2, p, attrs2, attrs, i);\n            var seg = p[i],\n                seg2 = p2 && p2[i],\n                seglen = seg.length,\n                seg2len = p2 && seg2.length;\n            attrs.x = seg[seglen - 2];\n            attrs.y = seg[seglen - 1];\n            attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\n            attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\n            attrs2.bx = p2 && (toFloat(seg2[seg2len - 4]) || attrs2.x);\n            attrs2.by = p2 && (toFloat(seg2[seg2len - 3]) || attrs2.y);\n            attrs2.x = p2 && seg2[seg2len - 2];\n            attrs2.y = p2 && seg2[seg2len - 1];\n        }\n        if (!p2) {\n            pth.curve = pathClone(p);\n        }\n        return p2 ? [p, p2] : p;\n    }\n    function mapPath(path, matrix) {\n        if (!matrix) {\n            return path;\n        }\n        var x, y, i, j, ii, jj, pathi;\n        path = path2curve(path);\n        for (i = 0, ii = path.length; i < ii; i++) {\n            pathi = path[i];\n            for (j = 1, jj = pathi.length; j < jj; j += 2) {\n                x = matrix.x(pathi[j], pathi[j + 1]);\n                y = matrix.y(pathi[j], pathi[j + 1]);\n                pathi[j] = x;\n                pathi[j + 1] = y;\n            }\n        }\n        return path;\n    }\n\n    // http://schepers.cc/getting-to-the-point\n    function catmullRom2bezier(crp, z) {\n        var d = [];\n        for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n            var p = [\n                        {x: +crp[i - 2], y: +crp[i - 1]},\n                        {x: +crp[i],     y: +crp[i + 1]},\n                        {x: +crp[i + 2], y: +crp[i + 3]},\n                        {x: +crp[i + 4], y: +crp[i + 5]}\n                    ];\n            if (z) {\n                if (!i) {\n                    p[0] = {x: +crp[iLen - 2], y: +crp[iLen - 1]};\n                } else if (iLen - 4 == i) {\n                    p[3] = {x: +crp[0], y: +crp[1]};\n                } else if (iLen - 2 == i) {\n                    p[2] = {x: +crp[0], y: +crp[1]};\n                    p[3] = {x: +crp[2], y: +crp[3]};\n                }\n            } else {\n                if (iLen - 4 == i) {\n                    p[3] = p[2];\n                } else if (!i) {\n                    p[0] = {x: +crp[i], y: +crp[i + 1]};\n                }\n            }\n            d.push([\"C\",\n                  (-p[0].x + 6 * p[1].x + p[2].x) / 6,\n                  (-p[0].y + 6 * p[1].y + p[2].y) / 6,\n                  (p[1].x + 6 * p[2].x - p[3].x) / 6,\n                  (p[1].y + 6*p[2].y - p[3].y) / 6,\n                  p[2].x,\n                  p[2].y\n            ]);\n        }\n\n        return d;\n    }\n\n    // export\n    Snap.path = paths;\n\n    /*\\\n     * Snap.path.getTotalLength\n     [ method ]\n     **\n     * Returns the length of the given path in pixels\n     **\n     - path (string) SVG path string\n     **\n     = (number) length\n    \\*/\n    Snap.path.getTotalLength = getTotalLength;\n    /*\\\n     * Snap.path.getPointAtLength\n     [ method ]\n     **\n     * Returns the coordinates of the point located at the given length along the given path\n     **\n     - path (string) SVG path string\n     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate,\n     o     y: (number) y coordinate,\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    Snap.path.getPointAtLength = getPointAtLength;\n    /*\\\n     * Snap.path.getSubpath\n     [ method ]\n     **\n     * Returns the subpath of a given path between given start and end lengths\n     **\n     - path (string) SVG path string\n     - from (number) length, in pixels, from the start of the path to the start of the segment\n     - to (number) length, in pixels, from the start of the path to the end of the segment\n     **\n     = (string) path string definition for the segment\n    \\*/\n    Snap.path.getSubpath = function (path, from, to) {\n        if (this.getTotalLength(path) - to < 1e-6) {\n            return getSubpathsAtLength(path, from).end;\n        }\n        var a = getSubpathsAtLength(path, to, 1);\n        return from ? getSubpathsAtLength(a, from).end : a;\n    };\n    /*\\\n     * Element.getTotalLength\n     [ method ]\n     **\n     * Returns the length of the path in pixels (only works for `path` elements)\n     = (number) length\n    \\*/\n    elproto.getTotalLength = function () {\n        if (this.node.getTotalLength) {\n            return this.node.getTotalLength();\n        }\n    };\n    // SIERRA Element.getPointAtLength()/Element.getTotalLength(): If a <path> is broken into different segments, is the jump distance to the new coordinates set by the _M_ or _m_ commands calculated as part of the path's total length?\n    /*\\\n     * Element.getPointAtLength\n     [ method ]\n     **\n     * Returns coordinates of the point located at the given length on the given path (only works for `path` elements)\n     **\n     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate,\n     o     y: (number) y coordinate,\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    elproto.getPointAtLength = function (length) {\n        return getPointAtLength(this.attr(\"d\"), length);\n    };\n    // SIERRA Element.getSubpath(): Similar to the problem for Element.getPointAtLength(). Unclear how this would work for a segmented path. Overall, the concept of _subpath_ and what I'm calling a _segment_ (series of non-_M_ or _Z_ commands) is unclear.\n    /*\\\n     * Element.getSubpath\n     [ method ]\n     **\n     * Returns subpath of a given element from given start and end lengths (only works for `path` elements)\n     **\n     - from (number) length, in pixels, from the start of the path to the start of the segment\n     - to (number) length, in pixels, from the start of the path to the end of the segment\n     **\n     = (string) path string definition for the segment\n    \\*/\n    elproto.getSubpath = function (from, to) {\n        return Snap.path.getSubpath(this.attr(\"d\"), from, to);\n    };\n    Snap._.box = box;\n    /*\\\n     * Snap.path.findDotsAtSegment\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds dot coordinates on the given cubic beziér curve at the given t\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     - t (number) position on the curve (0..1)\n     = (object) point information in format:\n     o {\n     o     x: (number) x coordinate of the point,\n     o     y: (number) y coordinate of the point,\n     o     m: {\n     o         x: (number) x coordinate of the left anchor,\n     o         y: (number) y coordinate of the left anchor\n     o     },\n     o     n: {\n     o         x: (number) x coordinate of the right anchor,\n     o         y: (number) y coordinate of the right anchor\n     o     },\n     o     start: {\n     o         x: (number) x coordinate of the start of the curve,\n     o         y: (number) y coordinate of the start of the curve\n     o     },\n     o     end: {\n     o         x: (number) x coordinate of the end of the curve,\n     o         y: (number) y coordinate of the end of the curve\n     o     },\n     o     alpha: (number) angle of the curve derivative at the point\n     o }\n    \\*/\n    Snap.path.findDotsAtSegment = findDotsAtSegment;\n    /*\\\n     * Snap.path.bezierBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns the bounding box of a given cubic beziér curve\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     * or\n     - bez (array) array of six points for beziér curve\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box,\n     o     y: (number) y coordinate of the left top point of the box,\n     o     x2: (number) x coordinate of the right bottom point of the box,\n     o     y2: (number) y coordinate of the right bottom point of the box,\n     o     width: (number) width of the box,\n     o     height: (number) height of the box\n     o }\n    \\*/\n    Snap.path.bezierBBox = bezierBBox;\n    /*\\\n     * Snap.path.isPointInsideBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside bounding box\n     - bbox (string) bounding box\n     - x (string) x coordinate of the point\n     - y (string) y coordinate of the point\n     = (boolean) `true` if point is inside\n    \\*/\n    Snap.path.isPointInsideBBox = isPointInsideBBox;\n    Snap.closest = function (x, y, X, Y) {\n        var r = 100,\n            b = box(x - r / 2, y - r / 2, r, r),\n            inside = [],\n            getter = X[0].hasOwnProperty(\"x\") ? function (i) {\n                return {\n                    x: X[i].x,\n                    y: X[i].y\n                };\n            } : function (i) {\n                return {\n                    x: X[i],\n                    y: Y[i]\n                };\n            },\n            found = 0;\n        while (r <= 1e6 && !found) {\n            for (var i = 0, ii = X.length; i < ii; i++) {\n                var xy = getter(i);\n                if (isPointInsideBBox(b, xy.x, xy.y)) {\n                    found++;\n                    inside.push(xy);\n                    break;\n                }\n            }\n            if (!found) {\n                r *= 2;\n                b = box(x - r / 2, y - r / 2, r, r)\n            }\n        }\n        if (r == 1e6) {\n            return;\n        }\n        var len = Infinity,\n            res;\n        for (i = 0, ii = inside.length; i < ii; i++) {\n            var l = Snap.len(x, y, inside[i].x, inside[i].y);\n            if (len > l) {\n                len = l;\n                inside[i].len = l;\n                res = inside[i];\n            }\n        }\n        return res;\n    };\n    /*\\\n     * Snap.path.isBBoxIntersect\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if two bounding boxes intersect\n     - bbox1 (string) first bounding box\n     - bbox2 (string) second bounding box\n     = (boolean) `true` if bounding boxes intersect\n    \\*/\n    Snap.path.isBBoxIntersect = isBBoxIntersect;\n    /*\\\n     * Snap.path.intersection\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds intersections of two paths\n     - path1 (string) path string\n     - path2 (string) path string\n     = (array) dots of intersection\n     o [\n     o     {\n     o         x: (number) x coordinate of the point,\n     o         y: (number) y coordinate of the point,\n     o         t1: (number) t value for segment of path1,\n     o         t2: (number) t value for segment of path2,\n     o         segment1: (number) order number for segment of path1,\n     o         segment2: (number) order number for segment of path2,\n     o         bez1: (array) eight coordinates representing beziér curve for the segment of path1,\n     o         bez2: (array) eight coordinates representing beziér curve for the segment of path2\n     o     }\n     o ]\n    \\*/\n    Snap.path.intersection = pathIntersection;\n    Snap.path.intersectionNumber = pathIntersectionNumber;\n    /*\\\n     * Snap.path.isPointInside\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside a given closed path.\n     *\n     * Note: fill mode doesn’t affect the result of this method.\n     - path (string) path string\n     - x (number) x of the point\n     - y (number) y of the point\n     = (boolean) `true` if point is inside the path\n    \\*/\n    Snap.path.isPointInside = isPointInsidePath;\n    /*\\\n     * Snap.path.getBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns the bounding box of a given path\n     - path (string) path string\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box,\n     o     y: (number) y coordinate of the left top point of the box,\n     o     x2: (number) x coordinate of the right bottom point of the box,\n     o     y2: (number) y coordinate of the right bottom point of the box,\n     o     width: (number) width of the box,\n     o     height: (number) height of the box\n     o }\n    \\*/\n    Snap.path.getBBox = pathBBox;\n    Snap.path.get = getPath;\n    /*\\\n     * Snap.path.toRelative\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path coordinates into relative values\n     - path (string) path string\n     = (array) path string\n    \\*/\n    Snap.path.toRelative = pathToRelative;\n    /*\\\n     * Snap.path.toAbsolute\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path coordinates into absolute values\n     - path (string) path string\n     = (array) path string\n    \\*/\n    Snap.path.toAbsolute = pathToAbsolute;\n    /*\\\n     * Snap.path.toCubic\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path to a new path where all segments are cubic beziér curves\n     - pathString (string|array) path string or array of segments\n     = (array) array of segments\n    \\*/\n    Snap.path.toCubic = path2curve;\n    /*\\\n     * Snap.path.map\n     [ method ]\n     **\n     * Transform the path string with the given matrix\n     - path (string) path string\n     - matrix (object) see @Matrix\n     = (string) transformed path string\n    \\*/\n    Snap.path.map = mapPath;\n    Snap.path.toString = toString;\n    Snap.path.clone = pathClone;\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var mmax = Math.max,\n        mmin = Math.min;\n\n    // Set\n    var Set = function (items) {\n        this.items = [];\n\tthis.bindings = {};\n        this.length = 0;\n        this.type = \"set\";\n        if (items) {\n            for (var i = 0, ii = items.length; i < ii; i++) {\n                if (items[i]) {\n                    this[this.items.length] = this.items[this.items.length] = items[i];\n                    this.length++;\n                }\n            }\n        }\n    },\n    setproto = Set.prototype;\n    /*\\\n     * Set.push\n     [ method ]\n     **\n     * Adds each argument to the current set\n     = (object) original element\n    \\*/\n    setproto.push = function () {\n        var item,\n            len;\n        for (var i = 0, ii = arguments.length; i < ii; i++) {\n            item = arguments[i];\n            if (item) {\n                len = this.items.length;\n                this[len] = this.items[len] = item;\n                this.length++;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Set.pop\n     [ method ]\n     **\n     * Removes last element and returns it\n     = (object) element\n    \\*/\n    setproto.pop = function () {\n        this.length && delete this[this.length--];\n        return this.items.pop();\n    };\n    /*\\\n     * Set.forEach\n     [ method ]\n     **\n     * Executes given function for each element in the set\n     *\n     * If the function returns `false`, the loop stops running.\n     **\n     - callback (function) function to run\n     - thisArg (object) context object for the callback\n     = (object) Set object\n    \\*/\n    setproto.forEach = function (callback, thisArg) {\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            if (callback.call(thisArg, this.items[i], i) === false) {\n                return this;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Set.animate\n     [ method ]\n     **\n     * Animates each element in set in sync.\n     *\n     **\n     - attrs (object) key-value pairs of destination attributes\n     - duration (number) duration of the animation in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function that executes when the animation ends\n     * or\n     - animation (array) array of animation parameter for each element in set in format `[attrs, duration, easing, callback]`\n     > Usage\n     | // animate all elements in set to radius 10\n     | set.animate({r: 10}, 500, mina.easein);\n     | // or\n     | // animate first element to radius 10, but second to radius 20 and in different time\n     | set.animate([{r: 10}, 500, mina.easein], [{r: 20}, 1500, mina.easein]);\n     = (Element) the current element\n    \\*/\n    setproto.animate = function (attrs, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        if (attrs instanceof Snap._.Animation) {\n            callback = attrs.callback;\n            easing = attrs.easing;\n            ms = easing.dur;\n            attrs = attrs.attr;\n        }\n        var args = arguments;\n        if (Snap.is(attrs, \"array\") && Snap.is(args[args.length - 1], \"array\")) {\n            var each = true;\n        }\n        var begin,\n            handler = function () {\n                if (begin) {\n                    this.b = begin;\n                } else {\n                    begin = this.b;\n                }\n            },\n            cb = 0,\n            set = this,\n            callbacker = callback && function () {\n                if (++cb == set.length) {\n                    callback.call(this);\n                }\n            };\n        return this.forEach(function (el, i) {\n            eve.once(\"snap.animcreated.\" + el.id, handler);\n            if (each) {\n                args[i] && el.animate.apply(el, args[i]);\n            } else {\n                el.animate(attrs, ms, easing, callbacker);\n            }\n        });\n    };\n    /*\\\n     * Set.remove\n     [ method ]\n     **\n     * Removes all children of the set.\n     *\n     = (object) Set object\n    \\*/\n    setproto.remove = function () {\n        while (this.length) {\n            this.pop().remove();\n        }\n        return this;\n    };\n    /*\\\n     * Set.bind\n     [ method ]\n     **\n     * Specifies how to handle a specific attribute when applied\n     * to a set.\n     *\n     **\n     - attr (string) attribute name\n     - callback (function) function to run\n     * or\n     - attr (string) attribute name\n     - element (Element) specific element in the set to apply the attribute to\n     * or\n     - attr (string) attribute name\n     - element (Element) specific element in the set to apply the attribute to\n     - eattr (string) attribute on the element to bind the attribute to\n     = (object) Set object\n    \\*/\n    setproto.bind = function (attr, a, b) {\n        var data = {};\n        if (typeof a == \"function\") {\n            this.bindings[attr] = a;\n        } else {\n            var aname = b || attr;\n            this.bindings[attr] = function (v) {\n                data[aname] = v;\n                a.attr(data);\n            };\n        }\n        return this;\n    };\n    /*\\\n     * Set.attr\n     [ method ]\n     **\n     * Equivalent of @Element.attr.\n     = (object) Set object\n    \\*/\n    setproto.attr = function (value) {\n        var unbound = {};\n        for (var k in value) {\n            if (this.bindings[k]) {\n                this.bindings[k](value[k]);\n            } else {\n                unbound[k] = value[k];\n            }\n        }\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            this.items[i].attr(unbound);\n        }\n        return this;\n    };\n    /*\\\n     * Set.clear\n     [ method ]\n     **\n     * Removes all elements from the set\n    \\*/\n    setproto.clear = function () {\n        while (this.length) {\n            this.pop();\n        }\n    };\n    /*\\\n     * Set.splice\n     [ method ]\n     **\n     * Removes range of elements from the set\n     **\n     - index (number) position of the deletion\n     - count (number) number of element to remove\n     - insertion… (object) #optional elements to insert\n     = (object) set elements that were deleted\n    \\*/\n    setproto.splice = function (index, count, insertion) {\n        index = index < 0 ? mmax(this.length + index, 0) : index;\n        count = mmax(0, mmin(this.length - index, count));\n        var tail = [],\n            todel = [],\n            args = [],\n            i;\n        for (i = 2; i < arguments.length; i++) {\n            args.push(arguments[i]);\n        }\n        for (i = 0; i < count; i++) {\n            todel.push(this[index + i]);\n        }\n        for (; i < this.length - index; i++) {\n            tail.push(this[index + i]);\n        }\n        var arglen = args.length;\n        for (i = 0; i < arglen + tail.length; i++) {\n            this.items[index + i] = this[index + i] = i < arglen ? args[i] : tail[i - arglen];\n        }\n        i = this.items.length = this.length -= count - arglen;\n        while (this[i]) {\n            delete this[i++];\n        }\n        return new Set(todel);\n    };\n    /*\\\n     * Set.exclude\n     [ method ]\n     **\n     * Removes given element from the set\n     **\n     - element (object) element to remove\n     = (boolean) `true` if object was found and removed from the set\n    \\*/\n    setproto.exclude = function (el) {\n        for (var i = 0, ii = this.length; i < ii; i++) if (this[i] == el) {\n            this.splice(i, 1);\n            return true;\n        }\n        return false;\n    };\n    /*\\\n     * Set.insertAfter\n     [ method ]\n     **\n     * Inserts set elements after given element.\n     **\n     - element (object) set will be inserted after this element\n     = (object) Set object\n    \\*/\n    setproto.insertAfter = function (el) {\n        var i = this.items.length;\n        while (i--) {\n            this.items[i].insertAfter(el);\n        }\n        return this;\n    };\n    /*\\\n     * Set.getBBox\n     [ method ]\n     **\n     * Union of all bboxes of the set. See @Element.getBBox.\n     = (object) bounding box descriptor. See @Element.getBBox.\n    \\*/\n    setproto.getBBox = function () {\n        var x = [],\n            y = [],\n            x2 = [],\n            y2 = [];\n        for (var i = this.items.length; i--;) if (!this.items[i].removed) {\n            var box = this.items[i].getBBox();\n            x.push(box.x);\n            y.push(box.y);\n            x2.push(box.x + box.width);\n            y2.push(box.y + box.height);\n        }\n        x = mmin.apply(0, x);\n        y = mmin.apply(0, y);\n        x2 = mmax.apply(0, x2);\n        y2 = mmax.apply(0, y2);\n        return {\n            x: x,\n            y: y,\n            x2: x2,\n            y2: y2,\n            width: x2 - x,\n            height: y2 - y,\n            cx: x + (x2 - x) / 2,\n            cy: y + (y2 - y) / 2\n        };\n    };\n    /*\\\n     * Set.insertAfter\n     [ method ]\n     **\n     * Creates a clone of the set.\n     **\n     = (object) New Set object\n    \\*/\n    setproto.clone = function (s) {\n        s = new Set;\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            s.push(this.items[i].clone());\n        }\n        return s;\n    };\n    setproto.toString = function () {\n        return \"Snap\\u2018s set\";\n    };\n    setproto.type = \"set\";\n    // export\n    /*\\\n     * Snap.Set\n     [ property ]\n     **\n     * Set constructor.\n    \\*/\n    Snap.Set = Set;\n    /*\\\n     * Snap.set\n     [ method ]\n     **\n     * Creates a set and fills it with list of arguments.\n     **\n     = (object) New Set object\n     | var r = paper.rect(0, 0, 10, 10),\n     |     s1 = Snap.set(), // empty set\n     |     s2 = Snap.set(r, paper.circle(100, 100, 20)); // prefilled set\n    \\*/\n    Snap.set = function () {\n        var set = new Set;\n        if (arguments.length) {\n            set.push.apply(set, Array.prototype.slice.call(arguments, 0));\n        }\n        return set;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var names = {},\n        reUnit = /[%a-z]+$/i,\n        Str = String;\n    names.stroke = names.fill = \"colour\";\n    function getEmpty(item) {\n        var l = item[0];\n        switch (l.toLowerCase()) {\n            case \"t\": return [l, 0, 0];\n            case \"m\": return [l, 1, 0, 0, 1, 0, 0];\n            case \"r\": if (item.length == 4) {\n                return [l, 0, item[2], item[3]];\n            } else {\n                return [l, 0];\n            }\n            case \"s\": if (item.length == 5) {\n                return [l, 1, 1, item[3], item[4]];\n            } else if (item.length == 3) {\n                return [l, 1, 1];\n            } else {\n                return [l, 1];\n            }\n        }\n    }\n    function equaliseTransform(t1, t2, getBBox) {\n        t1 = t1 || new Snap.Matrix;\n        t2 = t2 || new Snap.Matrix;\n        t1 = Snap.parseTransformString(t1.toTransformString()) || [];\n        t2 = Snap.parseTransformString(t2.toTransformString()) || [];\n        var maxlength = Math.max(t1.length, t2.length),\n            from = [],\n            to = [],\n            i = 0, j, jj,\n            tt1, tt2;\n        for (; i < maxlength; i++) {\n            tt1 = t1[i] || getEmpty(t2[i]);\n            tt2 = t2[i] || getEmpty(tt1);\n            if (tt1[0] != tt2[0] ||\n                tt1[0].toLowerCase() == \"r\" && (tt1[2] != tt2[2] || tt1[3] != tt2[3]) ||\n                tt1[0].toLowerCase() == \"s\" && (tt1[3] != tt2[3] || tt1[4] != tt2[4])\n                ) {\n                    t1 = Snap._.transform2matrix(t1, getBBox());\n                    t2 = Snap._.transform2matrix(t2, getBBox());\n                    from = [[\"m\", t1.a, t1.b, t1.c, t1.d, t1.e, t1.f]];\n                    to = [[\"m\", t2.a, t2.b, t2.c, t2.d, t2.e, t2.f]];\n                    break;\n            }\n            from[i] = [];\n            to[i] = [];\n            for (j = 0, jj = Math.max(tt1.length, tt2.length); j < jj; j++) {\n                j in tt1 && (from[i][j] = tt1[j]);\n                j in tt2 && (to[i][j] = tt2[j]);\n            }\n        }\n        return {\n            from: path2array(from),\n            to: path2array(to),\n            f: getPath(from)\n        };\n    }\n    function getNumber(val) {\n        return val;\n    }\n    function getUnit(unit) {\n        return function (val) {\n            return +val.toFixed(3) + unit;\n        };\n    }\n    function getViewBox(val) {\n        return val.join(\" \");\n    }\n    function getColour(clr) {\n        return Snap.rgb(clr[0], clr[1], clr[2], clr[3]);\n    }\n    function getPath(path) {\n        var k = 0, i, ii, j, jj, out, a, b = [];\n        for (i = 0, ii = path.length; i < ii; i++) {\n            out = \"[\";\n            a = ['\"' + path[i][0] + '\"'];\n            for (j = 1, jj = path[i].length; j < jj; j++) {\n                a[j] = \"val[\" + k++ + \"]\";\n            }\n            out += a + \"]\";\n            b[i] = out;\n        }\n        return Function(\"val\", \"return Snap.path.toString.call([\" + b + \"])\");\n    }\n    function path2array(path) {\n        var out = [];\n        for (var i = 0, ii = path.length; i < ii; i++) {\n            for (var j = 1, jj = path[i].length; j < jj; j++) {\n                out.push(path[i][j]);\n            }\n        }\n        return out;\n    }\n    function isNumeric(obj) {\n        return isFinite(obj);\n    }\n    function arrayEqual(arr1, arr2) {\n        if (!Snap.is(arr1, \"array\") || !Snap.is(arr2, \"array\")) {\n            return false;\n        }\n        return arr1.toString() == arr2.toString();\n    }\n    Element.prototype.equal = function (name, b) {\n        return eve(\"snap.util.equal\", this, name, b).firstDefined();\n    };\n    eve.on(\"snap.util.equal\", function (name, b) {\n        var A, B, a = Str(this.attr(name) || \"\"),\n            el = this;\n        if (names[name] == \"colour\") {\n            A = Snap.color(a);\n            B = Snap.color(b);\n            return {\n                from: [A.r, A.g, A.b, A.opacity],\n                to: [B.r, B.g, B.b, B.opacity],\n                f: getColour\n            };\n        }\n        if (name == \"viewBox\") {\n            A = this.attr(name).vb.split(\" \").map(Number);\n            B = b.split(\" \").map(Number);\n            return {\n                from: A,\n                to: B,\n                f: getViewBox\n            };\n        }\n        if (name == \"transform\" || name == \"gradientTransform\" || name == \"patternTransform\") {\n            if (typeof b == \"string\") {\n                b = Str(b).replace(/\\.{3}|\\u2026/g, a);\n            }\n            a = this.matrix;\n            if (!Snap._.rgTransform.test(b)) {\n                b = Snap._.transform2matrix(Snap._.svgTransform2string(b), this.getBBox());\n            } else {\n                b = Snap._.transform2matrix(b, this.getBBox());\n            }\n            return equaliseTransform(a, b, function () {\n                return el.getBBox(1);\n            });\n        }\n        if (name == \"d\" || name == \"path\") {\n            A = Snap.path.toCubic(a, b);\n            return {\n                from: path2array(A[0]),\n                to: path2array(A[1]),\n                f: getPath(A[0])\n            };\n        }\n        if (name == \"points\") {\n            A = Str(a).split(Snap._.separator);\n            B = Str(b).split(Snap._.separator);\n            return {\n                from: A,\n                to: B,\n                f: function (val) { return val; }\n            };\n        }\n        if (isNumeric(a) && isNumeric(b)) {\n            return {\n                from: parseFloat(a),\n                to: parseFloat(b),\n                f: getNumber\n            };\n        }\n        var aUnit = a.match(reUnit),\n            bUnit = Str(b).match(reUnit);\n        if (aUnit && arrayEqual(aUnit, bUnit)) {\n            return {\n                from: parseFloat(a),\n                to: parseFloat(b),\n                f: getUnit(aUnit)\n            };\n        } else {\n            return {\n                from: this.asPX(name),\n                to: this.asPX(name, b),\n                f: getNumber\n            };\n        }\n    });\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n    has = \"hasOwnProperty\",\n    supportsTouch = \"createTouch\" in glob.doc,\n    events = [\n        \"click\", \"dblclick\", \"mousedown\", \"mousemove\", \"mouseout\",\n        \"mouseover\", \"mouseup\", \"touchstart\", \"touchmove\", \"touchend\",\n        \"touchcancel\"\n    ],\n    touchMap = {\n        mousedown: \"touchstart\",\n        mousemove: \"touchmove\",\n        mouseup: \"touchend\"\n    },\n    getScroll = function (xy, el) {\n        var name = xy == \"y\" ? \"scrollTop\" : \"scrollLeft\",\n            doc = el && el.node ? el.node.ownerDocument : glob.doc;\n        return doc[name in doc.documentElement ? \"documentElement\" : \"body\"][name];\n    },\n    preventDefault = function () {\n        this.returnValue = false;\n    },\n    preventTouch = function () {\n        return this.originalEvent.preventDefault();\n    },\n    stopPropagation = function () {\n        this.cancelBubble = true;\n    },\n    stopTouch = function () {\n        return this.originalEvent.stopPropagation();\n    },\n    addEvent = function (obj, type, fn, element) {\n        var realName = supportsTouch && touchMap[type] ? touchMap[type] : type,\n            f = function (e) {\n                var scrollY = getScroll(\"y\", element),\n                    scrollX = getScroll(\"x\", element);\n                if (supportsTouch && touchMap[has](type)) {\n                    for (var i = 0, ii = e.targetTouches && e.targetTouches.length; i < ii; i++) {\n                        if (e.targetTouches[i].target == obj || obj.contains(e.targetTouches[i].target)) {\n                            var olde = e;\n                            e = e.targetTouches[i];\n                            e.originalEvent = olde;\n                            e.preventDefault = preventTouch;\n                            e.stopPropagation = stopTouch;\n                            break;\n                        }\n                    }\n                }\n                var x = e.clientX + scrollX,\n                    y = e.clientY + scrollY;\n                return fn.call(element, e, x, y);\n            };\n\n        if (type !== realName) {\n            obj.addEventListener(type, f, false);\n        }\n\n        obj.addEventListener(realName, f, false);\n\n        return function () {\n            if (type !== realName) {\n                obj.removeEventListener(type, f, false);\n            }\n\n            obj.removeEventListener(realName, f, false);\n            return true;\n        };\n    },\n    drag = [],\n    dragMove = function (e) {\n        var x = e.clientX,\n            y = e.clientY,\n            scrollY = getScroll(\"y\"),\n            scrollX = getScroll(\"x\"),\n            dragi,\n            j = drag.length;\n        while (j--) {\n            dragi = drag[j];\n            if (supportsTouch) {\n                var i = e.touches && e.touches.length,\n                    touch;\n                while (i--) {\n                    touch = e.touches[i];\n                    if (touch.identifier == dragi.el._drag.id || dragi.el.node.contains(touch.target)) {\n                        x = touch.clientX;\n                        y = touch.clientY;\n                        (e.originalEvent ? e.originalEvent : e).preventDefault();\n                        break;\n                    }\n                }\n            } else {\n                e.preventDefault();\n            }\n            var node = dragi.el.node,\n                o,\n                next = node.nextSibling,\n                parent = node.parentNode,\n                display = node.style.display;\n            // glob.win.opera && parent.removeChild(node);\n            // node.style.display = \"none\";\n            // o = dragi.el.paper.getElementByPoint(x, y);\n            // node.style.display = display;\n            // glob.win.opera && (next ? parent.insertBefore(node, next) : parent.appendChild(node));\n            // o && eve(\"snap.drag.over.\" + dragi.el.id, dragi.el, o);\n            x += scrollX;\n            y += scrollY;\n            eve(\"snap.drag.move.\" + dragi.el.id, dragi.move_scope || dragi.el, x - dragi.el._drag.x, y - dragi.el._drag.y, x, y, e);\n        }\n    },\n    dragUp = function (e) {\n        Snap.unmousemove(dragMove).unmouseup(dragUp);\n        var i = drag.length,\n            dragi;\n        while (i--) {\n            dragi = drag[i];\n            dragi.el._drag = {};\n            eve(\"snap.drag.end.\" + dragi.el.id, dragi.end_scope || dragi.start_scope || dragi.move_scope || dragi.el, e);\n            eve.off(\"snap.drag.*.\" + dragi.el.id);\n        }\n        drag = [];\n    };\n    /*\\\n     * Element.click\n     [ method ]\n     **\n     * Adds a click event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unclick\n     [ method ]\n     **\n     * Removes a click event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.dblclick\n     [ method ]\n     **\n     * Adds a double click event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.undblclick\n     [ method ]\n     **\n     * Removes a double click event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mousedown\n     [ method ]\n     **\n     * Adds a mousedown event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousedown\n     [ method ]\n     **\n     * Removes a mousedown event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mousemove\n     [ method ]\n     **\n     * Adds a mousemove event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousemove\n     [ method ]\n     **\n     * Removes a mousemove event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseout\n     [ method ]\n     **\n     * Adds a mouseout event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseout\n     [ method ]\n     **\n     * Removes a mouseout event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseover\n     [ method ]\n     **\n     * Adds a mouseover event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseover\n     [ method ]\n     **\n     * Removes a mouseover event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseup\n     [ method ]\n     **\n     * Adds a mouseup event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseup\n     [ method ]\n     **\n     * Removes a mouseup event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchstart\n     [ method ]\n     **\n     * Adds a touchstart event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchstart\n     [ method ]\n     **\n     * Removes a touchstart event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchmove\n     [ method ]\n     **\n     * Adds a touchmove event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchmove\n     [ method ]\n     **\n     * Removes a touchmove event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchend\n     [ method ]\n     **\n     * Adds a touchend event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchend\n     [ method ]\n     **\n     * Removes a touchend event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchcancel\n     [ method ]\n     **\n     * Adds a touchcancel event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchcancel\n     [ method ]\n     **\n     * Removes a touchcancel event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    for (var i = events.length; i--;) {\n        (function (eventName) {\n            Snap[eventName] = elproto[eventName] = function (fn, scope) {\n                if (Snap.is(fn, \"function\")) {\n                    this.events = this.events || [];\n                    this.events.push({\n                        name: eventName,\n                        f: fn,\n                        unbind: addEvent(this.node || document, eventName, fn, scope || this)\n                    });\n                } else {\n                    for (var i = 0, ii = this.events.length; i < ii; i++) if (this.events[i].name == eventName) {\n                        try {\n                            this.events[i].f.call(this);\n                        } catch (e) {}\n                    }\n                }\n                return this;\n            };\n            Snap[\"un\" + eventName] =\n            elproto[\"un\" + eventName] = function (fn) {\n                var events = this.events || [],\n                    l = events.length;\n                while (l--) if (events[l].name == eventName &&\n                               (events[l].f == fn || !fn)) {\n                    events[l].unbind();\n                    events.splice(l, 1);\n                    !events.length && delete this.events;\n                    return this;\n                }\n                return this;\n            };\n        })(events[i]);\n    }\n    /*\\\n     * Element.hover\n     [ method ]\n     **\n     * Adds hover event handlers to the element\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     - icontext (object) #optional context for hover in handler\n     - ocontext (object) #optional context for hover out handler\n     = (object) @Element\n    \\*/\n    elproto.hover = function (f_in, f_out, scope_in, scope_out) {\n        return this.mouseover(f_in, scope_in).mouseout(f_out, scope_out || scope_in);\n    };\n    /*\\\n     * Element.unhover\n     [ method ]\n     **\n     * Removes hover event handlers from the element\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     = (object) @Element\n    \\*/\n    elproto.unhover = function (f_in, f_out) {\n        return this.unmouseover(f_in).unmouseout(f_out);\n    };\n    var draggable = [];\n    // SIERRA unclear what _context_ refers to for starting, ending, moving the drag gesture.\n    // SIERRA Element.drag(): _x position of the mouse_: Where are the x/y values offset from?\n    // SIERRA Element.drag(): much of this member's doc appears to be duplicated for some reason.\n    // SIERRA Unclear about this sentence: _Additionally following drag events will be triggered: drag.start.<id> on start, drag.end.<id> on end and drag.move.<id> on every move._ Is there a global _drag_ object to which you can assign handlers keyed by an element's ID?\n    /*\\\n     * Element.drag\n     [ method ]\n     **\n     * Adds event handlers for an element's drag gesture\n     **\n     - onmove (function) handler for moving\n     - onstart (function) handler for drag start\n     - onend (function) handler for drag end\n     - mcontext (object) #optional context for moving handler\n     - scontext (object) #optional context for drag start handler\n     - econtext (object) #optional context for drag end handler\n     * Additionaly following `drag` events are triggered: `drag.start.<id>` on start, \n     * `drag.end.<id>` on end and `drag.move.<id>` on every move. When element is dragged over another element \n     * `drag.over.<id>` fires as well.\n     *\n     * Start event and start handler are called in specified context or in context of the element with following parameters:\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * Move event and move handler are called in specified context or in context of the element with following parameters:\n     o dx (number) shift by x from the start point\n     o dy (number) shift by y from the start point\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * End event and end handler are called in specified context or in context of the element with following parameters:\n     o event (object) DOM event object\n     = (object) @Element\n    \\*/\n    elproto.drag = function (onmove, onstart, onend, move_scope, start_scope, end_scope) {\n        var el = this;\n        if (!arguments.length) {\n            var origTransform;\n            return el.drag(function (dx, dy) {\n                this.attr({\n                    transform: origTransform + (origTransform ? \"T\" : \"t\") + [dx, dy]\n                });\n            }, function () {\n                origTransform = this.transform().local;\n            });\n        }\n        function start(e, x, y) {\n            (e.originalEvent || e).preventDefault();\n            el._drag.x = x;\n            el._drag.y = y;\n            el._drag.id = e.identifier;\n            !drag.length && Snap.mousemove(dragMove).mouseup(dragUp);\n            drag.push({el: el, move_scope: move_scope, start_scope: start_scope, end_scope: end_scope});\n            onstart && eve.on(\"snap.drag.start.\" + el.id, onstart);\n            onmove && eve.on(\"snap.drag.move.\" + el.id, onmove);\n            onend && eve.on(\"snap.drag.end.\" + el.id, onend);\n            eve(\"snap.drag.start.\" + el.id, start_scope || move_scope || el, x, y, e);\n        }\n        function init(e, x, y) {\n            eve(\"snap.draginit.\" + el.id, el, e, x, y);\n        }\n        eve.on(\"snap.draginit.\" + el.id, start);\n        el._drag = {};\n        draggable.push({el: el, start: start, init: init});\n        el.mousedown(init);\n        return el;\n    };\n    /*\n     * Element.onDragOver\n     [ method ]\n     **\n     * Shortcut to assign event handler for `drag.over.<id>` event, where `id` is the element's `id` (see @Element.id)\n     - f (function) handler for event, first argument would be the element you are dragging over\n    \\*/\n    // elproto.onDragOver = function (f) {\n    //     f ? eve.on(\"snap.drag.over.\" + this.id, f) : eve.unbind(\"snap.drag.over.\" + this.id);\n    // };\n    /*\\\n     * Element.undrag\n     [ method ]\n     **\n     * Removes all drag event handlers from the given element\n    \\*/\n    elproto.undrag = function () {\n        var i = draggable.length;\n        while (i--) if (draggable[i].el == this) {\n            this.unmousedown(draggable[i].init);\n            draggable.splice(i, 1);\n            eve.unbind(\"snap.drag.*.\" + this.id);\n            eve.unbind(\"snap.draginit.\" + this.id);\n        }\n        !draggable.length && Snap.unmousemove(dragMove).unmouseup(dragUp);\n        return this;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n        pproto = Paper.prototype,\n        rgurl = /^\\s*url\\((.+)\\)/,\n        Str = String,\n        $ = Snap._.$;\n    Snap.filter = {};\n    /*\\\n     * Paper.filter\n     [ method ]\n     **\n     * Creates a `<filter>` element\n     **\n     - filstr (string) SVG fragment of filter provided as a string\n     = (object) @Element\n     * Note: It is recommended to use filters embedded into the page inside an empty SVG element.\n     > Usage\n     | var f = paper.filter('<feGaussianBlur stdDeviation=\"2\"/>'),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    pproto.filter = function (filstr) {\n        var paper = this;\n        if (paper.type != \"svg\") {\n            paper = paper.paper;\n        }\n        var f = Snap.parse(Str(filstr)),\n            id = Snap._.id(),\n            width = paper.node.offsetWidth,\n            height = paper.node.offsetHeight,\n            filter = $(\"filter\");\n        $(filter, {\n            id: id,\n            filterUnits: \"userSpaceOnUse\"\n        });\n        filter.appendChild(f.node);\n        paper.defs.appendChild(filter);\n        return new Element(filter);\n    };\n\n    eve.on(\"snap.util.getattr.filter\", function () {\n        eve.stop();\n        var p = $(this.node, \"filter\");\n        if (p) {\n            var match = Str(p).match(rgurl);\n            return match && Snap.select(match[1]);\n        }\n    });\n    eve.on(\"snap.util.attr.filter\", function (value) {\n        if (value instanceof Element && value.type == \"filter\") {\n            eve.stop();\n            var id = value.node.id;\n            if (!id) {\n                $(value.node, {id: value.id});\n                id = value.id;\n            }\n            $(this.node, {\n                filter: Snap.url(id)\n            });\n        }\n        if (!value || value == \"none\") {\n            eve.stop();\n            this.node.removeAttribute(\"filter\");\n        }\n    });\n    /*\\\n     * Snap.filter.blur\n     [ method ]\n     **\n     * Returns an SVG markup string for the blur filter\n     **\n     - x (number) amount of horizontal blur, in pixels\n     - y (number) #optional amount of vertical blur, in pixels\n     = (string) filter representation\n     > Usage\n     | var f = paper.filter(Snap.filter.blur(5, 10)),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    Snap.filter.blur = function (x, y) {\n        if (x == null) {\n            x = 2;\n        }\n        var def = y == null ? x : [x, y];\n        return Snap.format('\\<feGaussianBlur stdDeviation=\"{def}\"/>', {\n            def: def\n        });\n    };\n    Snap.filter.blur.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.shadow\n     [ method ]\n     **\n     * Returns an SVG markup string for the shadow filter\n     **\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - blur (number) #optional amount of blur\n     - color (string) #optional color of the shadow\n     - opacity (number) #optional `0..1` opacity of the shadow\n     * or\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - color (string) #optional color of the shadow\n     - opacity (number) #optional `0..1` opacity of the shadow\n     * which makes blur default to `4`. Or\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - opacity (number) #optional `0..1` opacity of the shadow\n     = (string) filter representation\n     > Usage\n     | var f = paper.filter(Snap.filter.shadow(0, 2, .3)),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    Snap.filter.shadow = function (dx, dy, blur, color, opacity) {\n        if (opacity == null) {\n            if (color == null) {\n                opacity = blur;\n                blur = 4;\n                color = \"#000\";\n            } else {\n                opacity = color;\n                color = blur;\n                blur = 4;\n            }\n        }\n        if (blur == null) {\n            blur = 4;\n        }\n        if (opacity == null) {\n            opacity = 1;\n        }\n        if (dx == null) {\n            dx = 0;\n            dy = 2;\n        }\n        if (dy == null) {\n            dy = dx;\n        }\n        color = Snap.color(color);\n        return Snap.format('<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"{blur}\"/><feOffset dx=\"{dx}\" dy=\"{dy}\" result=\"offsetblur\"/><feFlood flood-color=\"{color}\"/><feComposite in2=\"offsetblur\" operator=\"in\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"{opacity}\"/></feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge>', {\n            color: color,\n            dx: dx,\n            dy: dy,\n            blur: blur,\n            opacity: opacity\n        });\n    };\n    Snap.filter.shadow.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.grayscale\n     [ method ]\n     **\n     * Returns an SVG markup string for the grayscale filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.grayscale = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {b} {h} 0 0 0 0 0 1 0\"/>', {\n            a: 0.2126 + 0.7874 * (1 - amount),\n            b: 0.7152 - 0.7152 * (1 - amount),\n            c: 0.0722 - 0.0722 * (1 - amount),\n            d: 0.2126 - 0.2126 * (1 - amount),\n            e: 0.7152 + 0.2848 * (1 - amount),\n            f: 0.0722 - 0.0722 * (1 - amount),\n            g: 0.2126 - 0.2126 * (1 - amount),\n            h: 0.0722 + 0.9278 * (1 - amount)\n        });\n    };\n    Snap.filter.grayscale.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.sepia\n     [ method ]\n     **\n     * Returns an SVG markup string for the sepia filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.sepia = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {h} {i} 0 0 0 0 0 1 0\"/>', {\n            a: 0.393 + 0.607 * (1 - amount),\n            b: 0.769 - 0.769 * (1 - amount),\n            c: 0.189 - 0.189 * (1 - amount),\n            d: 0.349 - 0.349 * (1 - amount),\n            e: 0.686 + 0.314 * (1 - amount),\n            f: 0.168 - 0.168 * (1 - amount),\n            g: 0.272 - 0.272 * (1 - amount),\n            h: 0.534 - 0.534 * (1 - amount),\n            i: 0.131 + 0.869 * (1 - amount)\n        });\n    };\n    Snap.filter.sepia.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.saturate\n     [ method ]\n     **\n     * Returns an SVG markup string for the saturate filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.saturate = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"saturate\" values=\"{amount}\"/>', {\n            amount: 1 - amount\n        });\n    };\n    Snap.filter.saturate.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.hueRotate\n     [ method ]\n     **\n     * Returns an SVG markup string for the hue-rotate filter\n     **\n     - angle (number) angle of rotation\n     = (string) filter representation\n    \\*/\n    Snap.filter.hueRotate = function (angle) {\n        angle = angle || 0;\n        return Snap.format('<feColorMatrix type=\"hueRotate\" values=\"{angle}\"/>', {\n            angle: angle\n        });\n    };\n    Snap.filter.hueRotate.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.invert\n     [ method ]\n     **\n     * Returns an SVG markup string for the invert filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.invert = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n//        <feColorMatrix type=\"matrix\" values=\"-1 0 0 0 1  0 -1 0 0 1  0 0 -1 0 1  0 0 0 1 0\" color-interpolation-filters=\"sRGB\"/>\n        return Snap.format('<feComponentTransfer><feFuncR type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncG type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncB type=\"table\" tableValues=\"{amount} {amount2}\"/></feComponentTransfer>', {\n            amount: amount,\n            amount2: 1 - amount\n        });\n    };\n    Snap.filter.invert.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.brightness\n     [ method ]\n     **\n     * Returns an SVG markup string for the brightness filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.brightness = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\"/><feFuncG type=\"linear\" slope=\"{amount}\"/><feFuncB type=\"linear\" slope=\"{amount}\"/></feComponentTransfer>', {\n            amount: amount\n        });\n    };\n    Snap.filter.brightness.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.contrast\n     [ method ]\n     **\n     * Returns an SVG markup string for the contrast filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.contrast = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncG type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncB type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/></feComponentTransfer>', {\n            amount: amount,\n            amount2: .5 - amount / 2\n        });\n    };\n    Snap.filter.contrast.toString = function () {\n        return this();\n    };\n});\n\n// Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var box = Snap._.box,\n        is = Snap.is,\n        firstLetter = /^[^a-z]*([tbmlrc])/i,\n        toString = function () {\n            return \"T\" + this.dx + \",\" + this.dy;\n        };\n    /*\\\n     * Element.getAlign\n     [ method ]\n     **\n     * Returns shift needed to align the element relatively to given element.\n     * If no elements specified, parent `<svg>` container will be used.\n     - el (object) @optional alignment element\n     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n     = (object|string) Object in format `{dx: , dy: }` also has a string representation as a transformation string\n     > Usage\n     | el.transform(el.getAlign(el2, \"top\"));\n     * or\n     | var dy = el.getAlign(el2, \"top\").dy;\n    \\*/\n    Element.prototype.getAlign = function (el, way) {\n        if (way == null && is(el, \"string\")) {\n            way = el;\n            el = null;\n        }\n        el = el || this.paper;\n        var bx = el.getBBox ? el.getBBox() : box(el),\n            bb = this.getBBox(),\n            out = {};\n        way = way && way.match(firstLetter);\n        way = way ? way[1].toLowerCase() : \"c\";\n        switch (way) {\n            case \"t\":\n                out.dx = 0;\n                out.dy = bx.y - bb.y;\n            break;\n            case \"b\":\n                out.dx = 0;\n                out.dy = bx.y2 - bb.y2;\n            break;\n            case \"m\":\n                out.dx = 0;\n                out.dy = bx.cy - bb.cy;\n            break;\n            case \"l\":\n                out.dx = bx.x - bb.x;\n                out.dy = 0;\n            break;\n            case \"r\":\n                out.dx = bx.x2 - bb.x2;\n                out.dy = 0;\n            break;\n            default:\n                out.dx = bx.cx - bb.cx;\n                out.dy = 0;\n            break;\n        }\n        out.toString = toString;\n        return out;\n    };\n    /*\\\n     * Element.align\n     [ method ]\n     **\n     * Aligns the element relatively to given one via transformation.\n     * If no elements specified, parent `<svg>` container will be used.\n     - el (object) @optional alignment element\n     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n     = (object) this element\n     > Usage\n     | el.align(el2, \"top\");\n     * or\n     | el.align(\"middle\");\n    \\*/\n    Element.prototype.align = function (el, way) {\n        return this.transform(\"...\" + this.getAlign(el, way));\n    };\n});\n\n// Copyright (c) 2016 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        Str = String,\n        has = \"hasOwnProperty\";\n    function slice(from, to, f) {\n        return function (arr) {\n            var res = arr.slice(from, to);\n            if (res.length == 1) {\n                res = res[0];\n            }\n            return f ? f(res) : res;\n        };\n    }\n    var Animation = function (attr, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        this.attr = attr;\n        this.dur = ms;\n        easing && (this.easing = easing);\n        callback && (this.callback = callback);\n    };\n    Snap._.Animation = Animation;\n    /*\\\n     * Snap.animation\n     [ method ]\n     **\n     * Creates an animation object\n     **\n     - attr (object) attributes of final destination\n     - duration (number) duration of the animation, in milliseconds\n     - easing (function) #optional one of easing functions of @mina or custom one\n     - callback (function) #optional callback function that fires when animation ends\n     = (object) animation object\n    \\*/\n    Snap.animation = function (attr, ms, easing, callback) {\n        return new Animation(attr, ms, easing, callback);\n    };\n    /*\\\n     * Element.inAnim\n     [ method ]\n     **\n     * Returns a set of animations that may be able to manipulate the current element\n     **\n     = (object) in format:\n     o {\n     o     anim (object) animation object,\n     o     mina (object) @mina object,\n     o     curStatus (number) 0..1 — status of the animation: 0 — just started, 1 — just finished,\n     o     status (function) gets or sets the status of the animation,\n     o     stop (function) stops the animation\n     o }\n    \\*/\n    elproto.inAnim = function () {\n        var el = this,\n            res = [];\n        for (var id in el.anims) if (el.anims[has](id)) {\n            (function (a) {\n                res.push({\n                    anim: new Animation(a._attrs, a.dur, a.easing, a._callback),\n                    mina: a,\n                    curStatus: a.status(),\n                    status: function (val) {\n                        return a.status(val);\n                    },\n                    stop: function () {\n                        a.stop();\n                    }\n                });\n            }(el.anims[id]));\n        }\n        return res;\n    };\n    /*\\\n     * Snap.animate\n     [ method ]\n     **\n     * Runs generic animation of one number into another with a caring function\n     **\n     - from (number|array) number or array of numbers\n     - to (number|array) number or array of numbers\n     - setter (function) caring function that accepts one number argument\n     - duration (number) duration, in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function to execute when animation ends\n     = (object) animation object in @mina format\n     o {\n     o     id (string) animation id, consider it read-only,\n     o     duration (function) gets or sets the duration of the animation,\n     o     easing (function) easing,\n     o     speed (function) gets or sets the speed of the animation,\n     o     status (function) gets or sets the status of the animation,\n     o     stop (function) stops the animation\n     o }\n     | var rect = Snap().rect(0, 0, 10, 10);\n     | Snap.animate(0, 10, function (val) {\n     |     rect.attr({\n     |         x: val\n     |     });\n     | }, 1000);\n     | // in given context is equivalent to\n     | rect.animate({x: 10}, 1000);\n    \\*/\n    Snap.animate = function (from, to, setter, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        var now = mina.time(),\n            anim = mina(from, to, now, now + ms, mina.time, setter, easing);\n        callback && eve.once(\"mina.finish.\" + anim.id, callback);\n        return anim;\n    };\n    /*\\\n     * Element.stop\n     [ method ]\n     **\n     * Stops all the animations for the current element\n     **\n     = (Element) the current element\n    \\*/\n    elproto.stop = function () {\n        var anims = this.inAnim();\n        for (var i = 0, ii = anims.length; i < ii; i++) {\n            anims[i].stop();\n        }\n        return this;\n    };\n    /*\\\n     * Element.animate\n     [ method ]\n     **\n     * Animates the given attributes of the element\n     **\n     - attrs (object) key-value pairs of destination attributes\n     - duration (number) duration of the animation in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function that executes when the animation ends\n     = (Element) the current element\n    \\*/\n    elproto.animate = function (attrs, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        if (attrs instanceof Animation) {\n            callback = attrs.callback;\n            easing = attrs.easing;\n            ms = attrs.dur;\n            attrs = attrs.attr;\n        }\n        var fkeys = [], tkeys = [], keys = {}, from, to, f, eq,\n            el = this;\n        for (var key in attrs) if (attrs[has](key)) {\n            if (el.equal) {\n                eq = el.equal(key, Str(attrs[key]));\n                from = eq.from;\n                to = eq.to;\n                f = eq.f;\n            } else {\n                from = +el.attr(key);\n                to = +attrs[key];\n            }\n            var len = is(from, \"array\") ? from.length : 1;\n            keys[key] = slice(fkeys.length, fkeys.length + len, f);\n            fkeys = fkeys.concat(from);\n            tkeys = tkeys.concat(to);\n        }\n        var now = mina.time(),\n            anim = mina(fkeys, tkeys, now, now + ms, mina.time, function (val) {\n                var attr = {};\n                for (var key in keys) if (keys[has](key)) {\n                    attr[key] = keys[key](val);\n                }\n                el.attr(attr);\n            }, easing);\n        el.anims[anim.id] = anim;\n        anim._attrs = attrs;\n        anim._callback = callback;\n        eve(\"snap.animcreated.\" + el.id, anim);\n        eve.once(\"mina.finish.\" + anim.id, function () {\n            eve.off(\"mina.*.\" + anim.id);\n            delete el.anims[anim.id];\n            callback && callback.call(el);\n        });\n        eve.once(\"mina.stop.\" + anim.id, function () {\n            eve.off(\"mina.*.\" + anim.id);\n            delete el.anims[anim.id];\n        });\n        return el;\n    };\n});\n\n// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    // Colours are from https://www.materialui.co\n    var red         = \"#ffebee#ffcdd2#ef9a9a#e57373#ef5350#f44336#e53935#d32f2f#c62828#b71c1c#ff8a80#ff5252#ff1744#d50000\",\n        pink        = \"#FCE4EC#F8BBD0#F48FB1#F06292#EC407A#E91E63#D81B60#C2185B#AD1457#880E4F#FF80AB#FF4081#F50057#C51162\",\n        purple      = \"#F3E5F5#E1BEE7#CE93D8#BA68C8#AB47BC#9C27B0#8E24AA#7B1FA2#6A1B9A#4A148C#EA80FC#E040FB#D500F9#AA00FF\",\n        deeppurple  = \"#EDE7F6#D1C4E9#B39DDB#9575CD#7E57C2#673AB7#5E35B1#512DA8#4527A0#311B92#B388FF#7C4DFF#651FFF#6200EA\",\n        indigo      = \"#E8EAF6#C5CAE9#9FA8DA#7986CB#5C6BC0#3F51B5#3949AB#303F9F#283593#1A237E#8C9EFF#536DFE#3D5AFE#304FFE\",\n        blue        = \"#E3F2FD#BBDEFB#90CAF9#64B5F6#64B5F6#2196F3#1E88E5#1976D2#1565C0#0D47A1#82B1FF#448AFF#2979FF#2962FF\",\n        lightblue   = \"#E1F5FE#B3E5FC#81D4FA#4FC3F7#29B6F6#03A9F4#039BE5#0288D1#0277BD#01579B#80D8FF#40C4FF#00B0FF#0091EA\",\n        cyan        = \"#E0F7FA#B2EBF2#80DEEA#4DD0E1#26C6DA#00BCD4#00ACC1#0097A7#00838F#006064#84FFFF#18FFFF#00E5FF#00B8D4\",\n        teal        = \"#E0F2F1#B2DFDB#80CBC4#4DB6AC#26A69A#009688#00897B#00796B#00695C#004D40#A7FFEB#64FFDA#1DE9B6#00BFA5\",\n        green       = \"#E8F5E9#C8E6C9#A5D6A7#81C784#66BB6A#4CAF50#43A047#388E3C#2E7D32#1B5E20#B9F6CA#69F0AE#00E676#00C853\",\n        lightgreen  = \"#F1F8E9#DCEDC8#C5E1A5#AED581#9CCC65#8BC34A#7CB342#689F38#558B2F#33691E#CCFF90#B2FF59#76FF03#64DD17\",\n        lime        = \"#F9FBE7#F0F4C3#E6EE9C#DCE775#D4E157#CDDC39#C0CA33#AFB42B#9E9D24#827717#F4FF81#EEFF41#C6FF00#AEEA00\",\n        yellow      = \"#FFFDE7#FFF9C4#FFF59D#FFF176#FFEE58#FFEB3B#FDD835#FBC02D#F9A825#F57F17#FFFF8D#FFFF00#FFEA00#FFD600\",\n        amber       = \"#FFF8E1#FFECB3#FFE082#FFD54F#FFCA28#FFC107#FFB300#FFA000#FF8F00#FF6F00#FFE57F#FFD740#FFC400#FFAB00\",\n        orange      = \"#FFF3E0#FFE0B2#FFCC80#FFB74D#FFA726#FF9800#FB8C00#F57C00#EF6C00#E65100#FFD180#FFAB40#FF9100#FF6D00\",\n        deeporange  = \"#FBE9E7#FFCCBC#FFAB91#FF8A65#FF7043#FF5722#F4511E#E64A19#D84315#BF360C#FF9E80#FF6E40#FF3D00#DD2C00\",\n        brown       = \"#EFEBE9#D7CCC8#BCAAA4#A1887F#8D6E63#795548#6D4C41#5D4037#4E342E#3E2723\",\n        grey        = \"#FAFAFA#F5F5F5#EEEEEE#E0E0E0#BDBDBD#9E9E9E#757575#616161#424242#212121\",\n        bluegrey    = \"#ECEFF1#CFD8DC#B0BEC5#90A4AE#78909C#607D8B#546E7A#455A64#37474F#263238\";\n    /*\\\n     * Snap.mui\n     [ property ]\n     **\n     * Contain Material UI colours.\n     | Snap().rect(0, 0, 10, 10).attr({fill: Snap.mui.deeppurple, stroke: Snap.mui.amber[600]});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.mui = {};\n    /*\\\n     * Snap.flat\n     [ property ]\n     **\n     * Contain Flat UI colours.\n     | Snap().rect(0, 0, 10, 10).attr({fill: Snap.flat.carrot, stroke: Snap.flat.wetasphalt});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.flat = {};\n    function saveColor(colors) {\n        colors = colors.split(/(?=#)/);\n        var color = new String(colors[5]);\n        color[50] = colors[0];\n        color[100] = colors[1];\n        color[200] = colors[2];\n        color[300] = colors[3];\n        color[400] = colors[4];\n        color[500] = colors[5];\n        color[600] = colors[6];\n        color[700] = colors[7];\n        color[800] = colors[8];\n        color[900] = colors[9];\n        if (colors[10]) {\n            color.A100 = colors[10];\n            color.A200 = colors[11];\n            color.A400 = colors[12];\n            color.A700 = colors[13];\n        }\n        return color;\n    }\n    Snap.mui.red = saveColor(red);\n    Snap.mui.pink = saveColor(pink);\n    Snap.mui.purple = saveColor(purple);\n    Snap.mui.deeppurple = saveColor(deeppurple);\n    Snap.mui.indigo = saveColor(indigo);\n    Snap.mui.blue = saveColor(blue);\n    Snap.mui.lightblue = saveColor(lightblue);\n    Snap.mui.cyan = saveColor(cyan);\n    Snap.mui.teal = saveColor(teal);\n    Snap.mui.green = saveColor(green);\n    Snap.mui.lightgreen = saveColor(lightgreen);\n    Snap.mui.lime = saveColor(lime);\n    Snap.mui.yellow = saveColor(yellow);\n    Snap.mui.amber = saveColor(amber);\n    Snap.mui.orange = saveColor(orange);\n    Snap.mui.deeporange = saveColor(deeporange);\n    Snap.mui.brown = saveColor(brown);\n    Snap.mui.grey = saveColor(grey);\n    Snap.mui.bluegrey = saveColor(bluegrey);\n    Snap.flat.turquoise = \"#1abc9c\";\n    Snap.flat.greensea = \"#16a085\";\n    Snap.flat.sunflower = \"#f1c40f\";\n    Snap.flat.orange = \"#f39c12\";\n    Snap.flat.emerland = \"#2ecc71\";\n    Snap.flat.nephritis = \"#27ae60\";\n    Snap.flat.carrot = \"#e67e22\";\n    Snap.flat.pumpkin = \"#d35400\";\n    Snap.flat.peterriver = \"#3498db\";\n    Snap.flat.belizehole = \"#2980b9\";\n    Snap.flat.alizarin = \"#e74c3c\";\n    Snap.flat.pomegranate = \"#c0392b\";\n    Snap.flat.amethyst = \"#9b59b6\";\n    Snap.flat.wisteria = \"#8e44ad\";\n    Snap.flat.clouds = \"#ecf0f1\";\n    Snap.flat.silver = \"#bdc3c7\";\n    Snap.flat.wetasphalt = \"#34495e\";\n    Snap.flat.midnightblue = \"#2c3e50\";\n    Snap.flat.concrete = \"#95a5a6\";\n    Snap.flat.asbestos = \"#7f8c8d\";\n    /*\\\n     * Snap.importMUIColors\n     [ method ]\n     **\n     * Imports Material UI colours into global object.\n     | Snap.importMUIColors();\n     | Snap().rect(0, 0, 10, 10).attr({fill: deeppurple, stroke: amber[600]});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.importMUIColors = function () {\n        for (var color in Snap.mui) {\n            if (Snap.mui.hasOwnProperty(color)) {\n                window[color] = Snap.mui[color];\n            }\n        }\n    };\n});\n\nmodule.exports = Snap\n\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["C:\\Users\\uw\\Desktop\\site\\ahmed-khelili-blog\\node_modules\\snapsvg-cjs\\dist\\snap.svg-cjs.js"],"names":[],"mappings":";;;;;AAAA,aAAa,mBAAO,CAAC,MAAK;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,0CAA0C,QAAQ;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,gDAAgD,QAAQ;AACxD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjaAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4CAA4C;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE,YAAY,EAAE;AACnD;AACA;AACA;AACA;AACA,YAAY,aAAa;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,OAAO;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,EAAE,EAAE,EAAE,EAAE,UAAU,EAAE,WAAW,EAAE,sBAAsB;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,wBAAwB,KAAK,KAAK;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,QAAQ;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjgDAAgD,0BAA0B;AAC1E;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0FAA0F,UAAU;AACpG;AACA,kFAAkF,WAAW;AAC7F;AACA,4FAA4F,WAAW;AACvG;AACA;AACA;AACA,4FAA4F,WAAW;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,YAAY;AACZ,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,mBAAmB;AACnuBAAuB,6EAA6E;AACpG;AACA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,uBAAuB;AAC9C;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,QAAQ;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB,4EAA4E;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,WAAW;AAC3B;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,YAAY;AAC5B;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,qBAAqB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,qCAAqC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,QAAQ;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,QAAQ;AAC3C;AACA;AACA;AACA;AACA;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA;AACA,aAAa;AACboBAAoB;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,eAAeaAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb,6CAA6C,EAAE;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,8BAA8B,+BAA+B;AAC7D,aAAa;AACb,8BAA8B,8BAA8B;AAC5D,aAAa;AACb,8BAA8B,uBAAuB;AACrD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACbuBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,wCAAwC,QAAQ;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,UAAU;AACtC;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,oCAAoC,QAAQ;AAC5C;AACA;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,aAAa;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,aAAa;AACpC;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,QAAQ;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,QAAQ;AACrD;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4IAA4I,MAAM,WAAW,OAAO,YAAY,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,OAAO,GAAG,SAAS;AACnN;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,SAAS;AAC/B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,SAAS;AAC5B,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,OAAO;AAClC,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,oCAAoC,OAAO;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,uBAAuB;AACpD,iBAAiB;AACjB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,kBAAkB;AACzD;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,aAAa;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,6CAA6C,QAAQ;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,aAAa;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,kBAAkB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,uBAAuB;AAC1D,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,2BAA2B;AAC3C;AACA;AACA,gBAAgB,cAAc;AAC9B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,kCAAkC,iBAAiB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,2BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,oCAAoC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,sCAAsC,WAAW;AACjD;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA,6CAA6C,QAAQ;AACrD;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,aAAa;AAC7B,gBAAgB,aAAa;AAC7B,oBAAoB,aAAa;AACjC,kBAAkB,aAAa;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,uBAAuB,YAAY;AACnC;AACA,wBAAwB,0BAA0B;AAClD;AACA,mBAAmB,YAAY;AAC/B;AACA,wBAAwB,0BAA0B;AAClD;AACA,mBAAmB,QAAQ;AAC3B,2BAA2B,QAAQ;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,QAAQ;AAClD;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,kDAAkD,QAAQ;AAC1D;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,6DAA6D,QAAQ;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,QAAQ;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACbkDAAkD,QAAQ;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,QAAQ;AAC/D;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,QAAQ;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,QAAQ;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,QAAQ;AAC3D;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA,gBAAgB,yDAAyD;AACzE,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,yDAAyD;AAC9E,sBAAsB,yDAAyD;AAC/E;AACA;AACA;AACA;AACA;AACA,8BAA8B,WAAW;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD,gDAAgD;AAChD,gDAAgD;AAChD;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD,kDAAkD;AAClD,kDAAkD;AAClD;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,sBAAsB;AACtB,kEAAkE,QAAQ;AAC1E,uCAAuC;;AAEvC;AACA;AACA,mCAAmC;AACnC,6CAA6C;AAC7C;AACA,kDAAkD;;AAElD,mEAAmE;AACnE;AACA;;AAEA,yBAAyB;;AAEzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,QAAQ;AAC7C;AACA,0CAA0C,QAAQ;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0CAA0C,mBAAmB;AAC7D;AACA,yBAAyB,+BAA+B;AACxD,yBAAyB,+BAA+B;AACxD,yBAAyB,+BAA+B;AACxD,yBAAyB;AACzB;AACA;AACA;AACA,4BAA4B;AAC5B,iBAAiB;AACjB,4BAA4B;AAC5B,iBAAiB;AACjB,4BAA4B;AAC5B,4BAA4B;AAC5B;AACA,aAAa;AACb;AACA;AACA,iBAAiB;AACjB,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,0CAA0C,QAAQ;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAutD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA,qBAAqB,MAAM,uBAAuB,MAAM;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA,mBAAmB,WAAW;AAC9B;AACA;AACA,cAAc,yBAAyB;AACvC;AACA;AACA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,QAAQ;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,KAAK;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,eAAe;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,QAAQ;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,QAAQ;AACjD,gDAAgD,QAAQ;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,EAAE;AACzC;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,YAAY;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,mFAAmF,QAAQ;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,KAAK;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,4DAA4D,QAAQ;AACpE;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,+EAA+E;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,iCAAiC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,+BAA+B,aAAa;AAC5C;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,IAAI;AAChE;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,KAAK,kBAAkB,GAAG,OAAO,GAAG,8CAA8C,MAAM,oGAAoG,QAAQ;AAChR;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,EAAE,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,EAAE,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,OAAO;AAC3E;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,MAAM;AAC3E;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAqF,OAAO,EAAE,QAAQ,uCAAuC,OAAO,EAAE,QAAQ,uCAAuC,OAAO,EAAE,QAAQ;AACtN;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF,OAAO,kCAAkC,OAAO,kCAAkC,OAAO;AACzK;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF,OAAO,cAAc,QAAQ,kCAAkC,OAAO,cAAc,QAAQ,kCAAkC,OAAO,cAAc,QAAQ;AAC3O;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,WAAW;AACrqBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,QAAQ;AACR;AACA,qBAAqB,MAAM;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,QAAQ;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,uDAAuD;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,qDAAqD;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,qCAAqC;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED","file":"x","sourcesContent":["window.eve = require('eve')\n\n// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar mina = (function (eve) {\n    var animations = {},\n    requestAnimFrame = window.requestAnimationFrame       ||\n                       window.webkitRequestAnimationFrame ||\n                       window.mozRequestAnimationFrame    ||\n                       window.oRequestAnimationFrame      ||\n                       window.msRequestAnimationFrame     ||\n                       function (callback) {\n                           setTimeout(callback, 16, new Date().getTime());\n                           return true;\n                       },\n    requestID,\n    isArray = Array.isArray || function (a) {\n        return a instanceof Array ||\n            Object.prototype.toString.call(a) == \"[object Array]\";\n    },\n    idgen = 0,\n    idprefix = \"M\" + (+new Date).toString(36),\n    ID = function () {\n        return idprefix + (idgen++).toString(36);\n    },\n    diff = function (a, b, A, B) {\n        if (isArray(a)) {\n            res = [];\n            for (var i = 0, ii = a.length; i < ii; i++) {\n                res[i] = diff(a[i], b, A[i], B);\n            }\n            return res;\n        }\n        var dif = (A - a) / (B - b);\n        return function (bb) {\n            return a + dif * (bb - b);\n        };\n    },\n    timer = Date.now || function () {\n        return +new Date;\n    },\n    sta = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.s;\n        }\n        var ds = a.s - val;\n        a.b += a.dur * ds;\n        a.B += a.dur * ds;\n        a.s = val;\n    },\n    speed = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.spd;\n        }\n        a.spd = val;\n    },\n    duration = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.dur;\n        }\n        a.s = a.s * val / a.dur;\n        a.dur = val;\n    },\n    stopit = function () {\n        var a = this;\n        delete animations[a.id];\n        a.update();\n        eve(\"mina.stop.\" + a.id, a);\n    },\n    pause = function () {\n        var a = this;\n        if (a.pdif) {\n            return;\n        }\n        delete animations[a.id];\n        a.update();\n        a.pdif = a.get() - a.b;\n    },\n    resume = function () {\n        var a = this;\n        if (!a.pdif) {\n            return;\n        }\n        a.b = a.get() - a.pdif;\n        delete a.pdif;\n        animations[a.id] = a;\n        frame();\n    },\n    update = function () {\n        var a = this,\n            res;\n        if (isArray(a.start)) {\n            res = [];\n            for (var j = 0, jj = a.start.length; j < jj; j++) {\n                res[j] = +a.start[j] +\n                    (a.end[j] - a.start[j]) * a.easing(a.s);\n            }\n        } else {\n            res = +a.start + (a.end - a.start) * a.easing(a.s);\n        }\n        a.set(res);\n    },\n    frame = function (timeStamp) {\n        // Manual invokation?\n        if (!timeStamp) {\n            // Frame loop stopped?\n            if (!requestID) {\n                // Start frame loop...\n                requestID = requestAnimFrame(frame);\n            }\n            return;\n        }\n        var len = 0;\n        for (var i in animations) if (animations.hasOwnProperty(i)) {\n            var a = animations[i],\n                b = a.get(),\n                res;\n            len++;\n            a.s = (b - a.b) / (a.dur / a.spd);\n            if (a.s >= 1) {\n                delete animations[i];\n                a.s = 1;\n                len--;\n                (function (a) {\n                    setTimeout(function () {\n                        eve(\"mina.finish.\" + a.id, a);\n                    });\n                }(a));\n            }\n            a.update();\n        }\n        requestID = len ? requestAnimFrame(frame) : false;\n    },\n    /*\\\n     * mina\n     [ method ]\n     **\n     * Generic animation of numbers\n     **\n     - a (number) start _slave_ number\n     - A (number) end _slave_ number\n     - b (number) start _master_ number (start time in general case)\n     - B (number) end _master_ number (end time in general case)\n     - get (function) getter of _master_ number (see @mina.time)\n     - set (function) setter of _slave_ number\n     - easing (function) #optional easing function, default is @mina.linear\n     = (object) animation descriptor\n     o {\n     o         id (string) animation id,\n     o         start (number) start _slave_ number,\n     o         end (number) end _slave_ number,\n     o         b (number) start _master_ number,\n     o         s (number) animation status (0..1),\n     o         dur (number) animation duration,\n     o         spd (number) animation speed,\n     o         get (function) getter of _master_ number (see @mina.time),\n     o         set (function) setter of _slave_ number,\n     o         easing (function) easing function, default is @mina.linear,\n     o         status (function) status getter/setter,\n     o         speed (function) speed getter/setter,\n     o         duration (function) duration getter/setter,\n     o         stop (function) animation stopper\n     o         pause (function) pauses the animation\n     o         resume (function) resumes the animation\n     o         update (function) calles setter with the right value of the animation\n     o }\n    \\*/\n    mina = function (a, A, b, B, get, set, easing) {\n        var anim = {\n            id: ID(),\n            start: a,\n            end: A,\n            b: b,\n            s: 0,\n            dur: B - b,\n            spd: 1,\n            get: get,\n            set: set,\n            easing: easing || mina.linear,\n            status: sta,\n            speed: speed,\n            duration: duration,\n            stop: stopit,\n            pause: pause,\n            resume: resume,\n            update: update\n        };\n        animations[anim.id] = anim;\n        var len = 0, i;\n        for (i in animations) if (animations.hasOwnProperty(i)) {\n            len++;\n            if (len == 2) {\n                break;\n            }\n        }\n        len == 1 && frame();\n        return anim;\n    };\n    /*\\\n     * mina.time\n     [ method ]\n     **\n     * Returns the current time. Equivalent to:\n     | function () {\n     |     return (new Date).getTime();\n     | }\n    \\*/\n    mina.time = timer;\n    /*\\\n     * mina.getById\n     [ method ]\n     **\n     * Returns an animation by its id\n     - id (string) animation's id\n     = (object) See @mina\n    \\*/\n    mina.getById = function (id) {\n        return animations[id] || null;\n    };\n\n    /*\\\n     * mina.linear\n     [ method ]\n     **\n     * Default linear easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.linear = function (n) {\n        return n;\n    };\n    /*\\\n     * mina.easeout\n     [ method ]\n     **\n     * Easeout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easeout = function (n) {\n        return Math.pow(n, 1.7);\n    };\n    /*\\\n     * mina.easein\n     [ method ]\n     **\n     * Easein easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easein = function (n) {\n        return Math.pow(n, .48);\n    };\n    /*\\\n     * mina.easeinout\n     [ method ]\n     **\n     * Easeinout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easeinout = function (n) {\n        if (n == 1) {\n            return 1;\n        }\n        if (n == 0) {\n            return 0;\n        }\n        var q = .48 - n / 1.04,\n            Q = Math.sqrt(.1734 + q * q),\n            x = Q - q,\n            X = Math.pow(Math.abs(x), 1 / 3) * (x < 0 ? -1 : 1),\n            y = -Q - q,\n            Y = Math.pow(Math.abs(y), 1 / 3) * (y < 0 ? -1 : 1),\n            t = X + Y + .5;\n        return (1 - t) * 3 * t * t + t * t * t;\n    };\n    /*\\\n     * mina.backin\n     [ method ]\n     **\n     * Backin easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.backin = function (n) {\n        if (n == 1) {\n            return 1;\n        }\n        var s = 1.70158;\n        return n * n * ((s + 1) * n - s);\n    };\n    /*\\\n     * mina.backout\n     [ method ]\n     **\n     * Backout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.backout = function (n) {\n        if (n == 0) {\n            return 0;\n        }\n        n = n - 1;\n        var s = 1.70158;\n        return n * n * ((s + 1) * n + s) + 1;\n    };\n    /*\\\n     * mina.elastic\n     [ method ]\n     **\n     * Elastic easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.elastic = function (n) {\n        if (n == !!n) {\n            return n;\n        }\n        return Math.pow(2, -10 * n) * Math.sin((n - .075) *\n            (2 * Math.PI) / .3) + 1;\n    };\n    /*\\\n     * mina.bounce\n     [ method ]\n     **\n     * Bounce easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.bounce = function (n) {\n        var s = 7.5625,\n            p = 2.75,\n            l;\n        if (n < 1 / p) {\n            l = s * n * n;\n        } else {\n            if (n < 2 / p) {\n                n -= 1.5 / p;\n                l = s * n * n + .75;\n            } else {\n                if (n < 2.5 / p) {\n                    n -= 2.25 / p;\n                    l = s * n * n + .9375;\n                } else {\n                    n -= 2.625 / p;\n                    l = s * n * n + .984375;\n                }\n            }\n        }\n        return l;\n    };\n    window.mina = mina;\n    return mina;\n})(typeof eve == \"undefined\" ? function () {} : eve);\n\n// Copyright (c) 2013 - 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar Snap = (function(root) {\nSnap.version = \"0.5.1\";\n/*\\\n * Snap\n [ method ]\n **\n * Creates a drawing surface or wraps existing SVG element.\n **\n - width (number|string) width of surface\n - height (number|string) height of surface\n * or\n - DOM (SVGElement) element to be wrapped into Snap structure\n * or\n - array (array) array of elements (will return set of elements)\n * or\n - query (string) CSS query selector\n = (object) @Element\n\\*/\nfunction Snap(w, h) {\n    if (w) {\n        if (w.nodeType) {\n            return wrap(w);\n        }\n        if (is(w, \"array\") && Snap.set) {\n            return Snap.set.apply(Snap, w);\n        }\n        if (w instanceof Element) {\n            return w;\n        }\n        if (h == null) {\n            try {\n                w = glob.doc.querySelector(String(w));\n                return wrap(w);\n            } catch (e) {\n                return null;\n            }\n        }\n    }\n    w = w == null ? \"100%\" : w;\n    h = h == null ? \"100%\" : h;\n    return new Paper(w, h);\n}\nSnap.toString = function () {\n    return \"Snap v\" + this.version;\n};\nSnap._ = {};\nvar glob = {\n    win: root.window,\n    doc: root.window.document\n};\nSnap._.glob = glob;\nvar has = \"hasOwnProperty\",\n    Str = String,\n    toFloat = parseFloat,\n    toInt = parseInt,\n    math = Math,\n    mmax = math.max,\n    mmin = math.min,\n    abs = math.abs,\n    pow = math.pow,\n    PI = math.PI,\n    round = math.round,\n    E = \"\",\n    S = \" \",\n    objectToString = Object.prototype.toString,\n    ISURL = /^url\\(['\"]?([^\\)]+?)['\"]?\\)$/i,\n    colourRegExp = /^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\))\\s*$/i,\n    bezierrg = /^(?:cubic-)?bezier\\(([^,]+),([^,]+),([^,]+),([^\\)]+)\\)/,\n    separator = Snap._.separator = /[,\\s]+/,\n    whitespace = /[\\s]/g,\n    commaSpaces = /[\\s]*,[\\s]*/,\n    hsrg = {hs: 1, rg: 1},\n    pathCommand = /([a-z])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n    tCommand = /([rstm])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n    pathValues = /(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\\s]*,?[\\s]*/ig,\n    idgen = 0,\n    idprefix = \"S\" + (+new Date).toString(36),\n    ID = function (el) {\n        return (el && el.type ? el.type : E) + idprefix + (idgen++).toString(36);\n    },\n    xlink = \"http://www.w3.org/1999/xlink\",\n    xmlns = \"http://www.w3.org/2000/svg\",\n    hub = {},\n    /*\\\n     * Snap.url\n     [ method ]\n     **\n     * Wraps path into `\"url('<path>')\"`.\n     - value (string) path\n     = (string) wrapped path\n    \\*/\n    URL = Snap.url = function (url) {\n        return \"url('#\" + url + \"')\";\n    };\n\nfunction $(el, attr) {\n    if (attr) {\n        if (el == \"#text\") {\n            el = glob.doc.createTextNode(attr.text || attr[\"#text\"] || \"\");\n        }\n        if (el == \"#comment\") {\n            el = glob.doc.createComment(attr.text || attr[\"#text\"] || \"\");\n        }\n        if (typeof el == \"string\") {\n            el = $(el);\n        }\n        if (typeof attr == \"string\") {\n            if (el.nodeType == 1) {\n                if (attr.substring(0, 6) == \"xlink:\") {\n                    return el.getAttributeNS(xlink, attr.substring(6));\n                }\n                if (attr.substring(0, 4) == \"xml:\") {\n                    return el.getAttributeNS(xmlns, attr.substring(4));\n                }\n                return el.getAttribute(attr);\n            } else if (attr == \"text\") {\n                return el.nodeValue;\n            } else {\n                return null;\n            }\n        }\n        if (el.nodeType == 1) {\n            for (var key in attr) if (attr[has](key)) {\n                var val = Str(attr[key]);\n                if (val) {\n                    if (key.substring(0, 6) == \"xlink:\") {\n                        el.setAttributeNS(xlink, key.substring(6), val);\n                    } else if (key.substring(0, 4) == \"xml:\") {\n                        el.setAttributeNS(xmlns, key.substring(4), val);\n                    } else {\n                        el.setAttribute(key, val);\n                    }\n                } else {\n                    el.removeAttribute(key);\n                }\n            }\n        } else if (\"text\" in attr) {\n            el.nodeValue = attr.text;\n        }\n    } else {\n        el = glob.doc.createElementNS(xmlns, el);\n    }\n    return el;\n}\nSnap._.$ = $;\nSnap._.id = ID;\nfunction getAttrs(el) {\n    var attrs = el.attributes,\n        name,\n        out = {};\n    for (var i = 0; i < attrs.length; i++) {\n        if (attrs[i].namespaceURI == xlink) {\n            name = \"xlink:\";\n        } else {\n            name = \"\";\n        }\n        name += attrs[i].name;\n        out[name] = attrs[i].textContent;\n    }\n    return out;\n}\nfunction is(o, type) {\n    type = Str.prototype.toLowerCase.call(type);\n    if (type == \"finite\") {\n        return isFinite(o);\n    }\n    if (type == \"array\" &&\n        (o instanceof Array || Array.isArray && Array.isArray(o))) {\n        return true;\n    }\n    return  type == \"null\" && o === null ||\n            type == typeof o && o !== null ||\n            type == \"object\" && o === Object(o) ||\n            objectToString.call(o).slice(8, -1).toLowerCase() == type;\n}\n/*\\\n * Snap.format\n [ method ]\n **\n * Replaces construction of type `{<name>}` to the corresponding argument\n **\n - token (string) string to format\n - json (object) object which properties are used as a replacement\n = (string) formatted string\n > Usage\n | // this draws a rectangular shape equivalent to \"M10,20h40v50h-40z\"\n | paper.path(Snap.format(\"M{x},{y}h{dim.width}v{dim.height}h{dim['negative width']}z\", {\n |     x: 10,\n |     y: 20,\n |     dim: {\n |         width: 40,\n |         height: 50,\n |         \"negative width\": -40\n |     }\n | }));\n\\*/\nSnap.format = (function () {\n    var tokenRegex = /\\{([^\\}]+)\\}/g,\n        objNotationRegex = /(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g, // matches .xxxxx or [\"xxxxx\"] to run over object properties\n        replacer = function (all, key, obj) {\n            var res = obj;\n            key.replace(objNotationRegex, function (all, name, quote, quotedName, isFunc) {\n                name = name || quotedName;\n                if (res) {\n                    if (name in res) {\n                        res = res[name];\n                    }\n                    typeof res == \"function\" && isFunc && (res = res());\n                }\n            });\n            res = (res == null || res == obj ? all : res) + \"\";\n            return res;\n        };\n    return function (str, obj) {\n        return Str(str).replace(tokenRegex, function (all, key) {\n            return replacer(all, key, obj);\n        });\n    };\n})();\nfunction clone(obj) {\n    if (typeof obj == \"function\" || Object(obj) !== obj) {\n        return obj;\n    }\n    var res = new obj.constructor;\n    for (var key in obj) if (obj[has](key)) {\n        res[key] = clone(obj[key]);\n    }\n    return res;\n}\nSnap._.clone = clone;\nfunction repush(array, item) {\n    for (var i = 0, ii = array.length; i < ii; i++) if (array[i] === item) {\n        return array.push(array.splice(i, 1)[0]);\n    }\n}\nfunction cacher(f, scope, postprocessor) {\n    function newf() {\n        var arg = Array.prototype.slice.call(arguments, 0),\n            args = arg.join(\"\\u2400\"),\n            cache = newf.cache = newf.cache || {},\n            count = newf.count = newf.count || [];\n        if (cache[has](args)) {\n            repush(count, args);\n            return postprocessor ? postprocessor(cache[args]) : cache[args];\n        }\n        count.length >= 1e3 && delete cache[count.shift()];\n        count.push(args);\n        cache[args] = f.apply(scope, arg);\n        return postprocessor ? postprocessor(cache[args]) : cache[args];\n    }\n    return newf;\n}\nSnap._.cacher = cacher;\nfunction angle(x1, y1, x2, y2, x3, y3) {\n    if (x3 == null) {\n        var x = x1 - x2,\n            y = y1 - y2;\n        if (!x && !y) {\n            return 0;\n        }\n        return (180 + math.atan2(-y, -x) * 180 / PI + 360) % 360;\n    } else {\n        return angle(x1, y1, x3, y3) - angle(x2, y2, x3, y3);\n    }\n}\nfunction rad(deg) {\n    return deg % 360 * PI / 180;\n}\nfunction deg(rad) {\n    return rad * 180 / PI % 360;\n}\nfunction x_y() {\n    return this.x + S + this.y;\n}\nfunction x_y_w_h() {\n    return this.x + S + this.y + S + this.width + \" \\xd7 \" + this.height;\n}\n\n/*\\\n * Snap.rad\n [ method ]\n **\n * Transform angle to radians\n - deg (number) angle in degrees\n = (number) angle in radians\n\\*/\nSnap.rad = rad;\n/*\\\n * Snap.deg\n [ method ]\n **\n * Transform angle to degrees\n - rad (number) angle in radians\n = (number) angle in degrees\n\\*/\nSnap.deg = deg;\n/*\\\n * Snap.sin\n [ method ]\n **\n * Equivalent to `Math.sin()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) sin\n\\*/\nSnap.sin = function (angle) {\n    return math.sin(Snap.rad(angle));\n};\n/*\\\n * Snap.tan\n [ method ]\n **\n * Equivalent to `Math.tan()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) tan\n\\*/\nSnap.tan = function (angle) {\n    return math.tan(Snap.rad(angle));\n};\n/*\\\n * Snap.cos\n [ method ]\n **\n * Equivalent to `Math.cos()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) cos\n\\*/\nSnap.cos = function (angle) {\n    return math.cos(Snap.rad(angle));\n};\n/*\\\n * Snap.asin\n [ method ]\n **\n * Equivalent to `Math.asin()` only works with degrees, not radians.\n - num (number) value\n = (number) asin in degrees\n\\*/\nSnap.asin = function (num) {\n    return Snap.deg(math.asin(num));\n};\n/*\\\n * Snap.acos\n [ method ]\n **\n * Equivalent to `Math.acos()` only works with degrees, not radians.\n - num (number) value\n = (number) acos in degrees\n\\*/\nSnap.acos = function (num) {\n    return Snap.deg(math.acos(num));\n};\n/*\\\n * Snap.atan\n [ method ]\n **\n * Equivalent to `Math.atan()` only works with degrees, not radians.\n - num (number) value\n = (number) atan in degrees\n\\*/\nSnap.atan = function (num) {\n    return Snap.deg(math.atan(num));\n};\n/*\\\n * Snap.atan2\n [ method ]\n **\n * Equivalent to `Math.atan2()` only works with degrees, not radians.\n - num (number) value\n = (number) atan2 in degrees\n\\*/\nSnap.atan2 = function (num) {\n    return Snap.deg(math.atan2(num));\n};\n/*\\\n * Snap.angle\n [ method ]\n **\n * Returns an angle between two or three points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n - x3 (number) #optional x coord of third point\n - y3 (number) #optional y coord of third point\n = (number) angle in degrees\n\\*/\nSnap.angle = angle;\n/*\\\n * Snap.len\n [ method ]\n **\n * Returns distance between two points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n = (number) distance\n\\*/\nSnap.len = function (x1, y1, x2, y2) {\n    return Math.sqrt(Snap.len2(x1, y1, x2, y2));\n};\n/*\\\n * Snap.len2\n [ method ]\n **\n * Returns squared distance between two points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n = (number) distance\n\\*/\nSnap.len2 = function (x1, y1, x2, y2) {\n    return (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n};\n/*\\\n * Snap.closestPoint\n [ method ]\n **\n * Returns closest point to a given one on a given path.\n - path (Element) path element\n - x (number) x coord of a point\n - y (number) y coord of a point\n = (object) in format\n {\n    x (number) x coord of the point on the path\n    y (number) y coord of the point on the path\n    length (number) length of the path to the point\n    distance (number) distance from the given point to the path\n }\n\\*/\n// Copied from http://bl.ocks.org/mbostock/8027637\nSnap.closestPoint = function (path, x, y) {\n    function distance2(p) {\n        var dx = p.x - x,\n            dy = p.y - y;\n        return dx * dx + dy * dy;\n    }\n    var pathNode = path.node,\n        pathLength = pathNode.getTotalLength(),\n        precision = pathLength / pathNode.pathSegList.numberOfItems * .125,\n        best,\n        bestLength,\n        bestDistance = Infinity;\n\n    // linear scan for coarse approximation\n    for (var scan, scanLength = 0, scanDistance; scanLength <= pathLength; scanLength += precision) {\n        if ((scanDistance = distance2(scan = pathNode.getPointAtLength(scanLength))) < bestDistance) {\n            best = scan;\n            bestLength = scanLength;\n            bestDistance = scanDistance;\n        }\n    }\n\n    // binary search for precise estimate\n    precision *= .5;\n    while (precision > .5) {\n        var before,\n            after,\n            beforeLength,\n            afterLength,\n            beforeDistance,\n            afterDistance;\n        if ((beforeLength = bestLength - precision) >= 0 && (beforeDistance = distance2(before = pathNode.getPointAtLength(beforeLength))) < bestDistance) {\n            best = before;\n            bestLength = beforeLength;\n            bestDistance = beforeDistance;\n        } else if ((afterLength = bestLength + precision) <= pathLength && (afterDistance = distance2(after = pathNode.getPointAtLength(afterLength))) < bestDistance) {\n            best = after;\n            bestLength = afterLength;\n            bestDistance = afterDistance;\n        } else {\n            precision *= .5;\n        }\n    }\n\n    best = {\n        x: best.x,\n        y: best.y,\n        length: bestLength,\n        distance: Math.sqrt(bestDistance)\n    };\n    return best;\n}\n/*\\\n * Snap.is\n [ method ]\n **\n * Handy replacement for the `typeof` operator\n - o (…) any object or primitive\n - type (string) name of the type, e.g., `string`, `function`, `number`, etc.\n = (boolean) `true` if given value is of given type\n\\*/\nSnap.is = is;\n/*\\\n * Snap.snapTo\n [ method ]\n **\n * Snaps given value to given grid\n - values (array|number) given array of values or step of the grid\n - value (number) value to adjust\n - tolerance (number) #optional maximum distance to the target value that would trigger the snap. Default is `10`.\n = (number) adjusted value\n\\*/\nSnap.snapTo = function (values, value, tolerance) {\n    tolerance = is(tolerance, \"finite\") ? tolerance : 10;\n    if (is(values, \"array\")) {\n        var i = values.length;\n        while (i--) if (abs(values[i] - value) <= tolerance) {\n            return values[i];\n        }\n    } else {\n        values = +values;\n        var rem = value % values;\n        if (rem < tolerance) {\n            return value - rem;\n        }\n        if (rem > values - tolerance) {\n            return value - rem + values;\n        }\n    }\n    return value;\n};\n// Colour\n/*\\\n * Snap.getRGB\n [ method ]\n **\n * Parses color string as RGB object\n - color (string) color string in one of the following formats:\n # <ul>\n #     <li>Color name (<code>red</code>, <code>green</code>, <code>cornflowerblue</code>, etc)</li>\n #     <li>#••• — shortened HTML color: (<code>#000</code>, <code>#fc0</code>, etc.)</li>\n #     <li>#•••••• — full length HTML color: (<code>#000000</code>, <code>#bd2300</code>)</li>\n #     <li>rgb(•••, •••, •••) — red, green and blue channels values: (<code>rgb(200,&nbsp;100,&nbsp;0)</code>)</li>\n #     <li>rgba(•••, •••, •••, •••) — also with opacity</li>\n #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>)</li>\n #     <li>rgba(•••%, •••%, •••%, •••%) — also with opacity</li>\n #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>)</li>\n #     <li>hsba(•••, •••, •••, •••) — also with opacity</li>\n #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>\n #     <li>hsba(•••%, •••%, •••%, •••%) — also with opacity</li>\n #     <li>hsl(•••, •••, •••) — hue, saturation and luminosity values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;0.5)</code>)</li>\n #     <li>hsla(•••, •••, •••, •••) — also with opacity</li>\n #     <li>hsl(•••%, •••%, •••%) — same as above, but in %</li>\n #     <li>hsla(•••%, •••%, •••%, •••%) — also with opacity</li>\n # </ul>\n * Note that `%` can be used any time: `rgb(20%, 255, 50%)`.\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••,\n o     error (boolean) true if string can't be parsed\n o }\n\\*/\nSnap.getRGB = cacher(function (colour) {\n    if (!colour || !!((colour = Str(colour)).indexOf(\"-\") + 1)) {\n        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n    }\n    if (colour == \"none\") {\n        return {r: -1, g: -1, b: -1, hex: \"none\", toString: rgbtoString};\n    }\n    !(hsrg[has](colour.toLowerCase().substring(0, 2)) || colour.charAt() == \"#\") && (colour = toHex(colour));\n    if (!colour) {\n        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n    }\n    var res,\n        red,\n        green,\n        blue,\n        opacity,\n        t,\n        values,\n        rgb = colour.match(colourRegExp);\n    if (rgb) {\n        if (rgb[2]) {\n            blue = toInt(rgb[2].substring(5), 16);\n            green = toInt(rgb[2].substring(3, 5), 16);\n            red = toInt(rgb[2].substring(1, 3), 16);\n        }\n        if (rgb[3]) {\n            blue = toInt((t = rgb[3].charAt(3)) + t, 16);\n            green = toInt((t = rgb[3].charAt(2)) + t, 16);\n            red = toInt((t = rgb[3].charAt(1)) + t, 16);\n        }\n        if (rgb[4]) {\n            values = rgb[4].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red *= 2.55);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green *= 2.55);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue *= 2.55);\n            rgb[1].toLowerCase().slice(0, 4) == \"rgba\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n        }\n        if (rgb[5]) {\n            values = rgb[5].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red /= 100);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green /= 100);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue /= 100);\n            (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n            rgb[1].toLowerCase().slice(0, 4) == \"hsba\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n            return Snap.hsb2rgb(red, green, blue, opacity);\n        }\n        if (rgb[6]) {\n            values = rgb[6].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red /= 100);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green /= 100);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue /= 100);\n            (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n            rgb[1].toLowerCase().slice(0, 4) == \"hsla\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n            return Snap.hsl2rgb(red, green, blue, opacity);\n        }\n        red = mmin(math.round(red), 255);\n        green = mmin(math.round(green), 255);\n        blue = mmin(math.round(blue), 255);\n        opacity = mmin(mmax(opacity, 0), 1);\n        rgb = {r: red, g: green, b: blue, toString: rgbtoString};\n        rgb.hex = \"#\" + (16777216 | blue | green << 8 | red << 16).toString(16).slice(1);\n        rgb.opacity = is(opacity, \"finite\") ? opacity : 1;\n        return rgb;\n    }\n    return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n}, Snap);\n/*\\\n * Snap.hsb\n [ method ]\n **\n * Converts HSB values to a hex representation of the color\n - h (number) hue\n - s (number) saturation\n - b (number) value or brightness\n = (string) hex representation of the color\n\\*/\nSnap.hsb = cacher(function (h, s, b) {\n    return Snap.hsb2rgb(h, s, b).hex;\n});\n/*\\\n * Snap.hsl\n [ method ]\n **\n * Converts HSL values to a hex representation of the color\n - h (number) hue\n - s (number) saturation\n - l (number) luminosity\n = (string) hex representation of the color\n\\*/\nSnap.hsl = cacher(function (h, s, l) {\n    return Snap.hsl2rgb(h, s, l).hex;\n});\n/*\\\n * Snap.rgb\n [ method ]\n **\n * Converts RGB values to a hex representation of the color\n - r (number) red\n - g (number) green\n - b (number) blue\n = (string) hex representation of the color\n\\*/\nSnap.rgb = cacher(function (r, g, b, o) {\n    if (is(o, \"finite\")) {\n        var round = math.round;\n        return \"rgba(\" + [round(r), round(g), round(b), +o.toFixed(2)] + \")\";\n    }\n    return \"#\" + (16777216 | b | g << 8 | r << 16).toString(16).slice(1);\n});\nvar toHex = function (color) {\n    var i = glob.doc.getElementsByTagName(\"head\")[0] || glob.doc.getElementsByTagName(\"svg\")[0],\n        red = \"rgb(255, 0, 0)\";\n    toHex = cacher(function (color) {\n        if (color.toLowerCase() == \"red\") {\n            return red;\n        }\n        i.style.color = red;\n        i.style.color = color;\n        var out = glob.doc.defaultView.getComputedStyle(i, E).getPropertyValue(\"color\");\n        return out == red ? null : out;\n    });\n    return toHex(color);\n},\nhsbtoString = function () {\n    return \"hsb(\" + [this.h, this.s, this.b] + \")\";\n},\nhsltoString = function () {\n    return \"hsl(\" + [this.h, this.s, this.l] + \")\";\n},\nrgbtoString = function () {\n    return this.opacity == 1 || this.opacity == null ?\n            this.hex :\n            \"rgba(\" + [this.r, this.g, this.b, this.opacity] + \")\";\n},\nprepareRGB = function (r, g, b) {\n    if (g == null && is(r, \"object\") && \"r\" in r && \"g\" in r && \"b\" in r) {\n        b = r.b;\n        g = r.g;\n        r = r.r;\n    }\n    if (g == null && is(r, string)) {\n        var clr = Snap.getRGB(r);\n        r = clr.r;\n        g = clr.g;\n        b = clr.b;\n    }\n    if (r > 1 || g > 1 || b > 1) {\n        r /= 255;\n        g /= 255;\n        b /= 255;\n    }\n\n    return [r, g, b];\n},\npackageRGB = function (r, g, b, o) {\n    r = math.round(r * 255);\n    g = math.round(g * 255);\n    b = math.round(b * 255);\n    var rgb = {\n        r: r,\n        g: g,\n        b: b,\n        opacity: is(o, \"finite\") ? o : 1,\n        hex: Snap.rgb(r, g, b),\n        toString: rgbtoString\n    };\n    is(o, \"finite\") && (rgb.opacity = o);\n    return rgb;\n};\n/*\\\n * Snap.color\n [ method ]\n **\n * Parses the color string and returns an object featuring the color's component values\n - clr (string) color string in one of the supported formats (see @Snap.getRGB)\n = (object) Combined RGB/HSB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••,\n o     error (boolean) `true` if string can't be parsed,\n o     h (number) hue,\n o     s (number) saturation,\n o     v (number) value (brightness),\n o     l (number) lightness\n o }\n\\*/\nSnap.color = function (clr) {\n    var rgb;\n    if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"b\" in clr) {\n        rgb = Snap.hsb2rgb(clr);\n        clr.r = rgb.r;\n        clr.g = rgb.g;\n        clr.b = rgb.b;\n        clr.opacity = 1;\n        clr.hex = rgb.hex;\n    } else if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"l\" in clr) {\n        rgb = Snap.hsl2rgb(clr);\n        clr.r = rgb.r;\n        clr.g = rgb.g;\n        clr.b = rgb.b;\n        clr.opacity = 1;\n        clr.hex = rgb.hex;\n    } else {\n        if (is(clr, \"string\")) {\n            clr = Snap.getRGB(clr);\n        }\n        if (is(clr, \"object\") && \"r\" in clr && \"g\" in clr && \"b\" in clr && !(\"error\" in clr)) {\n            rgb = Snap.rgb2hsl(clr);\n            clr.h = rgb.h;\n            clr.s = rgb.s;\n            clr.l = rgb.l;\n            rgb = Snap.rgb2hsb(clr);\n            clr.v = rgb.b;\n        } else {\n            clr = {hex: \"none\"};\n            clr.r = clr.g = clr.b = clr.h = clr.s = clr.v = clr.l = -1;\n            clr.error = 1;\n        }\n    }\n    clr.toString = rgbtoString;\n    return clr;\n};\n/*\\\n * Snap.hsb2rgb\n [ method ]\n **\n * Converts HSB values to an RGB object\n - h (number) hue\n - s (number) saturation\n - v (number) value or brightness\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••\n o }\n\\*/\nSnap.hsb2rgb = function (h, s, v, o) {\n    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"b\" in h) {\n        v = h.b;\n        s = h.s;\n        o = h.o;\n        h = h.h;\n    }\n    h *= 360;\n    var R, G, B, X, C;\n    h = h % 360 / 60;\n    C = v * s;\n    X = C * (1 - abs(h % 2 - 1));\n    R = G = B = v - C;\n\n    h = ~~h;\n    R += [C, X, 0, 0, X, C][h];\n    G += [X, C, C, X, 0, 0][h];\n    B += [0, 0, X, C, C, X][h];\n    return packageRGB(R, G, B, o);\n};\n/*\\\n * Snap.hsl2rgb\n [ method ]\n **\n * Converts HSL values to an RGB object\n - h (number) hue\n - s (number) saturation\n - l (number) luminosity\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••\n o }\n\\*/\nSnap.hsl2rgb = function (h, s, l, o) {\n    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"l\" in h) {\n        l = h.l;\n        s = h.s;\n        h = h.h;\n    }\n    if (h > 1 || s > 1 || l > 1) {\n        h /= 360;\n        s /= 100;\n        l /= 100;\n    }\n    h *= 360;\n    var R, G, B, X, C;\n    h = h % 360 / 60;\n    C = 2 * s * (l < .5 ? l : 1 - l);\n    X = C * (1 - abs(h % 2 - 1));\n    R = G = B = l - C / 2;\n\n    h = ~~h;\n    R += [C, X, 0, 0, X, C][h];\n    G += [X, C, C, X, 0, 0][h];\n    B += [0, 0, X, C, C, X][h];\n    return packageRGB(R, G, B, o);\n};\n/*\\\n * Snap.rgb2hsb\n [ method ]\n **\n * Converts RGB values to an HSB object\n - r (number) red\n - g (number) green\n - b (number) blue\n = (object) HSB object in the following format:\n o {\n o     h (number) hue,\n o     s (number) saturation,\n o     b (number) brightness\n o }\n\\*/\nSnap.rgb2hsb = function (r, g, b) {\n    b = prepareRGB(r, g, b);\n    r = b[0];\n    g = b[1];\n    b = b[2];\n\n    var H, S, V, C;\n    V = mmax(r, g, b);\n    C = V - mmin(r, g, b);\n    H = C == 0 ? null :\n        V == r ? (g - b) / C :\n        V == g ? (b - r) / C + 2 :\n                 (r - g) / C + 4;\n    H = (H + 360) % 6 * 60 / 360;\n    S = C == 0 ? 0 : C / V;\n    return {h: H, s: S, b: V, toString: hsbtoString};\n};\n/*\\\n * Snap.rgb2hsl\n [ method ]\n **\n * Converts RGB values to an HSL object\n - r (number) red\n - g (number) green\n - b (number) blue\n = (object) HSL object in the following format:\n o {\n o     h (number) hue,\n o     s (number) saturation,\n o     l (number) luminosity\n o }\n\\*/\nSnap.rgb2hsl = function (r, g, b) {\n    b = prepareRGB(r, g, b);\n    r = b[0];\n    g = b[1];\n    b = b[2];\n\n    var H, S, L, M, m, C;\n    M = mmax(r, g, b);\n    m = mmin(r, g, b);\n    C = M - m;\n    H = C == 0 ? null :\n        M == r ? (g - b) / C :\n        M == g ? (b - r) / C + 2 :\n                 (r - g) / C + 4;\n    H = (H + 360) % 6 * 60 / 360;\n    L = (M + m) / 2;\n    S = C == 0 ? 0 :\n         L < .5 ? C / (2 * L) :\n                  C / (2 - 2 * L);\n    return {h: H, s: S, l: L, toString: hsltoString};\n};\n\n// Transformations\n/*\\\n * Snap.parsePathString\n [ method ]\n **\n * Utility method\n **\n * Parses given path string into an array of arrays of path segments\n - pathString (string|array) path string or array of segments (in the last case it is returned straight away)\n = (array) array of segments\n\\*/\nSnap.parsePathString = function (pathString) {\n    if (!pathString) {\n        return null;\n    }\n    var pth = Snap.path(pathString);\n    if (pth.arr) {\n        return Snap.path.clone(pth.arr);\n    }\n\n    var paramCounts = {a: 7, c: 6, o: 2, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, u: 3, z: 0},\n        data = [];\n    if (is(pathString, \"array\") && is(pathString[0], \"array\")) { // rough assumption\n        data = Snap.path.clone(pathString);\n    }\n    if (!data.length) {\n        Str(pathString).replace(pathCommand, function (a, b, c) {\n            var params = [],\n                name = b.toLowerCase();\n            c.replace(pathValues, function (a, b) {\n                b && params.push(+b);\n            });\n            if (name == \"m\" && params.length > 2) {\n                data.push([b].concat(params.splice(0, 2)));\n                name = \"l\";\n                b = b == \"m\" ? \"l\" : \"L\";\n            }\n            if (name == \"o\" && params.length == 1) {\n                data.push([b, params[0]]);\n            }\n            if (name == \"r\") {\n                data.push([b].concat(params));\n            } else while (params.length >= paramCounts[name]) {\n                data.push([b].concat(params.splice(0, paramCounts[name])));\n                if (!paramCounts[name]) {\n                    break;\n                }\n            }\n        });\n    }\n    data.toString = Snap.path.toString;\n    pth.arr = Snap.path.clone(data);\n    return data;\n};\n/*\\\n * Snap.parseTransformString\n [ method ]\n **\n * Utility method\n **\n * Parses given transform string into an array of transformations\n - TString (string|array) transform string or array of transformations (in the last case it is returned straight away)\n = (array) array of transformations\n\\*/\nvar parseTransformString = Snap.parseTransformString = function (TString) {\n    if (!TString) {\n        return null;\n    }\n    var paramCounts = {r: 3, s: 4, t: 2, m: 6},\n        data = [];\n    if (is(TString, \"array\") && is(TString[0], \"array\")) { // rough assumption\n        data = Snap.path.clone(TString);\n    }\n    if (!data.length) {\n        Str(TString).replace(tCommand, function (a, b, c) {\n            var params = [],\n                name = b.toLowerCase();\n            c.replace(pathValues, function (a, b) {\n                b && params.push(+b);\n            });\n            data.push([b].concat(params));\n        });\n    }\n    data.toString = Snap.path.toString;\n    return data;\n};\nfunction svgTransform2string(tstr) {\n    var res = [];\n    tstr = tstr.replace(/(?:^|\\s)(\\w+)\\(([^)]+)\\)/g, function (all, name, params) {\n        params = params.split(/\\s*,\\s*|\\s+/);\n        if (name == \"rotate\" && params.length == 1) {\n            params.push(0, 0);\n        }\n        if (name == \"scale\") {\n            if (params.length > 2) {\n                params = params.slice(0, 2);\n            } else if (params.length == 2) {\n                params.push(0, 0);\n            }\n            if (params.length == 1) {\n                params.push(params[0], 0, 0);\n            }\n        }\n        if (name == \"skewX\") {\n            res.push([\"m\", 1, 0, math.tan(rad(params[0])), 1, 0, 0]);\n        } else if (name == \"skewY\") {\n            res.push([\"m\", 1, math.tan(rad(params[0])), 0, 1, 0, 0]);\n        } else {\n            res.push([name.charAt(0)].concat(params));\n        }\n        return all;\n    });\n    return res;\n}\nSnap._.svgTransform2string = svgTransform2string;\nSnap._.rgTransform = /^[a-z][\\s]*-?\\.?\\d/i;\nfunction transform2matrix(tstr, bbox) {\n    var tdata = parseTransformString(tstr),\n        m = new Snap.Matrix;\n    if (tdata) {\n        for (var i = 0, ii = tdata.length; i < ii; i++) {\n            var t = tdata[i],\n                tlen = t.length,\n                command = Str(t[0]).toLowerCase(),\n                absolute = t[0] != command,\n                inver = absolute ? m.invert() : 0,\n                x1,\n                y1,\n                x2,\n                y2,\n                bb;\n            if (command == \"t\" && tlen == 2){\n                m.translate(t[1], 0);\n            } else if (command == \"t\" && tlen == 3) {\n                if (absolute) {\n                    x1 = inver.x(0, 0);\n                    y1 = inver.y(0, 0);\n                    x2 = inver.x(t[1], t[2]);\n                    y2 = inver.y(t[1], t[2]);\n                    m.translate(x2 - x1, y2 - y1);\n                } else {\n                    m.translate(t[1], t[2]);\n                }\n            } else if (command == \"r\") {\n                if (tlen == 2) {\n                    bb = bb || bbox;\n                    m.rotate(t[1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n                } else if (tlen == 4) {\n                    if (absolute) {\n                        x2 = inver.x(t[2], t[3]);\n                        y2 = inver.y(t[2], t[3]);\n                        m.rotate(t[1], x2, y2);\n                    } else {\n                        m.rotate(t[1], t[2], t[3]);\n                    }\n                }\n            } else if (command == \"s\") {\n                if (tlen == 2 || tlen == 3) {\n                    bb = bb || bbox;\n                    m.scale(t[1], t[tlen - 1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n                } else if (tlen == 4) {\n                    if (absolute) {\n                        x2 = inver.x(t[2], t[3]);\n                        y2 = inver.y(t[2], t[3]);\n                        m.scale(t[1], t[1], x2, y2);\n                    } else {\n                        m.scale(t[1], t[1], t[2], t[3]);\n                    }\n                } else if (tlen == 5) {\n                    if (absolute) {\n                        x2 = inver.x(t[3], t[4]);\n                        y2 = inver.y(t[3], t[4]);\n                        m.scale(t[1], t[2], x2, y2);\n                    } else {\n                        m.scale(t[1], t[2], t[3], t[4]);\n                    }\n                }\n            } else if (command == \"m\" && tlen == 7) {\n                m.add(t[1], t[2], t[3], t[4], t[5], t[6]);\n            }\n        }\n    }\n    return m;\n}\nSnap._.transform2matrix = transform2matrix;\nSnap._unit2px = unit2px;\nvar contains = glob.doc.contains || glob.doc.compareDocumentPosition ?\n    function (a, b) {\n        var adown = a.nodeType == 9 ? a.documentElement : a,\n            bup = b && b.parentNode;\n            return a == bup || !!(bup && bup.nodeType == 1 && (\n                adown.contains ?\n                    adown.contains(bup) :\n                    a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16\n            ));\n    } :\n    function (a, b) {\n        if (b) {\n            while (b) {\n                b = b.parentNode;\n                if (b == a) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\nfunction getSomeDefs(el) {\n    var p = el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) ||\n            el.node.parentNode && wrap(el.node.parentNode) ||\n            Snap.select(\"svg\") ||\n            Snap(0, 0),\n        pdefs = p.select(\"defs\"),\n        defs  = pdefs == null ? false : pdefs.node;\n    if (!defs) {\n        defs = make(\"defs\", p.node).node;\n    }\n    return defs;\n}\nfunction getSomeSVG(el) {\n    return el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) || Snap.select(\"svg\");\n}\nSnap._.getSomeDefs = getSomeDefs;\nSnap._.getSomeSVG = getSomeSVG;\nfunction unit2px(el, name, value) {\n    var svg = getSomeSVG(el).node,\n        out = {},\n        mgr = svg.querySelector(\".svg---mgr\");\n    if (!mgr) {\n        mgr = $(\"rect\");\n        $(mgr, {x: -9e9, y: -9e9, width: 10, height: 10, \"class\": \"svg---mgr\", fill: \"none\"});\n        svg.appendChild(mgr);\n    }\n    function getW(val) {\n        if (val == null) {\n            return E;\n        }\n        if (val == +val) {\n            return val;\n        }\n        $(mgr, {width: val});\n        try {\n            return mgr.getBBox().width;\n        } catch (e) {\n            return 0;\n        }\n    }\n    function getH(val) {\n        if (val == null) {\n            return E;\n        }\n        if (val == +val) {\n            return val;\n        }\n        $(mgr, {height: val});\n        try {\n            return mgr.getBBox().height;\n        } catch (e) {\n            return 0;\n        }\n    }\n    function set(nam, f) {\n        if (name == null) {\n            out[nam] = f(el.attr(nam) || 0);\n        } else if (nam == name) {\n            out = f(value == null ? el.attr(nam) || 0 : value);\n        }\n    }\n    switch (el.type) {\n        case \"rect\":\n            set(\"rx\", getW);\n            set(\"ry\", getH);\n        case \"image\":\n            set(\"width\", getW);\n            set(\"height\", getH);\n        case \"text\":\n            set(\"x\", getW);\n            set(\"y\", getH);\n        break;\n        case \"circle\":\n            set(\"cx\", getW);\n            set(\"cy\", getH);\n            set(\"r\", getW);\n        break;\n        case \"ellipse\":\n            set(\"cx\", getW);\n            set(\"cy\", getH);\n            set(\"rx\", getW);\n            set(\"ry\", getH);\n        break;\n        case \"line\":\n            set(\"x1\", getW);\n            set(\"x2\", getW);\n            set(\"y1\", getH);\n            set(\"y2\", getH);\n        break;\n        case \"marker\":\n            set(\"refX\", getW);\n            set(\"markerWidth\", getW);\n            set(\"refY\", getH);\n            set(\"markerHeight\", getH);\n        break;\n        case \"radialGradient\":\n            set(\"fx\", getW);\n            set(\"fy\", getH);\n        break;\n        case \"tspan\":\n            set(\"dx\", getW);\n            set(\"dy\", getH);\n        break;\n        default:\n            set(name, getW);\n    }\n    svg.removeChild(mgr);\n    return out;\n}\n/*\\\n * Snap.select\n [ method ]\n **\n * Wraps a DOM element specified by CSS selector as @Element\n - query (string) CSS selector of the element\n = (Element) the current element\n\\*/\nSnap.select = function (query) {\n    query = Str(query).replace(/([^\\\\]):/g, \"$1\\\\:\");\n    return wrap(glob.doc.querySelector(query));\n};\n/*\\\n * Snap.selectAll\n [ method ]\n **\n * Wraps DOM elements specified by CSS selector as set or array of @Element\n - query (string) CSS selector of the element\n = (Element) the current element\n\\*/\nSnap.selectAll = function (query) {\n    var nodelist = glob.doc.querySelectorAll(query),\n        set = (Snap.set || Array)();\n    for (var i = 0; i < nodelist.length; i++) {\n        set.push(wrap(nodelist[i]));\n    }\n    return set;\n};\n\nfunction add2group(list) {\n    if (!is(list, \"array\")) {\n        list = Array.prototype.slice.call(arguments, 0);\n    }\n    var i = 0,\n        j = 0,\n        node = this.node;\n    while (this[i]) delete this[i++];\n    for (i = 0; i < list.length; i++) {\n        if (list[i].type == \"set\") {\n            list[i].forEach(function (el) {\n                node.appendChild(el.node);\n            });\n        } else {\n            node.appendChild(list[i].node);\n        }\n    }\n    var children = node.childNodes;\n    for (i = 0; i < children.length; i++) {\n        this[j++] = wrap(children[i]);\n    }\n    return this;\n}\n// Hub garbage collector every 10s\nsetInterval(function () {\n    for (var key in hub) if (hub[has](key)) {\n        var el = hub[key],\n            node = el.node;\n        if (el.type != \"svg\" && !node.ownerSVGElement || el.type == \"svg\" && (!node.parentNode || \"ownerSVGElement\" in node.parentNode && !node.ownerSVGElement)) {\n            delete hub[key];\n        }\n    }\n}, 1e4);\nfunction Element(el) {\n    if (el.snap in hub) {\n        return hub[el.snap];\n    }\n    var svg;\n    try {\n        svg = el.ownerSVGElement;\n    } catch(e) {}\n    /*\\\n     * Element.node\n     [ property (object) ]\n     **\n     * Gives you a reference to the DOM object, so you can assign event handlers or just mess around.\n     > Usage\n     | // draw a circle at coordinate 10,10 with radius of 10\n     | var c = paper.circle(10, 10, 10);\n     | c.node.onclick = function () {\n     |     c.attr(\"fill\", \"red\");\n     | };\n    \\*/\n    this.node = el;\n    if (svg) {\n        this.paper = new Paper(svg);\n    }\n    /*\\\n     * Element.type\n     [ property (string) ]\n     **\n     * SVG tag name of the given element.\n    \\*/\n    this.type = el.tagName || el.nodeName;\n    var id = this.id = ID(this);\n    this.anims = {};\n    this._ = {\n        transform: []\n    };\n    el.snap = id;\n    hub[id] = this;\n    if (this.type == \"g\") {\n        this.add = add2group;\n    }\n    if (this.type in {g: 1, mask: 1, pattern: 1, symbol: 1}) {\n        for (var method in Paper.prototype) if (Paper.prototype[has](method)) {\n            this[method] = Paper.prototype[method];\n        }\n    }\n}\n   /*\\\n     * Element.attr\n     [ method ]\n     **\n     * Gets or sets given attributes of the element.\n     **\n     - params (object) contains key-value pairs of attributes you want to set\n     * or\n     - param (string) name of the attribute\n     = (Element) the current element\n     * or\n     = (string) value of attribute\n     > Usage\n     | el.attr({\n     |     fill: \"#fc0\",\n     |     stroke: \"#000\",\n     |     strokeWidth: 2, // CamelCase...\n     |     \"fill-opacity\": 0.5, // or dash-separated names\n     |     width: \"*=2\" // prefixed values\n     | });\n     | console.log(el.attr(\"fill\")); // #fc0\n     * Prefixed values in format `\"+=10\"` supported. All four operations\n     * (`+`, `-`, `*` and `/`) could be used. Optionally you can use units for `+`\n     * and `-`: `\"+=2em\"`.\n    \\*/\n    Element.prototype.attr = function (params, value) {\n        var el = this,\n            node = el.node;\n        if (!params) {\n            if (node.nodeType != 1) {\n                return {\n                    text: node.nodeValue\n                };\n            }\n            var attr = node.attributes,\n                out = {};\n            for (var i = 0, ii = attr.length; i < ii; i++) {\n                out[attr[i].nodeName] = attr[i].nodeValue;\n            }\n            return out;\n        }\n        if (is(params, \"string\")) {\n            if (arguments.length > 1) {\n                var json = {};\n                json[params] = value;\n                params = json;\n            } else {\n                return eve(\"snap.util.getattr.\" + params, el).firstDefined();\n            }\n        }\n        for (var att in params) {\n            if (params[has](att)) {\n                eve(\"snap.util.attr.\" + att, el, params[att]);\n            }\n        }\n        return el;\n    };\n/*\\\n * Snap.parse\n [ method ]\n **\n * Parses SVG fragment and converts it into a @Fragment\n **\n - svg (string) SVG string\n = (Fragment) the @Fragment\n\\*/\nSnap.parse = function (svg) {\n    var f = glob.doc.createDocumentFragment(),\n        full = true,\n        div = glob.doc.createElement(\"div\");\n    svg = Str(svg);\n    if (!svg.match(/^\\s*<\\s*svg(?:\\s|>)/)) {\n        svg = \"<svg>\" + svg + \"</svg>\";\n        full = false;\n    }\n    div.innerHTML = svg;\n    svg = div.getElementsByTagName(\"svg\")[0];\n    if (svg) {\n        if (full) {\n            f = svg;\n        } else {\n            while (svg.firstChild) {\n                f.appendChild(svg.firstChild);\n            }\n        }\n    }\n    return new Fragment(f);\n};\nfunction Fragment(frag) {\n    this.node = frag;\n}\n/*\\\n * Snap.fragment\n [ method ]\n **\n * Creates a DOM fragment from a given list of elements or strings\n **\n - varargs (…) SVG string\n = (Fragment) the @Fragment\n\\*/\nSnap.fragment = function () {\n    var args = Array.prototype.slice.call(arguments, 0),\n        f = glob.doc.createDocumentFragment();\n    for (var i = 0, ii = args.length; i < ii; i++) {\n        var item = args[i];\n        if (item.node && item.node.nodeType) {\n            f.appendChild(item.node);\n        }\n        if (item.nodeType) {\n            f.appendChild(item);\n        }\n        if (typeof item == \"string\") {\n            f.appendChild(Snap.parse(item).node);\n        }\n    }\n    return new Fragment(f);\n};\n\nfunction make(name, parent) {\n    var res = $(name);\n    parent.appendChild(res);\n    var el = wrap(res);\n    return el;\n}\nfunction Paper(w, h) {\n    var res,\n        desc,\n        defs,\n        proto = Paper.prototype;\n    if (w && w.tagName && w.tagName.toLowerCase() == \"svg\") {\n        if (w.snap in hub) {\n            return hub[w.snap];\n        }\n        var doc = w.ownerDocument;\n        res = new Element(w);\n        desc = w.getElementsByTagName(\"desc\")[0];\n        defs = w.getElementsByTagName(\"defs\")[0];\n        if (!desc) {\n            desc = $(\"desc\");\n            desc.appendChild(doc.createTextNode(\"Created with Snap\"));\n            res.node.appendChild(desc);\n        }\n        if (!defs) {\n            defs = $(\"defs\");\n            res.node.appendChild(defs);\n        }\n        res.defs = defs;\n        for (var key in proto) if (proto[has](key)) {\n            res[key] = proto[key];\n        }\n        res.paper = res.root = res;\n    } else {\n        res = make(\"svg\", glob.doc.body);\n        $(res.node, {\n            height: h,\n            version: 1.1,\n            width: w,\n            xmlns: xmlns\n        });\n    }\n    return res;\n}\nfunction wrap(dom) {\n    if (!dom) {\n        return dom;\n    }\n    if (dom instanceof Element || dom instanceof Fragment) {\n        return dom;\n    }\n    if (dom.tagName && dom.tagName.toLowerCase() == \"svg\") {\n        return new Paper(dom);\n    }\n    if (dom.tagName && dom.tagName.toLowerCase() == \"object\" && dom.type == \"image/svg+xml\") {\n        return new Paper(dom.contentDocument.getElementsByTagName(\"svg\")[0]);\n    }\n    return new Element(dom);\n}\n\nSnap._.make = make;\nSnap._.wrap = wrap;\n/*\\\n * Paper.el\n [ method ]\n **\n * Creates an element on paper with a given name and no attributes\n **\n - name (string) tag name\n - attr (object) attributes\n = (Element) the current element\n > Usage\n | var c = paper.circle(10, 10, 10); // is the same as...\n | var c = paper.el(\"circle\").attr({\n |     cx: 10,\n |     cy: 10,\n |     r: 10\n | });\n | // and the same as\n | var c = paper.el(\"circle\", {\n |     cx: 10,\n |     cy: 10,\n |     r: 10\n | });\n\\*/\nPaper.prototype.el = function (name, attr) {\n    var el = make(name, this.node);\n    attr && el.attr(attr);\n    return el;\n};\n/*\\\n * Element.children\n [ method ]\n **\n * Returns array of all the children of the element.\n = (array) array of Elements\n\\*/\nElement.prototype.children = function () {\n    var out = [],\n        ch = this.node.childNodes;\n    for (var i = 0, ii = ch.length; i < ii; i++) {\n        out[i] = Snap(ch[i]);\n    }\n    return out;\n};\nfunction jsonFiller(root, o) {\n    for (var i = 0, ii = root.length; i < ii; i++) {\n        var item = {\n                type: root[i].type,\n                attr: root[i].attr()\n            },\n            children = root[i].children();\n        o.push(item);\n        if (children.length) {\n            jsonFiller(children, item.childNodes = []);\n        }\n    }\n}\n/*\\\n * Element.toJSON\n [ method ]\n **\n * Returns object representation of the given element and all its children.\n = (object) in format\n o {\n o     type (string) this.type,\n o     attr (object) attributes map,\n o     childNodes (array) optional array of children in the same format\n o }\n\\*/\nElement.prototype.toJSON = function () {\n    var out = [];\n    jsonFiller([this], out);\n    return out[0];\n};\n// default\neve.on(\"snap.util.getattr\", function () {\n    var att = eve.nt();\n    att = att.substring(att.lastIndexOf(\".\") + 1);\n    var css = att.replace(/[A-Z]/g, function (letter) {\n        return \"-\" + letter.toLowerCase();\n    });\n    if (cssAttr[has](css)) {\n        return this.node.ownerDocument.defaultView.getComputedStyle(this.node, null).getPropertyValue(css);\n    } else {\n        return $(this.node, att);\n    }\n});\nvar cssAttr = {\n    \"alignment-baseline\": 0,\n    \"baseline-shift\": 0,\n    \"clip\": 0,\n    \"clip-path\": 0,\n    \"clip-rule\": 0,\n    \"color\": 0,\n    \"color-interpolation\": 0,\n    \"color-interpolation-filters\": 0,\n    \"color-profile\": 0,\n    \"color-rendering\": 0,\n    \"cursor\": 0,\n    \"direction\": 0,\n    \"display\": 0,\n    \"dominant-baseline\": 0,\n    \"enable-background\": 0,\n    \"fill\": 0,\n    \"fill-opacity\": 0,\n    \"fill-rule\": 0,\n    \"filter\": 0,\n    \"flood-color\": 0,\n    \"flood-opacity\": 0,\n    \"font\": 0,\n    \"font-family\": 0,\n    \"font-size\": 0,\n    \"font-size-adjust\": 0,\n    \"font-stretch\": 0,\n    \"font-style\": 0,\n    \"font-variant\": 0,\n    \"font-weight\": 0,\n    \"glyph-orientation-horizontal\": 0,\n    \"glyph-orientation-vertical\": 0,\n    \"image-rendering\": 0,\n    \"kerning\": 0,\n    \"letter-spacing\": 0,\n    \"lighting-color\": 0,\n    \"marker\": 0,\n    \"marker-end\": 0,\n    \"marker-mid\": 0,\n    \"marker-start\": 0,\n    \"mask\": 0,\n    \"opacity\": 0,\n    \"overflow\": 0,\n    \"pointer-events\": 0,\n    \"shape-rendering\": 0,\n    \"stop-color\": 0,\n    \"stop-opacity\": 0,\n    \"stroke\": 0,\n    \"stroke-dasharray\": 0,\n    \"stroke-dashoffset\": 0,\n    \"stroke-linecap\": 0,\n    \"stroke-linejoin\": 0,\n    \"stroke-miterlimit\": 0,\n    \"stroke-opacity\": 0,\n    \"stroke-width\": 0,\n    \"text-anchor\": 0,\n    \"text-decoration\": 0,\n    \"text-rendering\": 0,\n    \"unicode-bidi\": 0,\n    \"visibility\": 0,\n    \"word-spacing\": 0,\n    \"writing-mode\": 0\n};\n\neve.on(\"snap.util.attr\", function (value) {\n    var att = eve.nt(),\n        attr = {};\n    att = att.substring(att.lastIndexOf(\".\") + 1);\n    attr[att] = value;\n    var style = att.replace(/-(\\w)/gi, function (all, letter) {\n            return letter.toUpperCase();\n        }),\n        css = att.replace(/[A-Z]/g, function (letter) {\n            return \"-\" + letter.toLowerCase();\n        });\n    if (cssAttr[has](css)) {\n        this.node.style[style] = value == null ? E : value;\n    } else {\n        $(this.node, attr);\n    }\n});\n(function (proto) {}(Paper.prototype));\n\n// simple ajax\n/*\\\n * Snap.ajax\n [ method ]\n **\n * Simple implementation of Ajax\n **\n - url (string) URL\n - postData (object|string) data for post request\n - callback (function) callback\n - scope (object) #optional scope of callback\n * or\n - url (string) URL\n - callback (function) callback\n - scope (object) #optional scope of callback\n = (XMLHttpRequest) the XMLHttpRequest object, just in case\n\\*/\nSnap.ajax = function (url, postData, callback, scope){\n    var req = new XMLHttpRequest,\n        id = ID();\n    if (req) {\n        if (is(postData, \"function\")) {\n            scope = callback;\n            callback = postData;\n            postData = null;\n        } else if (is(postData, \"object\")) {\n            var pd = [];\n            for (var key in postData) if (postData.hasOwnProperty(key)) {\n                pd.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(postData[key]));\n            }\n            postData = pd.join(\"&\");\n        }\n        req.open(postData ? \"POST\" : \"GET\", url, true);\n        if (postData) {\n            req.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n            req.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n        }\n        if (callback) {\n            eve.once(\"snap.ajax.\" + id + \".0\", callback);\n            eve.once(\"snap.ajax.\" + id + \".200\", callback);\n            eve.once(\"snap.ajax.\" + id + \".304\", callback);\n        }\n        req.onreadystatechange = function() {\n            if (req.readyState != 4) return;\n            eve(\"snap.ajax.\" + id + \".\" + req.status, scope, req);\n        };\n        if (req.readyState == 4) {\n            return req;\n        }\n        req.send(postData);\n        return req;\n    }\n};\n/*\\\n * Snap.load\n [ method ]\n **\n * Loads external SVG file as a @Fragment (see @Snap.ajax for more advanced AJAX)\n **\n - url (string) URL\n - callback (function) callback\n - scope (object) #optional scope of callback\n\\*/\nSnap.load = function (url, callback, scope) {\n    Snap.ajax(url, function (req) {\n        var f = Snap.parse(req.responseText);\n        scope ? callback.call(scope, f) : callback(f);\n    });\n};\nvar getOffset = function (elem) {\n    var box = elem.getBoundingClientRect(),\n        doc = elem.ownerDocument,\n        body = doc.body,\n        docElem = doc.documentElement,\n        clientTop = docElem.clientTop || body.clientTop || 0, clientLeft = docElem.clientLeft || body.clientLeft || 0,\n        top  = box.top  + (g.win.pageYOffset || docElem.scrollTop || body.scrollTop ) - clientTop,\n        left = box.left + (g.win.pageXOffset || docElem.scrollLeft || body.scrollLeft) - clientLeft;\n    return {\n        y: top,\n        x: left\n    };\n};\n/*\\\n * Snap.getElementByPoint\n [ method ]\n **\n * Returns you topmost element under given point.\n **\n = (object) Snap element object\n - x (number) x coordinate from the top left corner of the window\n - y (number) y coordinate from the top left corner of the window\n > Usage\n | Snap.getElementByPoint(mouseX, mouseY).attr({stroke: \"#f00\"});\n\\*/\nSnap.getElementByPoint = function (x, y) {\n    var paper = this,\n        svg = paper.canvas,\n        target = glob.doc.elementFromPoint(x, y);\n    if (glob.win.opera && target.tagName == \"svg\") {\n        var so = getOffset(target),\n            sr = target.createSVGRect();\n        sr.x = x - so.x;\n        sr.y = y - so.y;\n        sr.width = sr.height = 1;\n        var hits = target.getIntersectionList(sr, null);\n        if (hits.length) {\n            target = hits[hits.length - 1];\n        }\n    }\n    if (!target) {\n        return null;\n    }\n    return wrap(target);\n};\n/*\\\n * Snap.plugin\n [ method ]\n **\n * Let you write plugins. You pass in a function with five arguments, like this:\n | Snap.plugin(function (Snap, Element, Paper, global, Fragment) {\n |     Snap.newmethod = function () {};\n |     Element.prototype.newmethod = function () {};\n |     Paper.prototype.newmethod = function () {};\n | });\n * Inside the function you have access to all main objects (and their\n * prototypes). This allow you to extend anything you want.\n **\n - f (function) your plugin body\n\\*/\nSnap.plugin = function (f) {\n    f(Snap, Element, Paper, glob, Fragment);\n};\nglob.win.Snap = Snap;\nreturn Snap;\n}(window || this));\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        Str = String,\n        unit2px = Snap._unit2px,\n        $ = Snap._.$,\n        make = Snap._.make,\n        getSomeDefs = Snap._.getSomeDefs,\n        has = \"hasOwnProperty\",\n        wrap = Snap._.wrap;\n    /*\\\n     * Element.getBBox\n     [ method ]\n     **\n     * Returns the bounding box descriptor for the given element\n     **\n     = (object) bounding box descriptor:\n     o {\n     o     cx: (number) x of the center,\n     o     cy: (number) x of the center,\n     o     h: (number) height,\n     o     height: (number) height,\n     o     path: (string) path command for the box,\n     o     r0: (number) radius of a circle that fully encloses the box,\n     o     r1: (number) radius of the smallest circle that can be enclosed,\n     o     r2: (number) radius of the largest circle that can be enclosed,\n     o     vb: (string) box as a viewbox command,\n     o     w: (number) width,\n     o     width: (number) width,\n     o     x2: (number) x of the right side,\n     o     x: (number) x of the left side,\n     o     y2: (number) y of the bottom edge,\n     o     y: (number) y of the top edge\n     o }\n    \\*/\n    elproto.getBBox = function (isWithoutTransform) {\n        if (this.type == \"tspan\") {\n            return Snap._.box(this.node.getClientRects().item(0));\n        }\n        if (!Snap.Matrix || !Snap.path) {\n            return this.node.getBBox();\n        }\n        var el = this,\n            m = new Snap.Matrix;\n        if (el.removed) {\n            return Snap._.box();\n        }\n        while (el.type == \"use\") {\n            if (!isWithoutTransform) {\n                m = m.add(el.transform().localMatrix.translate(el.attr(\"x\") || 0, el.attr(\"y\") || 0));\n            }\n            if (el.original) {\n                el = el.original;\n            } else {\n                var href = el.attr(\"xlink:href\");\n                el = el.original = el.node.ownerDocument.getElementById(href.substring(href.indexOf(\"#\") + 1));\n            }\n        }\n        var _ = el._,\n            pathfinder = Snap.path.get[el.type] || Snap.path.get.deflt;\n        try {\n            if (isWithoutTransform) {\n                _.bboxwt = pathfinder ? Snap.path.getBBox(el.realPath = pathfinder(el)) : Snap._.box(el.node.getBBox());\n                return Snap._.box(_.bboxwt);\n            } else {\n                el.realPath = pathfinder(el);\n                el.matrix = el.transform().localMatrix;\n                _.bbox = Snap.path.getBBox(Snap.path.map(el.realPath, m.add(el.matrix)));\n                return Snap._.box(_.bbox);\n            }\n        } catch (e) {\n            // Firefox doesn’t give you bbox of hidden element\n            return Snap._.box();\n        }\n    };\n    var propString = function () {\n        return this.string;\n    };\n    function extractTransform(el, tstr) {\n        if (tstr == null) {\n            var doReturn = true;\n            if (el.type == \"linearGradient\" || el.type == \"radialGradient\") {\n                tstr = el.node.getAttribute(\"gradientTransform\");\n            } else if (el.type == \"pattern\") {\n                tstr = el.node.getAttribute(\"patternTransform\");\n            } else {\n                tstr = el.node.getAttribute(\"transform\");\n            }\n            if (!tstr) {\n                return new Snap.Matrix;\n            }\n            tstr = Snap._.svgTransform2string(tstr);\n        } else {\n            if (!Snap._.rgTransform.test(tstr)) {\n                tstr = Snap._.svgTransform2string(tstr);\n            } else {\n                tstr = Str(tstr).replace(/\\.{3}|\\u2026/g, el._.transform || \"\");\n            }\n            if (is(tstr, \"array\")) {\n                tstr = Snap.path ? Snap.path.toString.call(tstr) : Str(tstr);\n            }\n            el._.transform = tstr;\n        }\n        var m = Snap._.transform2matrix(tstr, el.getBBox(1));\n        if (doReturn) {\n            return m;\n        } else {\n            el.matrix = m;\n        }\n    }\n    /*\\\n     * Element.transform\n     [ method ]\n     **\n     * Gets or sets transformation of the element\n     **\n     - tstr (string) transform string in Snap or SVG format\n     = (Element) the current element\n     * or\n     = (object) transformation descriptor:\n     o {\n     o     string (string) transform string,\n     o     globalMatrix (Matrix) matrix of all transformations applied to element or its parents,\n     o     localMatrix (Matrix) matrix of transformations applied only to the element,\n     o     diffMatrix (Matrix) matrix of difference between global and local transformations,\n     o     global (string) global transformation as string,\n     o     local (string) local transformation as string,\n     o     toString (function) returns `string` property\n     o }\n    \\*/\n    elproto.transform = function (tstr) {\n        var _ = this._;\n        if (tstr == null) {\n            var papa = this,\n                global = new Snap.Matrix(this.node.getCTM()),\n                local = extractTransform(this),\n                ms = [local],\n                m = new Snap.Matrix,\n                i,\n                localString = local.toTransformString(),\n                string = Str(local) == Str(this.matrix) ?\n                            Str(_.transform) : localString;\n            while (papa.type != \"svg\" && (papa = papa.parent())) {\n                ms.push(extractTransform(papa));\n            }\n            i = ms.length;\n            while (i--) {\n                m.add(ms[i]);\n            }\n            return {\n                string: string,\n                globalMatrix: global,\n                totalMatrix: m,\n                localMatrix: local,\n                diffMatrix: global.clone().add(local.invert()),\n                global: global.toTransformString(),\n                total: m.toTransformString(),\n                local: localString,\n                toString: propString\n            };\n        }\n        if (tstr instanceof Snap.Matrix) {\n            this.matrix = tstr;\n            this._.transform = tstr.toTransformString();\n        } else {\n            extractTransform(this, tstr);\n        }\n\n        if (this.node) {\n            if (this.type == \"linearGradient\" || this.type == \"radialGradient\") {\n                $(this.node, {gradientTransform: this.matrix});\n            } else if (this.type == \"pattern\") {\n                $(this.node, {patternTransform: this.matrix});\n            } else {\n                $(this.node, {transform: this.matrix});\n            }\n        }\n\n        return this;\n    };\n    /*\\\n     * Element.parent\n     [ method ]\n     **\n     * Returns the element's parent\n     **\n     = (Element) the parent element\n    \\*/\n    elproto.parent = function () {\n        return wrap(this.node.parentNode);\n    };\n    /*\\\n     * Element.append\n     [ method ]\n     **\n     * Appends the given element to current one\n     **\n     - el (Element|Set) element to append\n     = (Element) the parent element\n    \\*/\n    /*\\\n     * Element.add\n     [ method ]\n     **\n     * See @Element.append\n    \\*/\n    elproto.append = elproto.add = function (el) {\n        if (el) {\n            if (el.type == \"set\") {\n                var it = this;\n                el.forEach(function (el) {\n                    it.add(el);\n                });\n                return this;\n            }\n            el = wrap(el);\n            this.node.appendChild(el.node);\n            el.paper = this.paper;\n        }\n        return this;\n    };\n    /*\\\n     * Element.appendTo\n     [ method ]\n     **\n     * Appends the current element to the given one\n     **\n     - el (Element) parent element to append to\n     = (Element) the child element\n    \\*/\n    elproto.appendTo = function (el) {\n        if (el) {\n            el = wrap(el);\n            el.append(this);\n        }\n        return this;\n    };\n    /*\\\n     * Element.prepend\n     [ method ]\n     **\n     * Prepends the given element to the current one\n     **\n     - el (Element) element to prepend\n     = (Element) the parent element\n    \\*/\n    elproto.prepend = function (el) {\n        if (el) {\n            if (el.type == \"set\") {\n                var it = this,\n                    first;\n                el.forEach(function (el) {\n                    if (first) {\n                        first.after(el);\n                    } else {\n                        it.prepend(el);\n                    }\n                    first = el;\n                });\n                return this;\n            }\n            el = wrap(el);\n            var parent = el.parent();\n            this.node.insertBefore(el.node, this.node.firstChild);\n            this.add && this.add();\n            el.paper = this.paper;\n            this.parent() && this.parent().add();\n            parent && parent.add();\n        }\n        return this;\n    };\n    /*\\\n     * Element.prependTo\n     [ method ]\n     **\n     * Prepends the current element to the given one\n     **\n     - el (Element) parent element to prepend to\n     = (Element) the child element\n    \\*/\n    elproto.prependTo = function (el) {\n        el = wrap(el);\n        el.prepend(this);\n        return this;\n    };\n    /*\\\n     * Element.before\n     [ method ]\n     **\n     * Inserts given element before the current one\n     **\n     - el (Element) element to insert\n     = (Element) the parent element\n    \\*/\n    elproto.before = function (el) {\n        if (el.type == \"set\") {\n            var it = this;\n            el.forEach(function (el) {\n                var parent = el.parent();\n                it.node.parentNode.insertBefore(el.node, it.node);\n                parent && parent.add();\n            });\n            this.parent().add();\n            return this;\n        }\n        el = wrap(el);\n        var parent = el.parent();\n        this.node.parentNode.insertBefore(el.node, this.node);\n        this.parent() && this.parent().add();\n        parent && parent.add();\n        el.paper = this.paper;\n        return this;\n    };\n    /*\\\n     * Element.after\n     [ method ]\n     **\n     * Inserts given element after the current one\n     **\n     - el (Element) element to insert\n     = (Element) the parent element\n    \\*/\n    elproto.after = function (el) {\n        el = wrap(el);\n        var parent = el.parent();\n        if (this.node.nextSibling) {\n            this.node.parentNode.insertBefore(el.node, this.node.nextSibling);\n        } else {\n            this.node.parentNode.appendChild(el.node);\n        }\n        this.parent() && this.parent().add();\n        parent && parent.add();\n        el.paper = this.paper;\n        return this;\n    };\n    /*\\\n     * Element.insertBefore\n     [ method ]\n     **\n     * Inserts the element after the given one\n     **\n     - el (Element) element next to whom insert to\n     = (Element) the parent element\n    \\*/\n    elproto.insertBefore = function (el) {\n        el = wrap(el);\n        var parent = this.parent();\n        el.node.parentNode.insertBefore(this.node, el.node);\n        this.paper = el.paper;\n        parent && parent.add();\n        el.parent() && el.parent().add();\n        return this;\n    };\n    /*\\\n     * Element.insertAfter\n     [ method ]\n     **\n     * Inserts the element after the given one\n     **\n     - el (Element) element next to whom insert to\n     = (Element) the parent element\n    \\*/\n    elproto.insertAfter = function (el) {\n        el = wrap(el);\n        var parent = this.parent();\n        el.node.parentNode.insertBefore(this.node, el.node.nextSibling);\n        this.paper = el.paper;\n        parent && parent.add();\n        el.parent() && el.parent().add();\n        return this;\n    };\n    /*\\\n     * Element.remove\n     [ method ]\n     **\n     * Removes element from the DOM\n     = (Element) the detached element\n    \\*/\n    elproto.remove = function () {\n        var parent = this.parent();\n        this.node.parentNode && this.node.parentNode.removeChild(this.node);\n        delete this.paper;\n        this.removed = true;\n        parent && parent.add();\n        return this;\n    };\n    /*\\\n     * Element.select\n     [ method ]\n     **\n     * Gathers the nested @Element matching the given set of CSS selectors\n     **\n     - query (string) CSS selector\n     = (Element) result of query selection\n    \\*/\n    elproto.select = function (query) {\n        return wrap(this.node.querySelector(query));\n    };\n    /*\\\n     * Element.selectAll\n     [ method ]\n     **\n     * Gathers nested @Element objects matching the given set of CSS selectors\n     **\n     - query (string) CSS selector\n     = (Set|array) result of query selection\n    \\*/\n    elproto.selectAll = function (query) {\n        var nodelist = this.node.querySelectorAll(query),\n            set = (Snap.set || Array)();\n        for (var i = 0; i < nodelist.length; i++) {\n            set.push(wrap(nodelist[i]));\n        }\n        return set;\n    };\n    /*\\\n     * Element.asPX\n     [ method ]\n     **\n     * Returns given attribute of the element as a `px` value (not %, em, etc.)\n     **\n     - attr (string) attribute name\n     - value (string) #optional attribute value\n     = (Element) result of query selection\n    \\*/\n    elproto.asPX = function (attr, value) {\n        if (value == null) {\n            value = this.attr(attr);\n        }\n        return +unit2px(this, attr, value);\n    };\n    // SIERRA Element.use(): I suggest adding a note about how to access the original element the returned <use> instantiates. It's a part of SVG with which ordinary web developers may be least familiar.\n    /*\\\n     * Element.use\n     [ method ]\n     **\n     * Creates a `<use>` element linked to the current element\n     **\n     = (Element) the `<use>` element\n    \\*/\n    elproto.use = function () {\n        var use,\n            id = this.node.id;\n        if (!id) {\n            id = this.id;\n            $(this.node, {\n                id: id\n            });\n        }\n        if (this.type == \"linearGradient\" || this.type == \"radialGradient\" ||\n            this.type == \"pattern\") {\n            use = make(this.type, this.node.parentNode);\n        } else {\n            use = make(\"use\", this.node.parentNode);\n        }\n        $(use.node, {\n            \"xlink:href\": \"#\" + id\n        });\n        use.original = this;\n        return use;\n    };\n    function fixids(el) {\n        var els = el.selectAll(\"*\"),\n            it,\n            url = /^\\s*url\\((\"|'|)(.*)\\1\\)\\s*$/,\n            ids = [],\n            uses = {};\n        function urltest(it, name) {\n            var val = $(it.node, name);\n            val = val && val.match(url);\n            val = val && val[2];\n            if (val && val.charAt() == \"#\") {\n                val = val.substring(1);\n            } else {\n                return;\n            }\n            if (val) {\n                uses[val] = (uses[val] || []).concat(function (id) {\n                    var attr = {};\n                    attr[name] = Snap.url(id);\n                    $(it.node, attr);\n                });\n            }\n        }\n        function linktest(it) {\n            var val = $(it.node, \"xlink:href\");\n            if (val && val.charAt() == \"#\") {\n                val = val.substring(1);\n            } else {\n                return;\n            }\n            if (val) {\n                uses[val] = (uses[val] || []).concat(function (id) {\n                    it.attr(\"xlink:href\", \"#\" + id);\n                });\n            }\n        }\n        for (var i = 0, ii = els.length; i < ii; i++) {\n            it = els[i];\n            urltest(it, \"fill\");\n            urltest(it, \"stroke\");\n            urltest(it, \"filter\");\n            urltest(it, \"mask\");\n            urltest(it, \"clip-path\");\n            linktest(it);\n            var oldid = $(it.node, \"id\");\n            if (oldid) {\n                $(it.node, {id: it.id});\n                ids.push({\n                    old: oldid,\n                    id: it.id\n                });\n            }\n        }\n        for (i = 0, ii = ids.length; i < ii; i++) {\n            var fs = uses[ids[i].old];\n            if (fs) {\n                for (var j = 0, jj = fs.length; j < jj; j++) {\n                    fs[j](ids[i].id);\n                }\n            }\n        }\n    }\n    /*\\\n     * Element.clone\n     [ method ]\n     **\n     * Creates a clone of the element and inserts it after the element\n     **\n     = (Element) the clone\n    \\*/\n    elproto.clone = function () {\n        var clone = wrap(this.node.cloneNode(true));\n        if ($(clone.node, \"id\")) {\n            $(clone.node, {id: clone.id});\n        }\n        fixids(clone);\n        clone.insertAfter(this);\n        return clone;\n    };\n    /*\\\n     * Element.toDefs\n     [ method ]\n     **\n     * Moves element to the shared `<defs>` area\n     **\n     = (Element) the element\n    \\*/\n    elproto.toDefs = function () {\n        var defs = getSomeDefs(this);\n        defs.appendChild(this.node);\n        return this;\n    };\n    /*\\\n     * Element.toPattern\n     [ method ]\n     **\n     * Creates a `<pattern>` element from the current element\n     **\n     * To create a pattern you have to specify the pattern rect:\n     - x (string|number)\n     - y (string|number)\n     - width (string|number)\n     - height (string|number)\n     = (Element) the `<pattern>` element\n     * You can use pattern later on as an argument for `fill` attribute:\n     | var p = paper.path(\"M10-5-10,15M15,0,0,15M0-5-20,15\").attr({\n     |         fill: \"none\",\n     |         stroke: \"#bada55\",\n     |         strokeWidth: 5\n     |     }).pattern(0, 0, 10, 10),\n     |     c = paper.circle(200, 200, 100);\n     | c.attr({\n     |     fill: p\n     | });\n    \\*/\n    elproto.pattern = elproto.toPattern = function (x, y, width, height) {\n        var p = make(\"pattern\", getSomeDefs(this));\n        if (x == null) {\n            x = this.getBBox();\n        }\n        if (is(x, \"object\") && \"x\" in x) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            x = x.x;\n        }\n        $(p.node, {\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n            patternUnits: \"userSpaceOnUse\",\n            id: p.id,\n            viewBox: [x, y, width, height].join(\" \")\n        });\n        p.node.appendChild(this.node);\n        return p;\n    };\n// SIERRA Element.marker(): clarify what a reference point is. E.g., helps you offset the object from its edge such as when centering it over a path.\n// SIERRA Element.marker(): I suggest the method should accept default reference point values.  Perhaps centered with (refX = width/2) and (refY = height/2)? Also, couldn't it assume the element's current _width_ and _height_? And please specify what _x_ and _y_ mean: offsets? If so, from where?  Couldn't they also be assigned default values?\n    /*\\\n     * Element.marker\n     [ method ]\n     **\n     * Creates a `<marker>` element from the current element\n     **\n     * To create a marker you have to specify the bounding rect and reference point:\n     - x (number)\n     - y (number)\n     - width (number)\n     - height (number)\n     - refX (number)\n     - refY (number)\n     = (Element) the `<marker>` element\n     * You can specify the marker later as an argument for `marker-start`, `marker-end`, `marker-mid`, and `marker` attributes. The `marker` attribute places the marker at every point along the path, and `marker-mid` places them at every point except the start and end.\n    \\*/\n    // TODO add usage for markers\n    elproto.marker = function (x, y, width, height, refX, refY) {\n        var p = make(\"marker\", getSomeDefs(this));\n        if (x == null) {\n            x = this.getBBox();\n        }\n        if (is(x, \"object\") && \"x\" in x) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            refX = x.refX || x.cx;\n            refY = x.refY || x.cy;\n            x = x.x;\n        }\n        $(p.node, {\n            viewBox: [x, y, width, height].join(\" \"),\n            markerWidth: width,\n            markerHeight: height,\n            orient: \"auto\",\n            refX: refX || 0,\n            refY: refY || 0,\n            id: p.id\n        });\n        p.node.appendChild(this.node);\n        return p;\n    };\n    var eldata = {};\n    /*\\\n     * Element.data\n     [ method ]\n     **\n     * Adds or retrieves given value associated with given key. (Don’t confuse\n     * with `data-` attributes)\n     *\n     * See also @Element.removeData\n     - key (string) key to store data\n     - value (any) #optional value to store\n     = (object) @Element\n     * or, if value is not specified:\n     = (any) value\n     > Usage\n     | for (var i = 0, i < 5, i++) {\n     |     paper.circle(10 + 15 * i, 10, 10)\n     |          .attr({fill: \"#000\"})\n     |          .data(\"i\", i)\n     |          .click(function () {\n     |             alert(this.data(\"i\"));\n     |          });\n     | }\n    \\*/\n    elproto.data = function (key, value) {\n        var data = eldata[this.id] = eldata[this.id] || {};\n        if (arguments.length == 0){\n            eve(\"snap.data.get.\" + this.id, this, data, null);\n            return data;\n        }\n        if (arguments.length == 1) {\n            if (Snap.is(key, \"object\")) {\n                for (var i in key) if (key[has](i)) {\n                    this.data(i, key[i]);\n                }\n                return this;\n            }\n            eve(\"snap.data.get.\" + this.id, this, data[key], key);\n            return data[key];\n        }\n        data[key] = value;\n        eve(\"snap.data.set.\" + this.id, this, value, key);\n        return this;\n    };\n    /*\\\n     * Element.removeData\n     [ method ]\n     **\n     * Removes value associated with an element by given key.\n     * If key is not provided, removes all the data of the element.\n     - key (string) #optional key\n     = (object) @Element\n    \\*/\n    elproto.removeData = function (key) {\n        if (key == null) {\n            eldata[this.id] = {};\n        } else {\n            eldata[this.id] && delete eldata[this.id][key];\n        }\n        return this;\n    };\n    /*\\\n     * Element.outerSVG\n     [ method ]\n     **\n     * Returns SVG code for the element, equivalent to HTML's `outerHTML`.\n     *\n     * See also @Element.innerSVG\n     = (string) SVG code for the element\n    \\*/\n    /*\\\n     * Element.toString\n     [ method ]\n     **\n     * See @Element.outerSVG\n    \\*/\n    elproto.outerSVG = elproto.toString = toString(1);\n    /*\\\n     * Element.innerSVG\n     [ method ]\n     **\n     * Returns SVG code for the element's contents, equivalent to HTML's `innerHTML`\n     = (string) SVG code for the element\n    \\*/\n    elproto.innerSVG = toString();\n    function toString(type) {\n        return function () {\n            var res = type ? \"<\" + this.type : \"\",\n                attr = this.node.attributes,\n                chld = this.node.childNodes;\n            if (type) {\n                for (var i = 0, ii = attr.length; i < ii; i++) {\n                    res += \" \" + attr[i].name + '=\"' +\n                            attr[i].value.replace(/\"/g, '\\\\\"') + '\"';\n                }\n            }\n            if (chld.length) {\n                type && (res += \">\");\n                for (i = 0, ii = chld.length; i < ii; i++) {\n                    if (chld[i].nodeType == 3) {\n                        res += chld[i].nodeValue;\n                    } else if (chld[i].nodeType == 1) {\n                        res += wrap(chld[i]).toString();\n                    }\n                }\n                type && (res += \"</\" + this.type + \">\");\n            } else {\n                type && (res += \"/>\");\n            }\n            return res;\n        };\n    }\n    elproto.toDataURL = function () {\n        if (window && window.btoa) {\n            var bb = this.getBBox(),\n                svg = Snap.format('<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"{width}\" height=\"{height}\" viewBox=\"{x} {y} {width} {height}\">{contents}</svg>', {\n                x: +bb.x.toFixed(3),\n                y: +bb.y.toFixed(3),\n                width: +bb.width.toFixed(3),\n                height: +bb.height.toFixed(3),\n                contents: this.outerSVG()\n            });\n            return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(svg)));\n        }\n    };\n    /*\\\n     * Fragment.select\n     [ method ]\n     **\n     * See @Element.select\n    \\*/\n    Fragment.prototype.select = elproto.select;\n    /*\\\n     * Fragment.selectAll\n     [ method ]\n     **\n     * See @Element.selectAll\n    \\*/\n    Fragment.prototype.selectAll = elproto.selectAll;\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var objectToString = Object.prototype.toString,\n        Str = String,\n        math = Math,\n        E = \"\";\n    function Matrix(a, b, c, d, e, f) {\n        if (b == null && objectToString.call(a) == \"[object SVGMatrix]\") {\n            this.a = a.a;\n            this.b = a.b;\n            this.c = a.c;\n            this.d = a.d;\n            this.e = a.e;\n            this.f = a.f;\n            return;\n        }\n        if (a != null) {\n            this.a = +a;\n            this.b = +b;\n            this.c = +c;\n            this.d = +d;\n            this.e = +e;\n            this.f = +f;\n        } else {\n            this.a = 1;\n            this.b = 0;\n            this.c = 0;\n            this.d = 1;\n            this.e = 0;\n            this.f = 0;\n        }\n    }\n    (function (matrixproto) {\n        /*\\\n         * Matrix.add\n         [ method ]\n         **\n         * Adds the given matrix to existing one\n         - a (number)\n         - b (number)\n         - c (number)\n         - d (number)\n         - e (number)\n         - f (number)\n         * or\n         - matrix (object) @Matrix\n        \\*/\n        matrixproto.add = function (a, b, c, d, e, f) {\n            if (a && a instanceof Matrix) {\n                return this.add(a.a, a.b, a.c, a.d, a.e, a.f);\n            }\n            var aNew = a * this.a + b * this.c,\n                bNew = a * this.b + b * this.d;\n            this.e += e * this.a + f * this.c;\n            this.f += e * this.b + f * this.d;\n            this.c = c * this.a + d * this.c;\n            this.d = c * this.b + d * this.d;\n\n            this.a = aNew;\n            this.b = bNew;\n            return this;\n        };\n        /*\\\n         * Matrix.multLeft\n         [ method ]\n         **\n         * Multiplies a passed affine transform to the left: M * this.\n         - a (number)\n         - b (number)\n         - c (number)\n         - d (number)\n         - e (number)\n         - f (number)\n         * or\n         - matrix (object) @Matrix\n        \\*/\n        Matrix.prototype.multLeft = function (a, b, c, d, e, f) {\n            if (a && a instanceof Matrix) {\n                return this.multLeft(a.a, a.b, a.c, a.d, a.e, a.f);\n            }\n            var aNew = a * this.a + c * this.b,\n                cNew = a * this.c + c * this.d,\n                eNew = a * this.e + c * this.f + e;\n            this.b = b * this.a + d * this.b;\n            this.d = b * this.c + d * this.d;\n            this.f = b * this.e + d * this.f + f;\n\n            this.a = aNew;\n            this.c = cNew;\n            this.e = eNew;\n            return this;\n        };\n        /*\\\n         * Matrix.invert\n         [ method ]\n         **\n         * Returns an inverted version of the matrix\n         = (object) @Matrix\n        \\*/\n        matrixproto.invert = function () {\n            var me = this,\n                x = me.a * me.d - me.b * me.c;\n            return new Matrix(me.d / x, -me.b / x, -me.c / x, me.a / x, (me.c * me.f - me.d * me.e) / x, (me.b * me.e - me.a * me.f) / x);\n        };\n        /*\\\n         * Matrix.clone\n         [ method ]\n         **\n         * Returns a copy of the matrix\n         = (object) @Matrix\n        \\*/\n        matrixproto.clone = function () {\n            return new Matrix(this.a, this.b, this.c, this.d, this.e, this.f);\n        };\n        /*\\\n         * Matrix.translate\n         [ method ]\n         **\n         * Translate the matrix\n         - x (number) horizontal offset distance\n         - y (number) vertical offset distance\n        \\*/\n        matrixproto.translate = function (x, y) {\n            this.e += x * this.a + y * this.c;\n            this.f += x * this.b + y * this.d;\n            return this;\n        };\n        /*\\\n         * Matrix.scale\n         [ method ]\n         **\n         * Scales the matrix\n         - x (number) amount to be scaled, with `1` resulting in no change\n         - y (number) #optional amount to scale along the vertical axis. (Otherwise `x` applies to both axes.)\n         - cx (number) #optional horizontal origin point from which to scale\n         - cy (number) #optional vertical origin point from which to scale\n         * Default cx, cy is the middle point of the element.\n        \\*/\n        matrixproto.scale = function (x, y, cx, cy) {\n            y == null && (y = x);\n            (cx || cy) && this.translate(cx, cy);\n            this.a *= x;\n            this.b *= x;\n            this.c *= y;\n            this.d *= y;\n            (cx || cy) && this.translate(-cx, -cy);\n            return this;\n        };\n        /*\\\n         * Matrix.rotate\n         [ method ]\n         **\n         * Rotates the matrix\n         - a (number) angle of rotation, in degrees\n         - x (number) horizontal origin point from which to rotate\n         - y (number) vertical origin point from which to rotate\n        \\*/\n        matrixproto.rotate = function (a, x, y) {\n            a = Snap.rad(a);\n            x = x || 0;\n            y = y || 0;\n            var cos = +math.cos(a).toFixed(9),\n                sin = +math.sin(a).toFixed(9);\n            this.add(cos, sin, -sin, cos, x, y);\n            return this.add(1, 0, 0, 1, -x, -y);\n        };\n        /*\\\n         * Matrix.skewX\n         [ method ]\n         **\n         * Skews the matrix along the x-axis\n         - x (number) Angle to skew along the x-axis (in degrees).\n        \\*/\n        matrixproto.skewX = function (x) {\n            return this.skew(x, 0);\n        };\n        /*\\\n         * Matrix.skewY\n         [ method ]\n         **\n         * Skews the matrix along the y-axis\n         - y (number) Angle to skew along the y-axis (in degrees).\n        \\*/\n        matrixproto.skewY = function (y) {\n            return this.skew(0, y);\n        };\n        /*\\\n         * Matrix.skew\n         [ method ]\n         **\n         * Skews the matrix\n         - y (number) Angle to skew along the y-axis (in degrees).\n         - x (number) Angle to skew along the x-axis (in degrees).\n        \\*/\n        matrixproto.skew = function (x, y) {\n            x = x || 0;\n            y = y || 0;\n            x = Snap.rad(x);\n            y = Snap.rad(y);\n            var c = math.tan(x).toFixed(9);\n            var b = math.tan(y).toFixed(9);\n            return this.add(1, b, c, 1, 0, 0);\n        };\n        /*\\\n         * Matrix.x\n         [ method ]\n         **\n         * Returns x coordinate for given point after transformation described by the matrix. See also @Matrix.y\n         - x (number)\n         - y (number)\n         = (number) x\n        \\*/\n        matrixproto.x = function (x, y) {\n            return x * this.a + y * this.c + this.e;\n        };\n        /*\\\n         * Matrix.y\n         [ method ]\n         **\n         * Returns y coordinate for given point after transformation described by the matrix. See also @Matrix.x\n         - x (number)\n         - y (number)\n         = (number) y\n        \\*/\n        matrixproto.y = function (x, y) {\n            return x * this.b + y * this.d + this.f;\n        };\n        matrixproto.get = function (i) {\n            return +this[Str.fromCharCode(97 + i)].toFixed(4);\n        };\n        matrixproto.toString = function () {\n            return \"matrix(\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)].join() + \")\";\n        };\n        matrixproto.offset = function () {\n            return [this.e.toFixed(4), this.f.toFixed(4)];\n        };\n        function norm(a) {\n            return a[0] * a[0] + a[1] * a[1];\n        }\n        function normalize(a) {\n            var mag = math.sqrt(norm(a));\n            a[0] && (a[0] /= mag);\n            a[1] && (a[1] /= mag);\n        }\n        /*\\\n         * Matrix.determinant\n         [ method ]\n         **\n         * Finds determinant of the given matrix.\n         = (number) determinant\n        \\*/\n        matrixproto.determinant = function () {\n            return this.a * this.d - this.b * this.c;\n        };\n        /*\\\n         * Matrix.split\n         [ method ]\n         **\n         * Splits matrix into primitive transformations\n         = (object) in format:\n         o dx (number) translation by x\n         o dy (number) translation by y\n         o scalex (number) scale by x\n         o scaley (number) scale by y\n         o shear (number) shear\n         o rotate (number) rotation in deg\n         o isSimple (boolean) could it be represented via simple transformations\n        \\*/\n        matrixproto.split = function () {\n            var out = {};\n            // translation\n            out.dx = this.e;\n            out.dy = this.f;\n\n            // scale and shear\n            var row = [[this.a, this.b], [this.c, this.d]];\n            out.scalex = math.sqrt(norm(row[0]));\n            normalize(row[0]);\n\n            out.shear = row[0][0] * row[1][0] + row[0][1] * row[1][1];\n            row[1] = [row[1][0] - row[0][0] * out.shear, row[1][1] - row[0][1] * out.shear];\n\n            out.scaley = math.sqrt(norm(row[1]));\n            normalize(row[1]);\n            out.shear /= out.scaley;\n\n            if (this.determinant() < 0) {\n                out.scalex = -out.scalex;\n            }\n\n            // rotation\n            var sin = row[0][1],\n                cos = row[1][1];\n            if (cos < 0) {\n                out.rotate = Snap.deg(math.acos(cos));\n                if (sin < 0) {\n                    out.rotate = 360 - out.rotate;\n                }\n            } else {\n                out.rotate = Snap.deg(math.asin(sin));\n            }\n\n            out.isSimple = !+out.shear.toFixed(9) && (out.scalex.toFixed(9) == out.scaley.toFixed(9) || !out.rotate);\n            out.isSuperSimple = !+out.shear.toFixed(9) && out.scalex.toFixed(9) == out.scaley.toFixed(9) && !out.rotate;\n            out.noRotation = !+out.shear.toFixed(9) && !out.rotate;\n            return out;\n        };\n        /*\\\n         * Matrix.toTransformString\n         [ method ]\n         **\n         * Returns transform string that represents given matrix\n         = (string) transform string\n        \\*/\n        matrixproto.toTransformString = function (shorter) {\n            var s = shorter || this.split();\n            if (!+s.shear.toFixed(9)) {\n                s.scalex = +s.scalex.toFixed(4);\n                s.scaley = +s.scaley.toFixed(4);\n                s.rotate = +s.rotate.toFixed(4);\n                return  (s.dx || s.dy ? \"t\" + [+s.dx.toFixed(4), +s.dy.toFixed(4)] : E) +\n                        (s.rotate ? \"r\" + [+s.rotate.toFixed(4), 0, 0] : E) +\n                        (s.scalex != 1 || s.scaley != 1 ? \"s\" + [s.scalex, s.scaley, 0, 0] : E);\n            } else {\n                return \"m\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)];\n            }\n        };\n    })(Matrix.prototype);\n    /*\\\n     * Snap.Matrix\n     [ method ]\n     **\n     * Matrix constructor, extend on your own risk.\n     * To create matrices use @Snap.matrix.\n    \\*/\n    Snap.Matrix = Matrix;\n    /*\\\n     * Snap.matrix\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns a matrix based on the given parameters\n     - a (number)\n     - b (number)\n     - c (number)\n     - d (number)\n     - e (number)\n     - f (number)\n     * or\n     - svgMatrix (SVGMatrix)\n     = (object) @Matrix\n    \\*/\n    Snap.matrix = function (a, b, c, d, e, f) {\n        return new Matrix(a, b, c, d, e, f);\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var has = \"hasOwnProperty\",\n        make = Snap._.make,\n        wrap = Snap._.wrap,\n        is = Snap.is,\n        getSomeDefs = Snap._.getSomeDefs,\n        reURLValue = /^url\\((['\"]?)([^)]+)\\1\\)$/,\n        $ = Snap._.$,\n        URL = Snap.url,\n        Str = String,\n        separator = Snap._.separator,\n        E = \"\";\n    /*\\\n     * Snap.deurl\n     [ method ]\n     **\n     * Unwraps path from `\"url(<path>)\"`.\n     - value (string) url path\n     = (string) unwrapped path\n    \\*/\n    Snap.deurl = function (value) {\n        var res = String(value).match(reURLValue);\n        return res ? res[2] : value;\n    }\n    // Attributes event handlers\n    eve.on(\"snap.util.attr.mask\", function (value) {\n        if (value instanceof Element || value instanceof Fragment) {\n            eve.stop();\n            if (value instanceof Fragment && value.node.childNodes.length == 1) {\n                value = value.node.firstChild;\n                getSomeDefs(this).appendChild(value);\n                value = wrap(value);\n            }\n            if (value.type == \"mask\") {\n                var mask = value;\n            } else {\n                mask = make(\"mask\", getSomeDefs(this));\n                mask.node.appendChild(value.node);\n            }\n            !mask.node.id && $(mask.node, {\n                id: mask.id\n            });\n            $(this.node, {\n                mask: URL(mask.id)\n            });\n        }\n    });\n    (function (clipIt) {\n        eve.on(\"snap.util.attr.clip\", clipIt);\n        eve.on(\"snap.util.attr.clip-path\", clipIt);\n        eve.on(\"snap.util.attr.clipPath\", clipIt);\n    }(function (value) {\n        if (value instanceof Element || value instanceof Fragment) {\n            eve.stop();\n            var clip,\n                node = value.node;\n            while (node) {\n                if (node.nodeName === \"clipPath\") {\n                    clip = new Element(node);\n                    break;\n                }\n                if (node.nodeName === \"svg\") {\n                    clip = undefined;\n                    break;\n                }\n                node = node.parentNode;\n            }\n            if (!clip) {\n                clip = make(\"clipPath\", getSomeDefs(this));\n                clip.node.appendChild(value.node);\n                !clip.node.id && $(clip.node, {\n                    id: clip.id\n                });\n            }\n            $(this.node, {\n                \"clip-path\": URL(clip.node.id || clip.id)\n            });\n        }\n    }));\n    function fillStroke(name) {\n        return function (value) {\n            eve.stop();\n            if (value instanceof Fragment && value.node.childNodes.length == 1 &&\n                (value.node.firstChild.tagName == \"radialGradient\" ||\n                value.node.firstChild.tagName == \"linearGradient\" ||\n                value.node.firstChild.tagName == \"pattern\")) {\n                value = value.node.firstChild;\n                getSomeDefs(this).appendChild(value);\n                value = wrap(value);\n            }\n            if (value instanceof Element) {\n                if (value.type == \"radialGradient\" || value.type == \"linearGradient\"\n                   || value.type == \"pattern\") {\n                    if (!value.node.id) {\n                        $(value.node, {\n                            id: value.id\n                        });\n                    }\n                    var fill = URL(value.node.id);\n                } else {\n                    fill = value.attr(name);\n                }\n            } else {\n                fill = Snap.color(value);\n                if (fill.error) {\n                    var grad = Snap(getSomeDefs(this).ownerSVGElement).gradient(value);\n                    if (grad) {\n                        if (!grad.node.id) {\n                            $(grad.node, {\n                                id: grad.id\n                            });\n                        }\n                        fill = URL(grad.node.id);\n                    } else {\n                        fill = value;\n                    }\n                } else {\n                    fill = Str(fill);\n                }\n            }\n            var attrs = {};\n            attrs[name] = fill;\n            $(this.node, attrs);\n            this.node.style[name] = E;\n        };\n    }\n    eve.on(\"snap.util.attr.fill\", fillStroke(\"fill\"));\n    eve.on(\"snap.util.attr.stroke\", fillStroke(\"stroke\"));\n    var gradrg = /^([lr])(?:\\(([^)]*)\\))?(.*)$/i;\n    eve.on(\"snap.util.grad.parse\", function parseGrad(string) {\n        string = Str(string);\n        var tokens = string.match(gradrg);\n        if (!tokens) {\n            return null;\n        }\n        var type = tokens[1],\n            params = tokens[2],\n            stops = tokens[3];\n        params = params.split(/\\s*,\\s*/).map(function (el) {\n            return +el == el ? +el : el;\n        });\n        if (params.length == 1 && params[0] == 0) {\n            params = [];\n        }\n        stops = stops.split(\"-\");\n        stops = stops.map(function (el) {\n            el = el.split(\":\");\n            var out = {\n                color: el[0]\n            };\n            if (el[1]) {\n                out.offset = parseFloat(el[1]);\n            }\n            return out;\n        });\n        var len = stops.length,\n            start = 0,\n            j = 0;\n        function seed(i, end) {\n            var step = (end - start) / (i - j);\n            for (var k = j; k < i; k++) {\n                stops[k].offset = +(+start + step * (k - j)).toFixed(2);\n            }\n            j = i;\n            start = end;\n        }\n        len--;\n        for (var i = 0; i < len; i++) if (\"offset\" in stops[i]) {\n            seed(i, stops[i].offset);\n        }\n        stops[len].offset = stops[len].offset || 100;\n        seed(len, stops[len].offset);\n        return {\n            type: type,\n            params: params,\n            stops: stops\n        };\n    });\n\n    eve.on(\"snap.util.attr.d\", function (value) {\n        eve.stop();\n        if (is(value, \"array\") && is(value[0], \"array\")) {\n            value = Snap.path.toString.call(value);\n        }\n        value = Str(value);\n        if (value.match(/[ruo]/i)) {\n            value = Snap.path.toAbsolute(value);\n        }\n        $(this.node, {d: value});\n    })(-1);\n    eve.on(\"snap.util.attr.#text\", function (value) {\n        eve.stop();\n        value = Str(value);\n        var txt = glob.doc.createTextNode(value);\n        while (this.node.firstChild) {\n            this.node.removeChild(this.node.firstChild);\n        }\n        this.node.appendChild(txt);\n    })(-1);\n    eve.on(\"snap.util.attr.path\", function (value) {\n        eve.stop();\n        this.attr({d: value});\n    })(-1);\n    eve.on(\"snap.util.attr.class\", function (value) {\n        eve.stop();\n        this.node.className.baseVal = value;\n    })(-1);\n    eve.on(\"snap.util.attr.viewBox\", function (value) {\n        var vb;\n        if (is(value, \"object\") && \"x\" in value) {\n            vb = [value.x, value.y, value.width, value.height].join(\" \");\n        } else if (is(value, \"array\")) {\n            vb = value.join(\" \");\n        } else {\n            vb = value;\n        }\n        $(this.node, {\n            viewBox: vb\n        });\n        eve.stop();\n    })(-1);\n    eve.on(\"snap.util.attr.transform\", function (value) {\n        this.transform(value);\n        eve.stop();\n    })(-1);\n    eve.on(\"snap.util.attr.r\", function (value) {\n        if (this.type == \"rect\") {\n            eve.stop();\n            $(this.node, {\n                rx: value,\n                ry: value\n            });\n        }\n    })(-1);\n    eve.on(\"snap.util.attr.textpath\", function (value) {\n        eve.stop();\n        if (this.type == \"text\") {\n            var id, tp, node;\n            if (!value && this.textPath) {\n                tp = this.textPath;\n                while (tp.node.firstChild) {\n                    this.node.appendChild(tp.node.firstChild);\n                }\n                tp.remove();\n                delete this.textPath;\n                return;\n            }\n            if (is(value, \"string\")) {\n                var defs = getSomeDefs(this),\n                    path = wrap(defs.parentNode).path(value);\n                defs.appendChild(path.node);\n                id = path.id;\n                path.attr({id: id});\n            } else {\n                value = wrap(value);\n                if (value instanceof Element) {\n                    id = value.attr(\"id\");\n                    if (!id) {\n                        id = value.id;\n                        value.attr({id: id});\n                    }\n                }\n            }\n            if (id) {\n                tp = this.textPath;\n                node = this.node;\n                if (tp) {\n                    tp.attr({\"xlink:href\": \"#\" + id});\n                } else {\n                    tp = $(\"textPath\", {\n                        \"xlink:href\": \"#\" + id\n                    });\n                    while (node.firstChild) {\n                        tp.appendChild(node.firstChild);\n                    }\n                    node.appendChild(tp);\n                    this.textPath = wrap(tp);\n                }\n            }\n        }\n    })(-1);\n    eve.on(\"snap.util.attr.text\", function (value) {\n        if (this.type == \"text\") {\n            var i = 0,\n                node = this.node,\n                tuner = function (chunk) {\n                    var out = $(\"tspan\");\n                    if (is(chunk, \"array\")) {\n                        for (var i = 0; i < chunk.length; i++) {\n                            out.appendChild(tuner(chunk[i]));\n                        }\n                    } else {\n                        out.appendChild(glob.doc.createTextNode(chunk));\n                    }\n                    out.normalize && out.normalize();\n                    return out;\n                };\n            while (node.firstChild) {\n                node.removeChild(node.firstChild);\n            }\n            var tuned = tuner(value);\n            while (tuned.firstChild) {\n                node.appendChild(tuned.firstChild);\n            }\n        }\n        eve.stop();\n    })(-1);\n    function setFontSize(value) {\n        eve.stop();\n        if (value == +value) {\n            value += \"px\";\n        }\n        this.node.style.fontSize = value;\n    }\n    eve.on(\"snap.util.attr.fontSize\", setFontSize)(-1);\n    eve.on(\"snap.util.attr.font-size\", setFontSize)(-1);\n\n\n    eve.on(\"snap.util.getattr.transform\", function () {\n        eve.stop();\n        return this.transform();\n    })(-1);\n    eve.on(\"snap.util.getattr.textpath\", function () {\n        eve.stop();\n        return this.textPath;\n    })(-1);\n    // Markers\n    (function () {\n        function getter(end) {\n            return function () {\n                eve.stop();\n                var style = glob.doc.defaultView.getComputedStyle(this.node, null).getPropertyValue(\"marker-\" + end);\n                if (style == \"none\") {\n                    return style;\n                } else {\n                    return Snap(glob.doc.getElementById(style.match(reURLValue)[1]));\n                }\n            };\n        }\n        function setter(end) {\n            return function (value) {\n                eve.stop();\n                var name = \"marker\" + end.charAt(0).toUpperCase() + end.substring(1);\n                if (value == \"\" || !value) {\n                    this.node.style[name] = \"none\";\n                    return;\n                }\n                if (value.type == \"marker\") {\n                    var id = value.node.id;\n                    if (!id) {\n                        $(value.node, {id: value.id});\n                    }\n                    this.node.style[name] = URL(id);\n                    return;\n                }\n            };\n        }\n        eve.on(\"snap.util.getattr.marker-end\", getter(\"end\"))(-1);\n        eve.on(\"snap.util.getattr.markerEnd\", getter(\"end\"))(-1);\n        eve.on(\"snap.util.getattr.marker-start\", getter(\"start\"))(-1);\n        eve.on(\"snap.util.getattr.markerStart\", getter(\"start\"))(-1);\n        eve.on(\"snap.util.getattr.marker-mid\", getter(\"mid\"))(-1);\n        eve.on(\"snap.util.getattr.markerMid\", getter(\"mid\"))(-1);\n        eve.on(\"snap.util.attr.marker-end\", setter(\"end\"))(-1);\n        eve.on(\"snap.util.attr.markerEnd\", setter(\"end\"))(-1);\n        eve.on(\"snap.util.attr.marker-start\", setter(\"start\"))(-1);\n        eve.on(\"snap.util.attr.markerStart\", setter(\"start\"))(-1);\n        eve.on(\"snap.util.attr.marker-mid\", setter(\"mid\"))(-1);\n        eve.on(\"snap.util.attr.markerMid\", setter(\"mid\"))(-1);\n    }());\n    eve.on(\"snap.util.getattr.r\", function () {\n        if (this.type == \"rect\" && $(this.node, \"rx\") == $(this.node, \"ry\")) {\n            eve.stop();\n            return $(this.node, \"rx\");\n        }\n    })(-1);\n    function textExtract(node) {\n        var out = [];\n        var children = node.childNodes;\n        for (var i = 0, ii = children.length; i < ii; i++) {\n            var chi = children[i];\n            if (chi.nodeType == 3) {\n                out.push(chi.nodeValue);\n            }\n            if (chi.tagName == \"tspan\") {\n                if (chi.childNodes.length == 1 && chi.firstChild.nodeType == 3) {\n                    out.push(chi.firstChild.nodeValue);\n                } else {\n                    out.push(textExtract(chi));\n                }\n            }\n        }\n        return out;\n    }\n    eve.on(\"snap.util.getattr.text\", function () {\n        if (this.type == \"text\" || this.type == \"tspan\") {\n            eve.stop();\n            var out = textExtract(this.node);\n            return out.length == 1 ? out[0] : out;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.#text\", function () {\n        return this.node.textContent;\n    })(-1);\n    eve.on(\"snap.util.getattr.fill\", function (internal) {\n        if (internal) {\n            return;\n        }\n        eve.stop();\n        var value = eve(\"snap.util.getattr.fill\", this, true).firstDefined();\n        return Snap(Snap.deurl(value)) || value;\n    })(-1);\n    eve.on(\"snap.util.getattr.stroke\", function (internal) {\n        if (internal) {\n            return;\n        }\n        eve.stop();\n        var value = eve(\"snap.util.getattr.stroke\", this, true).firstDefined();\n        return Snap(Snap.deurl(value)) || value;\n    })(-1);\n    eve.on(\"snap.util.getattr.viewBox\", function () {\n        eve.stop();\n        var vb = $(this.node, \"viewBox\");\n        if (vb) {\n            vb = vb.split(separator);\n            return Snap._.box(+vb[0], +vb[1], +vb[2], +vb[3]);\n        } else {\n            return;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.points\", function () {\n        var p = $(this.node, \"points\");\n        eve.stop();\n        if (p) {\n            return p.split(separator);\n        } else {\n            return;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.path\", function () {\n        var p = $(this.node, \"d\");\n        eve.stop();\n        return p;\n    })(-1);\n    eve.on(\"snap.util.getattr.class\", function () {\n        return this.node.className.baseVal;\n    })(-1);\n    function getFontSize() {\n        eve.stop();\n        return this.node.style.fontSize;\n    }\n    eve.on(\"snap.util.getattr.fontSize\", getFontSize)(-1);\n    eve.on(\"snap.util.getattr.font-size\", getFontSize)(-1);\n});\n\n// Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var rgNotSpace = /\\S+/g,\n        rgBadSpace = /[\\t\\r\\n\\f]/g,\n        rgTrim = /(^\\s+|\\s+$)/g,\n        Str = String,\n        elproto = Element.prototype;\n    /*\\\n     * Element.addClass\n     [ method ]\n     **\n     * Adds given class name or list of class names to the element.\n     - value (string) class name or space separated list of class names\n     **\n     = (Element) original element.\n    \\*/\n    elproto.addClass = function (value) {\n        var classes = Str(value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n\n        if (classes.length) {\n            j = 0;\n            while (clazz = classes[j++]) {\n                pos = curClasses.indexOf(clazz);\n                if (!~pos) {\n                    curClasses.push(clazz);\n                }\n            }\n\n            finalValue = curClasses.join(\" \");\n            if (className != finalValue) {\n                elem.className.baseVal = finalValue;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Element.removeClass\n     [ method ]\n     **\n     * Removes given class name or list of class names from the element.\n     - value (string) class name or space separated list of class names\n     **\n     = (Element) original element.\n    \\*/\n    elproto.removeClass = function (value) {\n        var classes = Str(value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n        if (curClasses.length) {\n            j = 0;\n            while (clazz = classes[j++]) {\n                pos = curClasses.indexOf(clazz);\n                if (~pos) {\n                    curClasses.splice(pos, 1);\n                }\n            }\n\n            finalValue = curClasses.join(\" \");\n            if (className != finalValue) {\n                elem.className.baseVal = finalValue;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Element.hasClass\n     [ method ]\n     **\n     * Checks if the element has a given class name in the list of class names applied to it.\n     - value (string) class name\n     **\n     = (boolean) `true` if the element has given class\n    \\*/\n    elproto.hasClass = function (value) {\n        var elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [];\n        return !!~curClasses.indexOf(value);\n    };\n    /*\\\n     * Element.toggleClass\n     [ method ]\n     **\n     * Add or remove one or more classes from the element, depending on either\n     * the class’s presence or the value of the `flag` argument.\n     - value (string) class name or space separated list of class names\n     - flag (boolean) value to determine whether the class should be added or removed\n     **\n     = (Element) original element.\n    \\*/\n    elproto.toggleClass = function (value, flag) {\n        if (flag != null) {\n            if (flag) {\n                return this.addClass(value);\n            } else {\n                return this.removeClass(value);\n            }\n        }\n        var classes = (value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n        j = 0;\n        while (clazz = classes[j++]) {\n            pos = curClasses.indexOf(clazz);\n            if (~pos) {\n                curClasses.splice(pos, 1);\n            } else {\n                curClasses.push(clazz);\n            }\n        }\n\n        finalValue = curClasses.join(\" \");\n        if (className != finalValue) {\n            elem.className.baseVal = finalValue;\n        }\n        return this;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var operators = {\n            \"+\": function (x, y) {\n                    return x + y;\n                },\n            \"-\": function (x, y) {\n                    return x - y;\n                },\n            \"/\": function (x, y) {\n                    return x / y;\n                },\n            \"*\": function (x, y) {\n                    return x * y;\n                }\n        },\n        Str = String,\n        reUnit = /[a-z]+$/i,\n        reAddon = /^\\s*([+\\-\\/*])\\s*=\\s*([\\d.eE+\\-]+)\\s*([^\\d\\s]+)?\\s*$/;\n    function getNumber(val) {\n        return val;\n    }\n    function getUnit(unit) {\n        return function (val) {\n            return +val.toFixed(3) + unit;\n        };\n    }\n    eve.on(\"snap.util.attr\", function (val) {\n        var plus = Str(val).match(reAddon);\n        if (plus) {\n            var evnt = eve.nt(),\n                name = evnt.substring(evnt.lastIndexOf(\".\") + 1),\n                a = this.attr(name),\n                atr = {};\n            eve.stop();\n            var unit = plus[3] || \"\",\n                aUnit = a.match(reUnit),\n                op = operators[plus[1]];\n            if (aUnit && aUnit == unit) {\n                val = op(parseFloat(a), +plus[2]);\n            } else {\n                a = this.asPX(name);\n                val = op(this.asPX(name), this.asPX(name, plus[2] + unit));\n            }\n            if (isNaN(a) || isNaN(val)) {\n                return;\n            }\n            atr[name] = val;\n            this.attr(atr);\n        }\n    })(-10);\n    eve.on(\"snap.util.equal\", function (name, b) {\n        var A, B, a = Str(this.attr(name) || \"\"),\n            el = this,\n            bplus = Str(b).match(reAddon);\n        if (bplus) {\n            eve.stop();\n            var unit = bplus[3] || \"\",\n                aUnit = a.match(reUnit),\n                op = operators[bplus[1]];\n            if (aUnit && aUnit == unit) {\n                return {\n                    from: parseFloat(a),\n                    to: op(parseFloat(a), +bplus[2]),\n                    f: getUnit(aUnit)\n                };\n            } else {\n                a = this.asPX(name);\n                return {\n                    from: a,\n                    to: op(a, this.asPX(name, bplus[2] + unit)),\n                    f: getNumber\n                };\n            }\n        }\n    })(-10);\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var proto = Paper.prototype,\n        is = Snap.is;\n    /*\\\n     * Paper.rect\n     [ method ]\n     *\n     * Draws a rectangle\n     **\n     - x (number) x coordinate of the top left corner\n     - y (number) y coordinate of the top left corner\n     - width (number) width\n     - height (number) height\n     - rx (number) #optional horizontal radius for rounded corners, default is 0\n     - ry (number) #optional vertical radius for rounded corners, default is rx or 0\n     = (object) the `rect` element\n     **\n     > Usage\n     | // regular rectangle\n     | var c = paper.rect(10, 10, 50, 50);\n     | // rectangle with rounded corners\n     | var c = paper.rect(40, 40, 50, 50, 10);\n    \\*/\n    proto.rect = function (x, y, w, h, rx, ry) {\n        var attr;\n        if (ry == null) {\n            ry = rx;\n        }\n        if (is(x, \"object\") && x == \"[object Object]\") {\n            attr = x;\n        } else if (x != null) {\n            attr = {\n                x: x,\n                y: y,\n                width: w,\n                height: h\n            };\n            if (rx != null) {\n                attr.rx = rx;\n                attr.ry = ry;\n            }\n        }\n        return this.el(\"rect\", attr);\n    };\n    /*\\\n     * Paper.circle\n     [ method ]\n     **\n     * Draws a circle\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - r (number) radius\n     = (object) the `circle` element\n     **\n     > Usage\n     | var c = paper.circle(50, 50, 40);\n    \\*/\n    proto.circle = function (cx, cy, r) {\n        var attr;\n        if (is(cx, \"object\") && cx == \"[object Object]\") {\n            attr = cx;\n        } else if (cx != null) {\n            attr = {\n                cx: cx,\n                cy: cy,\n                r: r\n            };\n        }\n        return this.el(\"circle\", attr);\n    };\n\n    var preload = (function () {\n        function onerror() {\n            this.parentNode.removeChild(this);\n        }\n        return function (src, f) {\n            var img = glob.doc.createElement(\"img\"),\n                body = glob.doc.body;\n            img.style.cssText = \"position:absolute;left:-9999em;top:-9999em\";\n            img.onload = function () {\n                f.call(img);\n                img.onload = img.onerror = null;\n                body.removeChild(img);\n            };\n            img.onerror = onerror;\n            body.appendChild(img);\n            img.src = src;\n        };\n    }());\n\n    /*\\\n     * Paper.image\n     [ method ]\n     **\n     * Places an image on the surface\n     **\n     - src (string) URI of the source image\n     - x (number) x offset position\n     - y (number) y offset position\n     - width (number) width of the image\n     - height (number) height of the image\n     = (object) the `image` element\n     * or\n     = (object) Snap element object with type `image`\n     **\n     > Usage\n     | var c = paper.image(\"apple.png\", 10, 10, 80, 80);\n    \\*/\n    proto.image = function (src, x, y, width, height) {\n        var el = this.el(\"image\");\n        if (is(src, \"object\") && \"src\" in src) {\n            el.attr(src);\n        } else if (src != null) {\n            var set = {\n                \"xlink:href\": src,\n                preserveAspectRatio: \"none\"\n            };\n            if (x != null && y != null) {\n                set.x = x;\n                set.y = y;\n            }\n            if (width != null && height != null) {\n                set.width = width;\n                set.height = height;\n            } else {\n                preload(src, function () {\n                    Snap._.$(el.node, {\n                        width: this.offsetWidth,\n                        height: this.offsetHeight\n                    });\n                });\n            }\n            Snap._.$(el.node, set);\n        }\n        return el;\n    };\n    /*\\\n     * Paper.ellipse\n     [ method ]\n     **\n     * Draws an ellipse\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - rx (number) horizontal radius\n     - ry (number) vertical radius\n     = (object) the `ellipse` element\n     **\n     > Usage\n     | var c = paper.ellipse(50, 50, 40, 20);\n    \\*/\n    proto.ellipse = function (cx, cy, rx, ry) {\n        var attr;\n        if (is(cx, \"object\") && cx == \"[object Object]\") {\n            attr = cx;\n        } else if (cx != null) {\n            attr ={\n                cx: cx,\n                cy: cy,\n                rx: rx,\n                ry: ry\n            };\n        }\n        return this.el(\"ellipse\", attr);\n    };\n    // SIERRA Paper.path(): Unclear from the link what a Catmull-Rom curveto is, and why it would make life any easier.\n    /*\\\n     * Paper.path\n     [ method ]\n     **\n     * Creates a `<path>` element using the given string as the path's definition\n     - pathString (string) #optional path string in SVG format\n     * Path string consists of one-letter commands, followed by comma seprarated arguments in numerical form. Example:\n     | \"M10,20L30,40\"\n     * This example features two commands: `M`, with arguments `(10, 20)` and `L` with arguments `(30, 40)`. Uppercase letter commands express coordinates in absolute terms, while lowercase commands express them in relative terms from the most recently declared coordinates.\n     *\n     # <p>Here is short list of commands available, for more details see <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" title=\"Details of a path's data attribute's format are described in the SVG specification.\">SVG path string format</a> or <a href=\"https://developer.mozilla.org/en/SVG/Tutorial/Paths\">article about path strings at MDN</a>.</p>\n     # <table><thead><tr><th>Command</th><th>Name</th><th>Parameters</th></tr></thead><tbody>\n     # <tr><td>M</td><td>moveto</td><td>(x y)+</td></tr>\n     # <tr><td>Z</td><td>closepath</td><td>(none)</td></tr>\n     # <tr><td>L</td><td>lineto</td><td>(x y)+</td></tr>\n     # <tr><td>H</td><td>horizontal lineto</td><td>x+</td></tr>\n     # <tr><td>V</td><td>vertical lineto</td><td>y+</td></tr>\n     # <tr><td>C</td><td>curveto</td><td>(x1 y1 x2 y2 x y)+</td></tr>\n     # <tr><td>S</td><td>smooth curveto</td><td>(x2 y2 x y)+</td></tr>\n     # <tr><td>Q</td><td>quadratic Bézier curveto</td><td>(x1 y1 x y)+</td></tr>\n     # <tr><td>T</td><td>smooth quadratic Bézier curveto</td><td>(x y)+</td></tr>\n     # <tr><td>A</td><td>elliptical arc</td><td>(rx ry x-axis-rotation large-arc-flag sweep-flag x y)+</td></tr>\n     # <tr><td>R</td><td><a href=\"http://en.wikipedia.org/wiki/Catmull–Rom_spline#Catmull.E2.80.93Rom_spline\">Catmull-Rom curveto</a>*</td><td>x1 y1 (x y)+</td></tr></tbody></table>\n     * * _Catmull-Rom curveto_ is a not standard SVG command and added to make life easier.\n     * Note: there is a special case when a path consists of only three commands: `M10,10R…z`. In this case the path connects back to its starting point.\n     > Usage\n     | var c = paper.path(\"M10 10L90 90\");\n     | // draw a diagonal line:\n     | // move to 10,10, line to 90,90\n    \\*/\n    proto.path = function (d) {\n        var attr;\n        if (is(d, \"object\") && !is(d, \"array\")) {\n            attr = d;\n        } else if (d) {\n            attr = {d: d};\n        }\n        return this.el(\"path\", attr);\n    };\n    /*\\\n     * Paper.g\n     [ method ]\n     **\n     * Creates a group element\n     **\n     - varargs (…) #optional elements to nest within the group\n     = (object) the `g` element\n     **\n     > Usage\n     | var c1 = paper.circle(),\n     |     c2 = paper.rect(),\n     |     g = paper.g(c2, c1); // note that the order of elements is different\n     * or\n     | var c1 = paper.circle(),\n     |     c2 = paper.rect(),\n     |     g = paper.g();\n     | g.add(c2, c1);\n    \\*/\n    /*\\\n     * Paper.group\n     [ method ]\n     **\n     * See @Paper.g\n    \\*/\n    proto.group = proto.g = function (first) {\n        var attr,\n            el = this.el(\"g\");\n        if (arguments.length == 1 && first && !first.type) {\n            el.attr(first);\n        } else if (arguments.length) {\n            el.add(Array.prototype.slice.call(arguments, 0));\n        }\n        return el;\n    };\n    /*\\\n     * Paper.svg\n     [ method ]\n     **\n     * Creates a nested SVG element.\n     - x (number) @optional X of the element\n     - y (number) @optional Y of the element\n     - width (number) @optional width of the element\n     - height (number) @optional height of the element\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     **\n     = (object) the `svg` element\n     **\n    \\*/\n    proto.svg = function (x, y, width, height, vbx, vby, vbw, vbh) {\n        var attrs = {};\n        if (is(x, \"object\") && y == null) {\n            attrs = x;\n        } else {\n            if (x != null) {\n                attrs.x = x;\n            }\n            if (y != null) {\n                attrs.y = y;\n            }\n            if (width != null) {\n                attrs.width = width;\n            }\n            if (height != null) {\n                attrs.height = height;\n            }\n            if (vbx != null && vby != null && vbw != null && vbh != null) {\n                attrs.viewBox = [vbx, vby, vbw, vbh];\n            }\n        }\n        return this.el(\"svg\", attrs);\n    };\n    /*\\\n     * Paper.mask\n     [ method ]\n     **\n     * Equivalent in behaviour to @Paper.g, except it’s a mask.\n     **\n     = (object) the `mask` element\n     **\n    \\*/\n    proto.mask = function (first) {\n        var attr,\n            el = this.el(\"mask\");\n        if (arguments.length == 1 && first && !first.type) {\n            el.attr(first);\n        } else if (arguments.length) {\n            el.add(Array.prototype.slice.call(arguments, 0));\n        }\n        return el;\n    };\n    /*\\\n     * Paper.ptrn\n     [ method ]\n     **\n     * Equivalent in behaviour to @Paper.g, except it’s a pattern.\n     - x (number) @optional X of the element\n     - y (number) @optional Y of the element\n     - width (number) @optional width of the element\n     - height (number) @optional height of the element\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     **\n     = (object) the `pattern` element\n     **\n    \\*/\n    proto.ptrn = function (x, y, width, height, vx, vy, vw, vh) {\n        if (is(x, \"object\")) {\n            var attr = x;\n        } else {\n            attr = {patternUnits: \"userSpaceOnUse\"};\n            if (x) {\n                attr.x = x;\n            }\n            if (y) {\n                attr.y = y;\n            }\n            if (width != null) {\n                attr.width = width;\n            }\n            if (height != null) {\n                attr.height = height;\n            }\n            if (vx != null && vy != null && vw != null && vh != null) {\n                attr.viewBox = [vx, vy, vw, vh];\n            } else {\n                attr.viewBox = [x || 0, y || 0, width || 0, height || 0];\n            }\n        }\n        return this.el(\"pattern\", attr);\n    };\n    /*\\\n     * Paper.use\n     [ method ]\n     **\n     * Creates a <use> element.\n     - id (string) @optional id of element to link\n     * or\n     - id (Element) @optional element to link\n     **\n     = (object) the `use` element\n     **\n    \\*/\n    proto.use = function (id) {\n        if (id != null) {\n            if (id instanceof Element) {\n                if (!id.attr(\"id\")) {\n                    id.attr({id: Snap._.id(id)});\n                }\n                id = id.attr(\"id\");\n            }\n            if (String(id).charAt() == \"#\") {\n                id = id.substring(1);\n            }\n            return this.el(\"use\", {\"xlink:href\": \"#\" + id});\n        } else {\n            return Element.prototype.use.call(this);\n        }\n    };\n    /*\\\n     * Paper.symbol\n     [ method ]\n     **\n     * Creates a <symbol> element.\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     = (object) the `symbol` element\n     **\n    \\*/\n    proto.symbol = function (vx, vy, vw, vh) {\n        var attr = {};\n        if (vx != null && vy != null && vw != null && vh != null) {\n            attr.viewBox = [vx, vy, vw, vh];\n        }\n\n        return this.el(\"symbol\", attr);\n    };\n    /*\\\n     * Paper.text\n     [ method ]\n     **\n     * Draws a text string\n     **\n     - x (number) x coordinate position\n     - y (number) y coordinate position\n     - text (string|array) The text string to draw or array of strings to nest within separate `<tspan>` elements\n     = (object) the `text` element\n     **\n     > Usage\n     | var t1 = paper.text(50, 50, \"Snap\");\n     | var t2 = paper.text(50, 50, [\"S\",\"n\",\"a\",\"p\"]);\n     | // Text path usage\n     | t1.attr({textpath: \"M10,10L100,100\"});\n     | // or\n     | var pth = paper.path(\"M10,10L100,100\");\n     | t1.attr({textpath: pth});\n    \\*/\n    proto.text = function (x, y, text) {\n        var attr = {};\n        if (is(x, \"object\")) {\n            attr = x;\n        } else if (x != null) {\n            attr = {\n                x: x,\n                y: y,\n                text: text || \"\"\n            };\n        }\n        return this.el(\"text\", attr);\n    };\n    /*\\\n     * Paper.line\n     [ method ]\n     **\n     * Draws a line\n     **\n     - x1 (number) x coordinate position of the start\n     - y1 (number) y coordinate position of the start\n     - x2 (number) x coordinate position of the end\n     - y2 (number) y coordinate position of the end\n     = (object) the `line` element\n     **\n     > Usage\n     | var t1 = paper.line(50, 50, 100, 100);\n    \\*/\n    proto.line = function (x1, y1, x2, y2) {\n        var attr = {};\n        if (is(x1, \"object\")) {\n            attr = x1;\n        } else if (x1 != null) {\n            attr = {\n                x1: x1,\n                x2: x2,\n                y1: y1,\n                y2: y2\n            };\n        }\n        return this.el(\"line\", attr);\n    };\n    /*\\\n     * Paper.polyline\n     [ method ]\n     **\n     * Draws a polyline\n     **\n     - points (array) array of points\n     * or\n     - varargs (…) points\n     = (object) the `polyline` element\n     **\n     > Usage\n     | var p1 = paper.polyline([10, 10, 100, 100]);\n     | var p2 = paper.polyline(10, 10, 100, 100);\n    \\*/\n    proto.polyline = function (points) {\n        if (arguments.length > 1) {\n            points = Array.prototype.slice.call(arguments, 0);\n        }\n        var attr = {};\n        if (is(points, \"object\") && !is(points, \"array\")) {\n            attr = points;\n        } else if (points != null) {\n            attr = {points: points};\n        }\n        return this.el(\"polyline\", attr);\n    };\n    /*\\\n     * Paper.polygon\n     [ method ]\n     **\n     * Draws a polygon. See @Paper.polyline\n    \\*/\n    proto.polygon = function (points) {\n        if (arguments.length > 1) {\n            points = Array.prototype.slice.call(arguments, 0);\n        }\n        var attr = {};\n        if (is(points, \"object\") && !is(points, \"array\")) {\n            attr = points;\n        } else if (points != null) {\n            attr = {points: points};\n        }\n        return this.el(\"polygon\", attr);\n    };\n    // gradients\n    (function () {\n        var $ = Snap._.$;\n        // gradients' helpers\n        /*\\\n         * Element.stops\n         [ method ]\n         **\n         * Only for gradients!\n         * Returns array of gradient stops elements.\n         = (array) the stops array.\n        \\*/\n        function Gstops() {\n            return this.selectAll(\"stop\");\n        }\n        /*\\\n         * Element.addStop\n         [ method ]\n         **\n         * Only for gradients!\n         * Adds another stop to the gradient.\n         - color (string) stops color\n         - offset (number) stops offset 0..100\n         = (object) gradient element\n        \\*/\n        function GaddStop(color, offset) {\n            var stop = $(\"stop\"),\n                attr = {\n                    offset: +offset + \"%\"\n                };\n            color = Snap.color(color);\n            attr[\"stop-color\"] = color.hex;\n            if (color.opacity < 1) {\n                attr[\"stop-opacity\"] = color.opacity;\n            }\n            $(stop, attr);\n            var stops = this.stops(),\n                inserted;\n            for (var i = 0; i < stops.length; i++) {\n                var stopOffset = parseFloat(stops[i].attr(\"offset\"));\n                if (stopOffset > offset) {\n                    this.node.insertBefore(stop, stops[i].node);\n                    inserted = true;\n                    break;\n                }\n            }\n            if (!inserted) {\n                this.node.appendChild(stop);\n            }\n            return this;\n        }\n        function GgetBBox() {\n            if (this.type == \"linearGradient\") {\n                var x1 = $(this.node, \"x1\") || 0,\n                    x2 = $(this.node, \"x2\") || 1,\n                    y1 = $(this.node, \"y1\") || 0,\n                    y2 = $(this.node, \"y2\") || 0;\n                return Snap._.box(x1, y1, math.abs(x2 - x1), math.abs(y2 - y1));\n            } else {\n                var cx = this.node.cx || .5,\n                    cy = this.node.cy || .5,\n                    r = this.node.r || 0;\n                return Snap._.box(cx - r, cy - r, r * 2, r * 2);\n            }\n        }\n        /*\\\n         * Element.setStops\n         [ method ]\n         **\n         * Only for gradients!\n         * Updates stops of the gradient based on passed gradient descriptor. See @Ppaer.gradient\n         - str (string) gradient descriptor part after `()`.\n         = (object) gradient element\n         | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n         | g.setStops(\"#fff-#000-#f00-#fc0\");\n        \\*/\n        function GsetStops(str) {\n            var grad = str,\n                stops = this.stops();\n            if (typeof str == \"string\") {\n                grad = eve(\"snap.util.grad.parse\", null, \"l(0,0,0,1)\" + str).firstDefined().stops;\n            }\n            if (!Snap.is(grad, \"array\")) {\n                return;\n            }\n            for (var i = 0; i < stops.length; i++) {\n                if (grad[i]) {\n                    var color = Snap.color(grad[i].color),\n                        attr = {\"offset\": grad[i].offset + \"%\"};\n                    attr[\"stop-color\"] = color.hex;\n                    if (color.opacity < 1) {\n                        attr[\"stop-opacity\"] = color.opacity;\n                    }\n                    stops[i].attr(attr);\n                } else {\n                    stops[i].remove();\n                }\n            }\n            for (i = stops.length; i < grad.length; i++) {\n                this.addStop(grad[i].color, grad[i].offset);\n            }\n            return this;\n        }\n        function gradient(defs, str) {\n            var grad = eve(\"snap.util.grad.parse\", null, str).firstDefined(),\n                el;\n            if (!grad) {\n                return null;\n            }\n            grad.params.unshift(defs);\n            if (grad.type.toLowerCase() == \"l\") {\n                el = gradientLinear.apply(0, grad.params);\n            } else {\n                el = gradientRadial.apply(0, grad.params);\n            }\n            if (grad.type != grad.type.toLowerCase()) {\n                $(el.node, {\n                    gradientUnits: \"userSpaceOnUse\"\n                });\n            }\n            var stops = grad.stops,\n                len = stops.length;\n            for (var i = 0; i < len; i++) {\n                var stop = stops[i];\n                el.addStop(stop.color, stop.offset);\n            }\n            return el;\n        }\n        function gradientLinear(defs, x1, y1, x2, y2) {\n            var el = Snap._.make(\"linearGradient\", defs);\n            el.stops = Gstops;\n            el.addStop = GaddStop;\n            el.getBBox = GgetBBox;\n            el.setStops = GsetStops;\n            if (x1 != null) {\n                $(el.node, {\n                    x1: x1,\n                    y1: y1,\n                    x2: x2,\n                    y2: y2\n                });\n            }\n            return el;\n        }\n        function gradientRadial(defs, cx, cy, r, fx, fy) {\n            var el = Snap._.make(\"radialGradient\", defs);\n            el.stops = Gstops;\n            el.addStop = GaddStop;\n            el.getBBox = GgetBBox;\n            if (cx != null) {\n                $(el.node, {\n                    cx: cx,\n                    cy: cy,\n                    r: r\n                });\n            }\n            if (fx != null && fy != null) {\n                $(el.node, {\n                    fx: fx,\n                    fy: fy\n                });\n            }\n            return el;\n        }\n        /*\\\n         * Paper.gradient\n         [ method ]\n         **\n         * Creates a gradient element\n         **\n         - gradient (string) gradient descriptor\n         > Gradient Descriptor\n         * The gradient descriptor is an expression formatted as\n         * follows: `<type>(<coords>)<colors>`.  The `<type>` can be\n         * either linear or radial.  The uppercase `L` or `R` letters\n         * indicate absolute coordinates offset from the SVG surface.\n         * Lowercase `l` or `r` letters indicate coordinates\n         * calculated relative to the element to which the gradient is\n         * applied.  Coordinates specify a linear gradient vector as\n         * `x1`, `y1`, `x2`, `y2`, or a radial gradient as `cx`, `cy`,\n         * `r` and optional `fx`, `fy` specifying a focal point away\n         * from the center of the circle. Specify `<colors>` as a list\n         * of dash-separated CSS color values.  Each color may be\n         * followed by a custom offset value, separated with a colon\n         * character.\n         > Examples\n         * Linear gradient, relative from top-left corner to bottom-right\n         * corner, from black through red to white:\n         | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n         * Linear gradient, absolute from (0, 0) to (100, 100), from black\n         * through red at 25% to white:\n         | var g = paper.gradient(\"L(0, 0, 100, 100)#000-#f00:25-#fff\");\n         * Radial gradient, relative from the center of the element with radius\n         * half the width, from black to white:\n         | var g = paper.gradient(\"r(0.5, 0.5, 0.5)#000-#fff\");\n         * To apply the gradient:\n         | paper.circle(50, 50, 40).attr({\n         |     fill: g\n         | });\n         = (object) the `gradient` element\n        \\*/\n        proto.gradient = function (str) {\n            return gradient(this.defs, str);\n        };\n        proto.gradientLinear = function (x1, y1, x2, y2) {\n            return gradientLinear(this.defs, x1, y1, x2, y2);\n        };\n        proto.gradientRadial = function (cx, cy, r, fx, fy) {\n            return gradientRadial(this.defs, cx, cy, r, fx, fy);\n        };\n        /*\\\n         * Paper.toString\n         [ method ]\n         **\n         * Returns SVG code for the @Paper\n         = (string) SVG code for the @Paper\n        \\*/\n        proto.toString = function () {\n            var doc = this.node.ownerDocument,\n                f = doc.createDocumentFragment(),\n                d = doc.createElement(\"div\"),\n                svg = this.node.cloneNode(true),\n                res;\n            f.appendChild(d);\n            d.appendChild(svg);\n            Snap._.$(svg, {xmlns: \"http://www.w3.org/2000/svg\"});\n            res = d.innerHTML;\n            f.removeChild(f.firstChild);\n            return res;\n        };\n        /*\\\n         * Paper.toDataURL\n         [ method ]\n         **\n         * Returns SVG code for the @Paper as Data URI string.\n         = (string) Data URI string\n        \\*/\n        proto.toDataURL = function () {\n            if (window && window.btoa) {\n                return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(this)));\n            }\n        };\n        /*\\\n         * Paper.clear\n         [ method ]\n         **\n         * Removes all child nodes of the paper, except <defs>.\n        \\*/\n        proto.clear = function () {\n            var node = this.node.firstChild,\n                next;\n            while (node) {\n                next = node.nextSibling;\n                if (node.tagName != \"defs\") {\n                    node.parentNode.removeChild(node);\n                } else {\n                    proto.clear.call({node: node});\n                }\n                node = next;\n            }\n        };\n    }());\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        clone = Snap._.clone,\n        has = \"hasOwnProperty\",\n        p2s = /,?([a-z]),?/gi,\n        toFloat = parseFloat,\n        math = Math,\n        PI = math.PI,\n        mmin = math.min,\n        mmax = math.max,\n        pow = math.pow,\n        abs = math.abs;\n    function paths(ps) {\n        var p = paths.ps = paths.ps || {};\n        if (p[ps]) {\n            p[ps].sleep = 100;\n        } else {\n            p[ps] = {\n                sleep: 100\n            };\n        }\n        setTimeout(function () {\n            for (var key in p) if (p[has](key) && key != ps) {\n                p[key].sleep--;\n                !p[key].sleep && delete p[key];\n            }\n        });\n        return p[ps];\n    }\n    function box(x, y, width, height) {\n        if (x == null) {\n            x = y = width = height = 0;\n        }\n        if (y == null) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            x = x.x;\n        }\n        return {\n            x: x,\n            y: y,\n            width: width,\n            w: width,\n            height: height,\n            h: height,\n            x2: x + width,\n            y2: y + height,\n            cx: x + width / 2,\n            cy: y + height / 2,\n            r1: math.min(width, height) / 2,\n            r2: math.max(width, height) / 2,\n            r0: math.sqrt(width * width + height * height) / 2,\n            path: rectPath(x, y, width, height),\n            vb: [x, y, width, height].join(\" \")\n        };\n    }\n    function toString() {\n        return this.join(\",\").replace(p2s, \"$1\");\n    }\n    function pathClone(pathArray) {\n        var res = clone(pathArray);\n        res.toString = toString;\n        return res;\n    }\n    function getPointAtSegmentLength(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length) {\n        if (length == null) {\n            return bezlen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y);\n        } else {\n            return findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y,\n                getTotLen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length));\n        }\n    }\n    function getLengthFactory(istotal, subpath) {\n        function O(val) {\n            return +(+val).toFixed(3);\n        }\n        return Snap._.cacher(function (path, length, onlystart) {\n            if (path instanceof Element) {\n                path = path.attr(\"d\");\n            }\n            path = path2curve(path);\n            var x, y, p, l, sp = \"\", subpaths = {}, point,\n                len = 0;\n            for (var i = 0, ii = path.length; i < ii; i++) {\n                p = path[i];\n                if (p[0] == \"M\") {\n                    x = +p[1];\n                    y = +p[2];\n                } else {\n                    l = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n                    if (len + l > length) {\n                        if (subpath && !subpaths.start) {\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                            sp += [\n                                \"C\" + O(point.start.x),\n                                O(point.start.y),\n                                O(point.m.x),\n                                O(point.m.y),\n                                O(point.x),\n                                O(point.y)\n                            ];\n                            if (onlystart) {return sp;}\n                            subpaths.start = sp;\n                            sp = [\n                                \"M\" + O(point.x),\n                                O(point.y) + \"C\" + O(point.n.x),\n                                O(point.n.y),\n                                O(point.end.x),\n                                O(point.end.y),\n                                O(p[5]),\n                                O(p[6])\n                            ].join();\n                            len += l;\n                            x = +p[5];\n                            y = +p[6];\n                            continue;\n                        }\n                        if (!istotal && !subpath) {\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                            return point;\n                        }\n                    }\n                    len += l;\n                    x = +p[5];\n                    y = +p[6];\n                }\n                sp += p.shift() + p;\n            }\n            subpaths.end = sp;\n            point = istotal ? len : subpath ? subpaths : findDotsAtSegment(x, y, p[0], p[1], p[2], p[3], p[4], p[5], 1);\n            return point;\n        }, null, Snap._.clone);\n    }\n    var getTotalLength = getLengthFactory(1),\n        getPointAtLength = getLengthFactory(),\n        getSubpathsAtLength = getLengthFactory(0, 1);\n    function findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n        var t1 = 1 - t,\n            t13 = pow(t1, 3),\n            t12 = pow(t1, 2),\n            t2 = t * t,\n            t3 = t2 * t,\n            x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\n            y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\n            mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\n            my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\n            nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\n            ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\n            ax = t1 * p1x + t * c1x,\n            ay = t1 * p1y + t * c1y,\n            cx = t1 * c2x + t * p2x,\n            cy = t1 * c2y + t * p2y,\n            alpha = 90 - math.atan2(mx - nx, my - ny) * 180 / PI;\n        // (mx > nx || my < ny) && (alpha += 180);\n        return {\n            x: x,\n            y: y,\n            m: {x: mx, y: my},\n            n: {x: nx, y: ny},\n            start: {x: ax, y: ay},\n            end: {x: cx, y: cy},\n            alpha: alpha\n        };\n    }\n    function bezierBBox(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\n        if (!Snap.is(p1x, \"array\")) {\n            p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\n        }\n        var bbox = curveDim.apply(null, p1x);\n        return box(\n            bbox.min.x,\n            bbox.min.y,\n            bbox.max.x - bbox.min.x,\n            bbox.max.y - bbox.min.y\n        );\n    }\n    function isPointInsideBBox(bbox, x, y) {\n        return  x >= bbox.x &&\n                x <= bbox.x + bbox.width &&\n                y >= bbox.y &&\n                y <= bbox.y + bbox.height;\n    }\n    function isBBoxIntersect(bbox1, bbox2) {\n        bbox1 = box(bbox1);\n        bbox2 = box(bbox2);\n        return isPointInsideBBox(bbox2, bbox1.x, bbox1.y)\n            || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y)\n            || isPointInsideBBox(bbox2, bbox1.x, bbox1.y2)\n            || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2)\n            || isPointInsideBBox(bbox1, bbox2.x, bbox2.y)\n            || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y)\n            || isPointInsideBBox(bbox1, bbox2.x, bbox2.y2)\n            || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2)\n            || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x\n                || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x)\n            && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y\n                || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\n    }\n    function base3(t, p1, p2, p3, p4) {\n        var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\n            t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n        return t * t2 - 3 * p1 + 3 * p2;\n    }\n    function bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\n        if (z == null) {\n            z = 1;\n        }\n        z = z > 1 ? 1 : z < 0 ? 0 : z;\n        var z2 = z / 2,\n            n = 12,\n            Tvalues = [-.1252,.1252,-.3678,.3678,-.5873,.5873,-.7699,.7699,-.9041,.9041,-.9816,.9816],\n            Cvalues = [0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],\n            sum = 0;\n        for (var i = 0; i < n; i++) {\n            var ct = z2 * Tvalues[i] + z2,\n                xbase = base3(ct, x1, x2, x3, x4),\n                ybase = base3(ct, y1, y2, y3, y4),\n                comb = xbase * xbase + ybase * ybase;\n            sum += Cvalues[i] * math.sqrt(comb);\n        }\n        return z2 * sum;\n    }\n    function getTotLen(x1, y1, x2, y2, x3, y3, x4, y4, ll) {\n        if (ll < 0 || bezlen(x1, y1, x2, y2, x3, y3, x4, y4) < ll) {\n            return;\n        }\n        var t = 1,\n            step = t / 2,\n            t2 = t - step,\n            l,\n            e = .01;\n        l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n        while (abs(l - ll) > e) {\n            step /= 2;\n            t2 += (l < ll ? 1 : -1) * step;\n            l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n        }\n        return t2;\n    }\n    function intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n        if (\n            mmax(x1, x2) < mmin(x3, x4) ||\n            mmin(x1, x2) > mmax(x3, x4) ||\n            mmax(y1, y2) < mmin(y3, y4) ||\n            mmin(y1, y2) > mmax(y3, y4)\n        ) {\n            return;\n        }\n        var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\n            ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\n            denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n        if (!denominator) {\n            return;\n        }\n        var px = nx / denominator,\n            py = ny / denominator,\n            px2 = +px.toFixed(2),\n            py2 = +py.toFixed(2);\n        if (\n            px2 < +mmin(x1, x2).toFixed(2) ||\n            px2 > +mmax(x1, x2).toFixed(2) ||\n            px2 < +mmin(x3, x4).toFixed(2) ||\n            px2 > +mmax(x3, x4).toFixed(2) ||\n            py2 < +mmin(y1, y2).toFixed(2) ||\n            py2 > +mmax(y1, y2).toFixed(2) ||\n            py2 < +mmin(y3, y4).toFixed(2) ||\n            py2 > +mmax(y3, y4).toFixed(2)\n        ) {\n            return;\n        }\n        return {x: px, y: py};\n    }\n    function inter(bez1, bez2) {\n        return interHelper(bez1, bez2);\n    }\n    function interCount(bez1, bez2) {\n        return interHelper(bez1, bez2, 1);\n    }\n    function interHelper(bez1, bez2, justCount) {\n        var bbox1 = bezierBBox(bez1),\n            bbox2 = bezierBBox(bez2);\n        if (!isBBoxIntersect(bbox1, bbox2)) {\n            return justCount ? 0 : [];\n        }\n        var l1 = bezlen.apply(0, bez1),\n            l2 = bezlen.apply(0, bez2),\n            n1 = ~~(l1 / 8),\n            n2 = ~~(l2 / 8),\n            dots1 = [],\n            dots2 = [],\n            xy = {},\n            res = justCount ? 0 : [];\n        for (var i = 0; i < n1 + 1; i++) {\n            var p = findDotsAtSegment.apply(0, bez1.concat(i / n1));\n            dots1.push({x: p.x, y: p.y, t: i / n1});\n        }\n        for (i = 0; i < n2 + 1; i++) {\n            p = findDotsAtSegment.apply(0, bez2.concat(i / n2));\n            dots2.push({x: p.x, y: p.y, t: i / n2});\n        }\n        for (i = 0; i < n1; i++) {\n            for (var j = 0; j < n2; j++) {\n                var di = dots1[i],\n                    di1 = dots1[i + 1],\n                    dj = dots2[j],\n                    dj1 = dots2[j + 1],\n                    ci = abs(di1.x - di.x) < .001 ? \"y\" : \"x\",\n                    cj = abs(dj1.x - dj.x) < .001 ? \"y\" : \"x\",\n                    is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\n                if (is) {\n                    if (xy[is.x.toFixed(4)] == is.y.toFixed(4)) {\n                        continue;\n                    }\n                    xy[is.x.toFixed(4)] = is.y.toFixed(4);\n                    var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\n                        t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\n                    if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {\n                        if (justCount) {\n                            res++;\n                        } else {\n                            res.push({\n                                x: is.x,\n                                y: is.y,\n                                t1: t1,\n                                t2: t2\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    function pathIntersection(path1, path2) {\n        return interPathHelper(path1, path2);\n    }\n    function pathIntersectionNumber(path1, path2) {\n        return interPathHelper(path1, path2, 1);\n    }\n    function interPathHelper(path1, path2, justCount) {\n        path1 = path2curve(path1);\n        path2 = path2curve(path2);\n        var x1, y1, x2, y2, x1m, y1m, x2m, y2m, bez1, bez2,\n            res = justCount ? 0 : [];\n        for (var i = 0, ii = path1.length; i < ii; i++) {\n            var pi = path1[i];\n            if (pi[0] == \"M\") {\n                x1 = x1m = pi[1];\n                y1 = y1m = pi[2];\n            } else {\n                if (pi[0] == \"C\") {\n                    bez1 = [x1, y1].concat(pi.slice(1));\n                    x1 = bez1[6];\n                    y1 = bez1[7];\n                } else {\n                    bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\n                    x1 = x1m;\n                    y1 = y1m;\n                }\n                for (var j = 0, jj = path2.length; j < jj; j++) {\n                    var pj = path2[j];\n                    if (pj[0] == \"M\") {\n                        x2 = x2m = pj[1];\n                        y2 = y2m = pj[2];\n                    } else {\n                        if (pj[0] == \"C\") {\n                            bez2 = [x2, y2].concat(pj.slice(1));\n                            x2 = bez2[6];\n                            y2 = bez2[7];\n                        } else {\n                            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\n                            x2 = x2m;\n                            y2 = y2m;\n                        }\n                        var intr = interHelper(bez1, bez2, justCount);\n                        if (justCount) {\n                            res += intr;\n                        } else {\n                            for (var k = 0, kk = intr.length; k < kk; k++) {\n                                intr[k].segment1 = i;\n                                intr[k].segment2 = j;\n                                intr[k].bez1 = bez1;\n                                intr[k].bez2 = bez2;\n                            }\n                            res = res.concat(intr);\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    function isPointInsidePath(path, x, y) {\n        var bbox = pathBBox(path);\n        return isPointInsideBBox(bbox, x, y) &&\n               interPathHelper(path, [[\"M\", x, y], [\"H\", bbox.x2 + 10]], 1) % 2 == 1;\n    }\n    function pathBBox(path) {\n        var pth = paths(path);\n        if (pth.bbox) {\n            return clone(pth.bbox);\n        }\n        if (!path) {\n            return box();\n        }\n        path = path2curve(path);\n        var x = 0,\n            y = 0,\n            X = [],\n            Y = [],\n            p;\n        for (var i = 0, ii = path.length; i < ii; i++) {\n            p = path[i];\n            if (p[0] == \"M\") {\n                x = p[1];\n                y = p[2];\n                X.push(x);\n                Y.push(y);\n            } else {\n                var dim = curveDim(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n                X = X.concat(dim.min.x, dim.max.x);\n                Y = Y.concat(dim.min.y, dim.max.y);\n                x = p[5];\n                y = p[6];\n            }\n        }\n        var xmin = mmin.apply(0, X),\n            ymin = mmin.apply(0, Y),\n            xmax = mmax.apply(0, X),\n            ymax = mmax.apply(0, Y),\n            bb = box(xmin, ymin, xmax - xmin, ymax - ymin);\n        pth.bbox = clone(bb);\n        return bb;\n    }\n    function rectPath(x, y, w, h, r) {\n        if (r) {\n            return [\n                [\"M\", +x + +r, y],\n                [\"l\", w - r * 2, 0],\n                [\"a\", r, r, 0, 0, 1, r, r],\n                [\"l\", 0, h - r * 2],\n                [\"a\", r, r, 0, 0, 1, -r, r],\n                [\"l\", r * 2 - w, 0],\n                [\"a\", r, r, 0, 0, 1, -r, -r],\n                [\"l\", 0, r * 2 - h],\n                [\"a\", r, r, 0, 0, 1, r, -r],\n                [\"z\"]\n            ];\n        }\n        var res = [[\"M\", x, y], [\"l\", w, 0], [\"l\", 0, h], [\"l\", -w, 0], [\"z\"]];\n        res.toString = toString;\n        return res;\n    }\n    function ellipsePath(x, y, rx, ry, a) {\n        if (a == null && ry == null) {\n            ry = rx;\n        }\n        x = +x;\n        y = +y;\n        rx = +rx;\n        ry = +ry;\n        if (a != null) {\n            var rad = Math.PI / 180,\n                x1 = x + rx * Math.cos(-ry * rad),\n                x2 = x + rx * Math.cos(-a * rad),\n                y1 = y + rx * Math.sin(-ry * rad),\n                y2 = y + rx * Math.sin(-a * rad),\n                res = [[\"M\", x1, y1], [\"A\", rx, rx, 0, +(a - ry > 180), 0, x2, y2]];\n        } else {\n            res = [\n                [\"M\", x, y],\n                [\"m\", 0, -ry],\n                [\"a\", rx, ry, 0, 1, 1, 0, 2 * ry],\n                [\"a\", rx, ry, 0, 1, 1, 0, -2 * ry],\n                [\"z\"]\n            ];\n        }\n        res.toString = toString;\n        return res;\n    }\n    var unit2px = Snap._unit2px,\n        getPath = {\n        path: function (el) {\n            return el.attr(\"path\");\n        },\n        circle: function (el) {\n            var attr = unit2px(el);\n            return ellipsePath(attr.cx, attr.cy, attr.r);\n        },\n        ellipse: function (el) {\n            var attr = unit2px(el);\n            return ellipsePath(attr.cx || 0, attr.cy || 0, attr.rx, attr.ry);\n        },\n        rect: function (el) {\n            var attr = unit2px(el);\n            return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height, attr.rx, attr.ry);\n        },\n        image: function (el) {\n            var attr = unit2px(el);\n            return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height);\n        },\n        line: function (el) {\n            return \"M\" + [el.attr(\"x1\") || 0, el.attr(\"y1\") || 0, el.attr(\"x2\"), el.attr(\"y2\")];\n        },\n        polyline: function (el) {\n            return \"M\" + el.attr(\"points\");\n        },\n        polygon: function (el) {\n            return \"M\" + el.attr(\"points\") + \"z\";\n        },\n        deflt: function (el) {\n            var bbox = el.node.getBBox();\n            return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);\n        }\n    };\n    function pathToRelative(pathArray) {\n        var pth = paths(pathArray),\n            lowerCase = String.prototype.toLowerCase;\n        if (pth.rel) {\n            return pathClone(pth.rel);\n        }\n        if (!Snap.is(pathArray, \"array\") || !Snap.is(pathArray && pathArray[0], \"array\")) {\n            pathArray = Snap.parsePathString(pathArray);\n        }\n        var res = [],\n            x = 0,\n            y = 0,\n            mx = 0,\n            my = 0,\n            start = 0;\n        if (pathArray[0][0] == \"M\") {\n            x = pathArray[0][1];\n            y = pathArray[0][2];\n            mx = x;\n            my = y;\n            start++;\n            res.push([\"M\", x, y]);\n        }\n        for (var i = start, ii = pathArray.length; i < ii; i++) {\n            var r = res[i] = [],\n                pa = pathArray[i];\n            if (pa[0] != lowerCase.call(pa[0])) {\n                r[0] = lowerCase.call(pa[0]);\n                switch (r[0]) {\n                    case \"a\":\n                        r[1] = pa[1];\n                        r[2] = pa[2];\n                        r[3] = pa[3];\n                        r[4] = pa[4];\n                        r[5] = pa[5];\n                        r[6] = +(pa[6] - x).toFixed(3);\n                        r[7] = +(pa[7] - y).toFixed(3);\n                        break;\n                    case \"v\":\n                        r[1] = +(pa[1] - y).toFixed(3);\n                        break;\n                    case \"m\":\n                        mx = pa[1];\n                        my = pa[2];\n                    default:\n                        for (var j = 1, jj = pa.length; j < jj; j++) {\n                            r[j] = +(pa[j] - (j % 2 ? x : y)).toFixed(3);\n                        }\n                }\n            } else {\n                r = res[i] = [];\n                if (pa[0] == \"m\") {\n                    mx = pa[1] + x;\n                    my = pa[2] + y;\n                }\n                for (var k = 0, kk = pa.length; k < kk; k++) {\n                    res[i][k] = pa[k];\n                }\n            }\n            var len = res[i].length;\n            switch (res[i][0]) {\n                case \"z\":\n                    x = mx;\n                    y = my;\n                    break;\n                case \"h\":\n                    x += +res[i][len - 1];\n                    break;\n                case \"v\":\n                    y += +res[i][len - 1];\n                    break;\n                default:\n                    x += +res[i][len - 2];\n                    y += +res[i][len - 1];\n            }\n        }\n        res.toString = toString;\n        pth.rel = pathClone(res);\n        return res;\n    }\n    function pathToAbsolute(pathArray) {\n        var pth = paths(pathArray);\n        if (pth.abs) {\n            return pathClone(pth.abs);\n        }\n        if (!is(pathArray, \"array\") || !is(pathArray && pathArray[0], \"array\")) { // rough assumption\n            pathArray = Snap.parsePathString(pathArray);\n        }\n        if (!pathArray || !pathArray.length) {\n            return [[\"M\", 0, 0]];\n        }\n        var res = [],\n            x = 0,\n            y = 0,\n            mx = 0,\n            my = 0,\n            start = 0,\n            pa0;\n        if (pathArray[0][0] == \"M\") {\n            x = +pathArray[0][1];\n            y = +pathArray[0][2];\n            mx = x;\n            my = y;\n            start++;\n            res[0] = [\"M\", x, y];\n        }\n        var crz = pathArray.length == 3 &&\n            pathArray[0][0] == \"M\" &&\n            pathArray[1][0].toUpperCase() == \"R\" &&\n            pathArray[2][0].toUpperCase() == \"Z\";\n        for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n            res.push(r = []);\n            pa = pathArray[i];\n            pa0 = pa[0];\n            if (pa0 != pa0.toUpperCase()) {\n                r[0] = pa0.toUpperCase();\n                switch (r[0]) {\n                    case \"A\":\n                        r[1] = pa[1];\n                        r[2] = pa[2];\n                        r[3] = pa[3];\n                        r[4] = pa[4];\n                        r[5] = pa[5];\n                        r[6] = +pa[6] + x;\n                        r[7] = +pa[7] + y;\n                        break;\n                    case \"V\":\n                        r[1] = +pa[1] + y;\n                        break;\n                    case \"H\":\n                        r[1] = +pa[1] + x;\n                        break;\n                    case \"R\":\n                        var dots = [x, y].concat(pa.slice(1));\n                        for (var j = 2, jj = dots.length; j < jj; j++) {\n                            dots[j] = +dots[j] + x;\n                            dots[++j] = +dots[j] + y;\n                        }\n                        res.pop();\n                        res = res.concat(catmullRom2bezier(dots, crz));\n                        break;\n                    case \"O\":\n                        res.pop();\n                        dots = ellipsePath(x, y, pa[1], pa[2]);\n                        dots.push(dots[0]);\n                        res = res.concat(dots);\n                        break;\n                    case \"U\":\n                        res.pop();\n                        res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n                        r = [\"U\"].concat(res[res.length - 1].slice(-2));\n                        break;\n                    case \"M\":\n                        mx = +pa[1] + x;\n                        my = +pa[2] + y;\n                    default:\n                        for (j = 1, jj = pa.length; j < jj; j++) {\n                            r[j] = +pa[j] + (j % 2 ? x : y);\n                        }\n                }\n            } else if (pa0 == \"R\") {\n                dots = [x, y].concat(pa.slice(1));\n                res.pop();\n                res = res.concat(catmullRom2bezier(dots, crz));\n                r = [\"R\"].concat(pa.slice(-2));\n            } else if (pa0 == \"O\") {\n                res.pop();\n                dots = ellipsePath(x, y, pa[1], pa[2]);\n                dots.push(dots[0]);\n                res = res.concat(dots);\n            } else if (pa0 == \"U\") {\n                res.pop();\n                res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n                r = [\"U\"].concat(res[res.length - 1].slice(-2));\n            } else {\n                for (var k = 0, kk = pa.length; k < kk; k++) {\n                    r[k] = pa[k];\n                }\n            }\n            pa0 = pa0.toUpperCase();\n            if (pa0 != \"O\") {\n                switch (r[0]) {\n                    case \"Z\":\n                        x = +mx;\n                        y = +my;\n                        break;\n                    case \"H\":\n                        x = r[1];\n                        break;\n                    case \"V\":\n                        y = r[1];\n                        break;\n                    case \"M\":\n                        mx = r[r.length - 2];\n                        my = r[r.length - 1];\n                    default:\n                        x = r[r.length - 2];\n                        y = r[r.length - 1];\n                }\n            }\n        }\n        res.toString = toString;\n        pth.abs = pathClone(res);\n        return res;\n    }\n    function l2c(x1, y1, x2, y2) {\n        return [x1, y1, x2, y2, x2, y2];\n    }\n    function q2c(x1, y1, ax, ay, x2, y2) {\n        var _13 = 1 / 3,\n            _23 = 2 / 3;\n        return [\n                _13 * x1 + _23 * ax,\n                _13 * y1 + _23 * ay,\n                _13 * x2 + _23 * ax,\n                _13 * y2 + _23 * ay,\n                x2,\n                y2\n            ];\n    }\n    function a2c(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n        // for more information of where this math came from visit:\n        // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n        var _120 = PI * 120 / 180,\n            rad = PI / 180 * (+angle || 0),\n            res = [],\n            xy,\n            rotate = Snap._.cacher(function (x, y, rad) {\n                var X = x * math.cos(rad) - y * math.sin(rad),\n                    Y = x * math.sin(rad) + y * math.cos(rad);\n                return {x: X, y: Y};\n            });\n        if (!rx || !ry) {\n            return [x1, y1, x2, y2, x2, y2];\n        }\n        if (!recursive) {\n            xy = rotate(x1, y1, -rad);\n            x1 = xy.x;\n            y1 = xy.y;\n            xy = rotate(x2, y2, -rad);\n            x2 = xy.x;\n            y2 = xy.y;\n            var cos = math.cos(PI / 180 * angle),\n                sin = math.sin(PI / 180 * angle),\n                x = (x1 - x2) / 2,\n                y = (y1 - y2) / 2;\n            var h = x * x / (rx * rx) + y * y / (ry * ry);\n            if (h > 1) {\n                h = math.sqrt(h);\n                rx = h * rx;\n                ry = h * ry;\n            }\n            var rx2 = rx * rx,\n                ry2 = ry * ry,\n                k = (large_arc_flag == sweep_flag ? -1 : 1) *\n                    math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\n                cx = k * rx * y / ry + (x1 + x2) / 2,\n                cy = k * -ry * x / rx + (y1 + y2) / 2,\n                f1 = math.asin(((y1 - cy) / ry).toFixed(9)),\n                f2 = math.asin(((y2 - cy) / ry).toFixed(9));\n\n            f1 = x1 < cx ? PI - f1 : f1;\n            f2 = x2 < cx ? PI - f2 : f2;\n            f1 < 0 && (f1 = PI * 2 + f1);\n            f2 < 0 && (f2 = PI * 2 + f2);\n            if (sweep_flag && f1 > f2) {\n                f1 = f1 - PI * 2;\n            }\n            if (!sweep_flag && f2 > f1) {\n                f2 = f2 - PI * 2;\n            }\n        } else {\n            f1 = recursive[0];\n            f2 = recursive[1];\n            cx = recursive[2];\n            cy = recursive[3];\n        }\n        var df = f2 - f1;\n        if (abs(df) > _120) {\n            var f2old = f2,\n                x2old = x2,\n                y2old = y2;\n            f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n            x2 = cx + rx * math.cos(f2);\n            y2 = cy + ry * math.sin(f2);\n            res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n        }\n        df = f2 - f1;\n        var c1 = math.cos(f1),\n            s1 = math.sin(f1),\n            c2 = math.cos(f2),\n            s2 = math.sin(f2),\n            t = math.tan(df / 4),\n            hx = 4 / 3 * rx * t,\n            hy = 4 / 3 * ry * t,\n            m1 = [x1, y1],\n            m2 = [x1 + hx * s1, y1 - hy * c1],\n            m3 = [x2 + hx * s2, y2 - hy * c2],\n            m4 = [x2, y2];\n        m2[0] = 2 * m1[0] - m2[0];\n        m2[1] = 2 * m1[1] - m2[1];\n        if (recursive) {\n            return [m2, m3, m4].concat(res);\n        } else {\n            res = [m2, m3, m4].concat(res).join().split(\",\");\n            var newres = [];\n            for (var i = 0, ii = res.length; i < ii; i++) {\n                newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n            }\n            return newres;\n        }\n    }\n    function findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n        var t1 = 1 - t;\n        return {\n            x: pow(t1, 3) * p1x + pow(t1, 2) * 3 * t * c1x + t1 * 3 * t * t * c2x + pow(t, 3) * p2x,\n            y: pow(t1, 3) * p1y + pow(t1, 2) * 3 * t * c1y + t1 * 3 * t * t * c2y + pow(t, 3) * p2y\n        };\n    }\n\n    // Returns bounding box of cubic bezier curve.\n    // Source: http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n    // Original version: NISHIO Hirokazu\n    // Modifications: https://github.com/timo22345\n    function curveDim(x0, y0, x1, y1, x2, y2, x3, y3) {\n        var tvalues = [],\n            bounds = [[], []],\n            a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n        for (var i = 0; i < 2; ++i) {\n            if (i == 0) {\n                b = 6 * x0 - 12 * x1 + 6 * x2;\n                a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n                c = 3 * x1 - 3 * x0;\n            } else {\n                b = 6 * y0 - 12 * y1 + 6 * y2;\n                a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n                c = 3 * y1 - 3 * y0;\n            }\n            if (abs(a) < 1e-12) {\n                if (abs(b) < 1e-12) {\n                    continue;\n                }\n                t = -c / b;\n                if (0 < t && t < 1) {\n                    tvalues.push(t);\n                }\n                continue;\n            }\n            b2ac = b * b - 4 * c * a;\n            sqrtb2ac = math.sqrt(b2ac);\n            if (b2ac < 0) {\n                continue;\n            }\n            t1 = (-b + sqrtb2ac) / (2 * a);\n            if (0 < t1 && t1 < 1) {\n                tvalues.push(t1);\n            }\n            t2 = (-b - sqrtb2ac) / (2 * a);\n            if (0 < t2 && t2 < 1) {\n                tvalues.push(t2);\n            }\n        }\n\n        var x, y, j = tvalues.length,\n            jlen = j,\n            mt;\n        while (j--) {\n            t = tvalues[j];\n            mt = 1 - t;\n            bounds[0][j] = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n            bounds[1][j] = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n        }\n\n        bounds[0][jlen] = x0;\n        bounds[1][jlen] = y0;\n        bounds[0][jlen + 1] = x3;\n        bounds[1][jlen + 1] = y3;\n        bounds[0].length = bounds[1].length = jlen + 2;\n\n\n        return {\n          min: {x: mmin.apply(0, bounds[0]), y: mmin.apply(0, bounds[1])},\n          max: {x: mmax.apply(0, bounds[0]), y: mmax.apply(0, bounds[1])}\n        };\n    }\n\n    function path2curve(path, path2) {\n        var pth = !path2 && paths(path);\n        if (!path2 && pth.curve) {\n            return pathClone(pth.curve);\n        }\n        var p = pathToAbsolute(path),\n            p2 = path2 && pathToAbsolute(path2),\n            attrs = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n            attrs2 = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n            processPath = function (path, d, pcom) {\n                var nx, ny;\n                if (!path) {\n                    return [\"C\", d.x, d.y, d.x, d.y, d.x, d.y];\n                }\n                !(path[0] in {T: 1, Q: 1}) && (d.qx = d.qy = null);\n                switch (path[0]) {\n                    case \"M\":\n                        d.X = path[1];\n                        d.Y = path[2];\n                        break;\n                    case \"A\":\n                        path = [\"C\"].concat(a2c.apply(0, [d.x, d.y].concat(path.slice(1))));\n                        break;\n                    case \"S\":\n                        if (pcom == \"C\" || pcom == \"S\") { // In \"S\" case we have to take into account, if the previous command is C/S.\n                            nx = d.x * 2 - d.bx;          // And reflect the previous\n                            ny = d.y * 2 - d.by;          // command's control point relative to the current point.\n                        }\n                        else {                            // or some else or nothing\n                            nx = d.x;\n                            ny = d.y;\n                        }\n                        path = [\"C\", nx, ny].concat(path.slice(1));\n                        break;\n                    case \"T\":\n                        if (pcom == \"Q\" || pcom == \"T\") { // In \"T\" case we have to take into account, if the previous command is Q/T.\n                            d.qx = d.x * 2 - d.qx;        // And make a reflection similar\n                            d.qy = d.y * 2 - d.qy;        // to case \"S\".\n                        }\n                        else {                            // or something else or nothing\n                            d.qx = d.x;\n                            d.qy = d.y;\n                        }\n                        path = [\"C\"].concat(q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n                        break;\n                    case \"Q\":\n                        d.qx = path[1];\n                        d.qy = path[2];\n                        path = [\"C\"].concat(q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\n                        break;\n                    case \"L\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, path[1], path[2]));\n                        break;\n                    case \"H\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, path[1], d.y));\n                        break;\n                    case \"V\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, d.x, path[1]));\n                        break;\n                    case \"Z\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, d.X, d.Y));\n                        break;\n                }\n                return path;\n            },\n            fixArc = function (pp, i) {\n                if (pp[i].length > 7) {\n                    pp[i].shift();\n                    var pi = pp[i];\n                    while (pi.length) {\n                        pcoms1[i] = \"A\"; // if created multiple C:s, their original seg is saved\n                        p2 && (pcoms2[i] = \"A\"); // the same as above\n                        pp.splice(i++, 0, [\"C\"].concat(pi.splice(0, 6)));\n                    }\n                    pp.splice(i, 1);\n                    ii = mmax(p.length, p2 && p2.length || 0);\n                }\n            },\n            fixM = function (path1, path2, a1, a2, i) {\n                if (path1 && path2 && path1[i][0] == \"M\" && path2[i][0] != \"M\") {\n                    path2.splice(i, 0, [\"M\", a2.x, a2.y]);\n                    a1.bx = 0;\n                    a1.by = 0;\n                    a1.x = path1[i][1];\n                    a1.y = path1[i][2];\n                    ii = mmax(p.length, p2 && p2.length || 0);\n                }\n            },\n            pcoms1 = [], // path commands of original path p\n            pcoms2 = [], // path commands of original path p2\n            pfirst = \"\", // temporary holder for original path command\n            pcom = \"\"; // holder for previous path command of original path\n        for (var i = 0, ii = mmax(p.length, p2 && p2.length || 0); i < ii; i++) {\n            p[i] && (pfirst = p[i][0]); // save current path command\n\n            if (pfirst != \"C\") // C is not saved yet, because it may be result of conversion\n            {\n                pcoms1[i] = pfirst; // Save current path command\n                i && ( pcom = pcoms1[i - 1]); // Get previous path command pcom\n            }\n            p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\n\n            if (pcoms1[i] != \"A\" && pfirst == \"C\") pcoms1[i] = \"C\"; // A is the only command\n            // which may produce multiple C:s\n            // so we have to make sure that C is also C in original path\n\n            fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n\n            if (p2) { // the same procedures is done to p2\n                p2[i] && (pfirst = p2[i][0]);\n                if (pfirst != \"C\") {\n                    pcoms2[i] = pfirst;\n                    i && (pcom = pcoms2[i - 1]);\n                }\n                p2[i] = processPath(p2[i], attrs2, pcom);\n\n                if (pcoms2[i] != \"A\" && pfirst == \"C\") {\n                    pcoms2[i] = \"C\";\n                }\n\n                fixArc(p2, i);\n            }\n            fixM(p, p2, attrs, attrs2, i);\n            fixM(p2, p, attrs2, attrs, i);\n            var seg = p[i],\n                seg2 = p2 && p2[i],\n                seglen = seg.length,\n                seg2len = p2 && seg2.length;\n            attrs.x = seg[seglen - 2];\n            attrs.y = seg[seglen - 1];\n            attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\n            attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\n            attrs2.bx = p2 && (toFloat(seg2[seg2len - 4]) || attrs2.x);\n            attrs2.by = p2 && (toFloat(seg2[seg2len - 3]) || attrs2.y);\n            attrs2.x = p2 && seg2[seg2len - 2];\n            attrs2.y = p2 && seg2[seg2len - 1];\n        }\n        if (!p2) {\n            pth.curve = pathClone(p);\n        }\n        return p2 ? [p, p2] : p;\n    }\n    function mapPath(path, matrix) {\n        if (!matrix) {\n            return path;\n        }\n        var x, y, i, j, ii, jj, pathi;\n        path = path2curve(path);\n        for (i = 0, ii = path.length; i < ii; i++) {\n            pathi = path[i];\n            for (j = 1, jj = pathi.length; j < jj; j += 2) {\n                x = matrix.x(pathi[j], pathi[j + 1]);\n                y = matrix.y(pathi[j], pathi[j + 1]);\n                pathi[j] = x;\n                pathi[j + 1] = y;\n            }\n        }\n        return path;\n    }\n\n    // http://schepers.cc/getting-to-the-point\n    function catmullRom2bezier(crp, z) {\n        var d = [];\n        for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n            var p = [\n                        {x: +crp[i - 2], y: +crp[i - 1]},\n                        {x: +crp[i],     y: +crp[i + 1]},\n                        {x: +crp[i + 2], y: +crp[i + 3]},\n                        {x: +crp[i + 4], y: +crp[i + 5]}\n                    ];\n            if (z) {\n                if (!i) {\n                    p[0] = {x: +crp[iLen - 2], y: +crp[iLen - 1]};\n                } else if (iLen - 4 == i) {\n                    p[3] = {x: +crp[0], y: +crp[1]};\n                } else if (iLen - 2 == i) {\n                    p[2] = {x: +crp[0], y: +crp[1]};\n                    p[3] = {x: +crp[2], y: +crp[3]};\n                }\n            } else {\n                if (iLen - 4 == i) {\n                    p[3] = p[2];\n                } else if (!i) {\n                    p[0] = {x: +crp[i], y: +crp[i + 1]};\n                }\n            }\n            d.push([\"C\",\n                  (-p[0].x + 6 * p[1].x + p[2].x) / 6,\n                  (-p[0].y + 6 * p[1].y + p[2].y) / 6,\n                  (p[1].x + 6 * p[2].x - p[3].x) / 6,\n                  (p[1].y + 6*p[2].y - p[3].y) / 6,\n                  p[2].x,\n                  p[2].y\n            ]);\n        }\n\n        return d;\n    }\n\n    // export\n    Snap.path = paths;\n\n    /*\\\n     * Snap.path.getTotalLength\n     [ method ]\n     **\n     * Returns the length of the given path in pixels\n     **\n     - path (string) SVG path string\n     **\n     = (number) length\n    \\*/\n    Snap.path.getTotalLength = getTotalLength;\n    /*\\\n     * Snap.path.getPointAtLength\n     [ method ]\n     **\n     * Returns the coordinates of the point located at the given length along the given path\n     **\n     - path (string) SVG path string\n     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate,\n     o     y: (number) y coordinate,\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    Snap.path.getPointAtLength = getPointAtLength;\n    /*\\\n     * Snap.path.getSubpath\n     [ method ]\n     **\n     * Returns the subpath of a given path between given start and end lengths\n     **\n     - path (string) SVG path string\n     - from (number) length, in pixels, from the start of the path to the start of the segment\n     - to (number) length, in pixels, from the start of the path to the end of the segment\n     **\n     = (string) path string definition for the segment\n    \\*/\n    Snap.path.getSubpath = function (path, from, to) {\n        if (this.getTotalLength(path) - to < 1e-6) {\n            return getSubpathsAtLength(path, from).end;\n        }\n        var a = getSubpathsAtLength(path, to, 1);\n        return from ? getSubpathsAtLength(a, from).end : a;\n    };\n    /*\\\n     * Element.getTotalLength\n     [ method ]\n     **\n     * Returns the length of the path in pixels (only works for `path` elements)\n     = (number) length\n    \\*/\n    elproto.getTotalLength = function () {\n        if (this.node.getTotalLength) {\n            return this.node.getTotalLength();\n        }\n    };\n    // SIERRA Element.getPointAtLength()/Element.getTotalLength(): If a <path> is broken into different segments, is the jump distance to the new coordinates set by the _M_ or _m_ commands calculated as part of the path's total length?\n    /*\\\n     * Element.getPointAtLength\n     [ method ]\n     **\n     * Returns coordinates of the point located at the given length on the given path (only works for `path` elements)\n     **\n     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate,\n     o     y: (number) y coordinate,\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    elproto.getPointAtLength = function (length) {\n        return getPointAtLength(this.attr(\"d\"), length);\n    };\n    // SIERRA Element.getSubpath(): Similar to the problem for Element.getPointAtLength(). Unclear how this would work for a segmented path. Overall, the concept of _subpath_ and what I'm calling a _segment_ (series of non-_M_ or _Z_ commands) is unclear.\n    /*\\\n     * Element.getSubpath\n     [ method ]\n     **\n     * Returns subpath of a given element from given start and end lengths (only works for `path` elements)\n     **\n     - from (number) length, in pixels, from the start of the path to the start of the segment\n     - to (number) length, in pixels, from the start of the path to the end of the segment\n     **\n     = (string) path string definition for the segment\n    \\*/\n    elproto.getSubpath = function (from, to) {\n        return Snap.path.getSubpath(this.attr(\"d\"), from, to);\n    };\n    Snap._.box = box;\n    /*\\\n     * Snap.path.findDotsAtSegment\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds dot coordinates on the given cubic beziér curve at the given t\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     - t (number) position on the curve (0..1)\n     = (object) point information in format:\n     o {\n     o     x: (number) x coordinate of the point,\n     o     y: (number) y coordinate of the point,\n     o     m: {\n     o         x: (number) x coordinate of the left anchor,\n     o         y: (number) y coordinate of the left anchor\n     o     },\n     o     n: {\n     o         x: (number) x coordinate of the right anchor,\n     o         y: (number) y coordinate of the right anchor\n     o     },\n     o     start: {\n     o         x: (number) x coordinate of the start of the curve,\n     o         y: (number) y coordinate of the start of the curve\n     o     },\n     o     end: {\n     o         x: (number) x coordinate of the end of the curve,\n     o         y: (number) y coordinate of the end of the curve\n     o     },\n     o     alpha: (number) angle of the curve derivative at the point\n     o }\n    \\*/\n    Snap.path.findDotsAtSegment = findDotsAtSegment;\n    /*\\\n     * Snap.path.bezierBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns the bounding box of a given cubic beziér curve\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     * or\n     - bez (array) array of six points for beziér curve\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box,\n     o     y: (number) y coordinate of the left top point of the box,\n     o     x2: (number) x coordinate of the right bottom point of the box,\n     o     y2: (number) y coordinate of the right bottom point of the box,\n     o     width: (number) width of the box,\n     o     height: (number) height of the box\n     o }\n    \\*/\n    Snap.path.bezierBBox = bezierBBox;\n    /*\\\n     * Snap.path.isPointInsideBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside bounding box\n     - bbox (string) bounding box\n     - x (string) x coordinate of the point\n     - y (string) y coordinate of the point\n     = (boolean) `true` if point is inside\n    \\*/\n    Snap.path.isPointInsideBBox = isPointInsideBBox;\n    Snap.closest = function (x, y, X, Y) {\n        var r = 100,\n            b = box(x - r / 2, y - r / 2, r, r),\n            inside = [],\n            getter = X[0].hasOwnProperty(\"x\") ? function (i) {\n                return {\n                    x: X[i].x,\n                    y: X[i].y\n                };\n            } : function (i) {\n                return {\n                    x: X[i],\n                    y: Y[i]\n                };\n            },\n            found = 0;\n        while (r <= 1e6 && !found) {\n            for (var i = 0, ii = X.length; i < ii; i++) {\n                var xy = getter(i);\n                if (isPointInsideBBox(b, xy.x, xy.y)) {\n                    found++;\n                    inside.push(xy);\n                    break;\n                }\n            }\n            if (!found) {\n                r *= 2;\n                b = box(x - r / 2, y - r / 2, r, r)\n            }\n        }\n        if (r == 1e6) {\n            return;\n        }\n        var len = Infinity,\n            res;\n        for (i = 0, ii = inside.length; i < ii; i++) {\n            var l = Snap.len(x, y, inside[i].x, inside[i].y);\n            if (len > l) {\n                len = l;\n                inside[i].len = l;\n                res = inside[i];\n            }\n        }\n        return res;\n    };\n    /*\\\n     * Snap.path.isBBoxIntersect\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if two bounding boxes intersect\n     - bbox1 (string) first bounding box\n     - bbox2 (string) second bounding box\n     = (boolean) `true` if bounding boxes intersect\n    \\*/\n    Snap.path.isBBoxIntersect = isBBoxIntersect;\n    /*\\\n     * Snap.path.intersection\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds intersections of two paths\n     - path1 (string) path string\n     - path2 (string) path string\n     = (array) dots of intersection\n     o [\n     o     {\n     o         x: (number) x coordinate of the point,\n     o         y: (number) y coordinate of the point,\n     o         t1: (number) t value for segment of path1,\n     o         t2: (number) t value for segment of path2,\n     o         segment1: (number) order number for segment of path1,\n     o         segment2: (number) order number for segment of path2,\n     o         bez1: (array) eight coordinates representing beziér curve for the segment of path1,\n     o         bez2: (array) eight coordinates representing beziér curve for the segment of path2\n     o     }\n     o ]\n    \\*/\n    Snap.path.intersection = pathIntersection;\n    Snap.path.intersectionNumber = pathIntersectionNumber;\n    /*\\\n     * Snap.path.isPointInside\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside a given closed path.\n     *\n     * Note: fill mode doesn’t affect the result of this method.\n     - path (string) path string\n     - x (number) x of the point\n     - y (number) y of the point\n     = (boolean) `true` if point is inside the path\n    \\*/\n    Snap.path.isPointInside = isPointInsidePath;\n    /*\\\n     * Snap.path.getBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns the bounding box of a given path\n     - path (string) path string\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box,\n     o     y: (number) y coordinate of the left top point of the box,\n     o     x2: (number) x coordinate of the right bottom point of the box,\n     o     y2: (number) y coordinate of the right bottom point of the box,\n     o     width: (number) width of the box,\n     o     height: (number) height of the box\n     o }\n    \\*/\n    Snap.path.getBBox = pathBBox;\n    Snap.path.get = getPath;\n    /*\\\n     * Snap.path.toRelative\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path coordinates into relative values\n     - path (string) path string\n     = (array) path string\n    \\*/\n    Snap.path.toRelative = pathToRelative;\n    /*\\\n     * Snap.path.toAbsolute\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path coordinates into absolute values\n     - path (string) path string\n     = (array) path string\n    \\*/\n    Snap.path.toAbsolute = pathToAbsolute;\n    /*\\\n     * Snap.path.toCubic\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path to a new path where all segments are cubic beziér curves\n     - pathString (string|array) path string or array of segments\n     = (array) array of segments\n    \\*/\n    Snap.path.toCubic = path2curve;\n    /*\\\n     * Snap.path.map\n     [ method ]\n     **\n     * Transform the path string with the given matrix\n     - path (string) path string\n     - matrix (object) see @Matrix\n     = (string) transformed path string\n    \\*/\n    Snap.path.map = mapPath;\n    Snap.path.toString = toString;\n    Snap.path.clone = pathClone;\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var mmax = Math.max,\n        mmin = Math.min;\n\n    // Set\n    var Set = function (items) {\n        this.items = [];\n\tthis.bindings = {};\n        this.length = 0;\n        this.type = \"set\";\n        if (items) {\n            for (var i = 0, ii = items.length; i < ii; i++) {\n                if (items[i]) {\n                    this[this.items.length] = this.items[this.items.length] = items[i];\n                    this.length++;\n                }\n            }\n        }\n    },\n    setproto = Set.prototype;\n    /*\\\n     * Set.push\n     [ method ]\n     **\n     * Adds each argument to the current set\n     = (object) original element\n    \\*/\n    setproto.push = function () {\n        var item,\n            len;\n        for (var i = 0, ii = arguments.length; i < ii; i++) {\n            item = arguments[i];\n            if (item) {\n                len = this.items.length;\n                this[len] = this.items[len] = item;\n                this.length++;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Set.pop\n     [ method ]\n     **\n     * Removes last element and returns it\n     = (object) element\n    \\*/\n    setproto.pop = function () {\n        this.length && delete this[this.length--];\n        return this.items.pop();\n    };\n    /*\\\n     * Set.forEach\n     [ method ]\n     **\n     * Executes given function for each element in the set\n     *\n     * If the function returns `false`, the loop stops running.\n     **\n     - callback (function) function to run\n     - thisArg (object) context object for the callback\n     = (object) Set object\n    \\*/\n    setproto.forEach = function (callback, thisArg) {\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            if (callback.call(thisArg, this.items[i], i) === false) {\n                return this;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Set.animate\n     [ method ]\n     **\n     * Animates each element in set in sync.\n     *\n     **\n     - attrs (object) key-value pairs of destination attributes\n     - duration (number) duration of the animation in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function that executes when the animation ends\n     * or\n     - animation (array) array of animation parameter for each element in set in format `[attrs, duration, easing, callback]`\n     > Usage\n     | // animate all elements in set to radius 10\n     | set.animate({r: 10}, 500, mina.easein);\n     | // or\n     | // animate first element to radius 10, but second to radius 20 and in different time\n     | set.animate([{r: 10}, 500, mina.easein], [{r: 20}, 1500, mina.easein]);\n     = (Element) the current element\n    \\*/\n    setproto.animate = function (attrs, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        if (attrs instanceof Snap._.Animation) {\n            callback = attrs.callback;\n            easing = attrs.easing;\n            ms = easing.dur;\n            attrs = attrs.attr;\n        }\n        var args = arguments;\n        if (Snap.is(attrs, \"array\") && Snap.is(args[args.length - 1], \"array\")) {\n            var each = true;\n        }\n        var begin,\n            handler = function () {\n                if (begin) {\n                    this.b = begin;\n                } else {\n                    begin = this.b;\n                }\n            },\n            cb = 0,\n            set = this,\n            callbacker = callback && function () {\n                if (++cb == set.length) {\n                    callback.call(this);\n                }\n            };\n        return this.forEach(function (el, i) {\n            eve.once(\"snap.animcreated.\" + el.id, handler);\n            if (each) {\n                args[i] && el.animate.apply(el, args[i]);\n            } else {\n                el.animate(attrs, ms, easing, callbacker);\n            }\n        });\n    };\n    /*\\\n     * Set.remove\n     [ method ]\n     **\n     * Removes all children of the set.\n     *\n     = (object) Set object\n    \\*/\n    setproto.remove = function () {\n        while (this.length) {\n            this.pop().remove();\n        }\n        return this;\n    };\n    /*\\\n     * Set.bind\n     [ method ]\n     **\n     * Specifies how to handle a specific attribute when applied\n     * to a set.\n     *\n     **\n     - attr (string) attribute name\n     - callback (function) function to run\n     * or\n     - attr (string) attribute name\n     - element (Element) specific element in the set to apply the attribute to\n     * or\n     - attr (string) attribute name\n     - element (Element) specific element in the set to apply the attribute to\n     - eattr (string) attribute on the element to bind the attribute to\n     = (object) Set object\n    \\*/\n    setproto.bind = function (attr, a, b) {\n        var data = {};\n        if (typeof a == \"function\") {\n            this.bindings[attr] = a;\n        } else {\n            var aname = b || attr;\n            this.bindings[attr] = function (v) {\n                data[aname] = v;\n                a.attr(data);\n            };\n        }\n        return this;\n    };\n    /*\\\n     * Set.attr\n     [ method ]\n     **\n     * Equivalent of @Element.attr.\n     = (object) Set object\n    \\*/\n    setproto.attr = function (value) {\n        var unbound = {};\n        for (var k in value) {\n            if (this.bindings[k]) {\n                this.bindings[k](value[k]);\n            } else {\n                unbound[k] = value[k];\n            }\n        }\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            this.items[i].attr(unbound);\n        }\n        return this;\n    };\n    /*\\\n     * Set.clear\n     [ method ]\n     **\n     * Removes all elements from the set\n    \\*/\n    setproto.clear = function () {\n        while (this.length) {\n            this.pop();\n        }\n    };\n    /*\\\n     * Set.splice\n     [ method ]\n     **\n     * Removes range of elements from the set\n     **\n     - index (number) position of the deletion\n     - count (number) number of element to remove\n     - insertion… (object) #optional elements to insert\n     = (object) set elements that were deleted\n    \\*/\n    setproto.splice = function (index, count, insertion) {\n        index = index < 0 ? mmax(this.length + index, 0) : index;\n        count = mmax(0, mmin(this.length - index, count));\n        var tail = [],\n            todel = [],\n            args = [],\n            i;\n        for (i = 2; i < arguments.length; i++) {\n            args.push(arguments[i]);\n        }\n        for (i = 0; i < count; i++) {\n            todel.push(this[index + i]);\n        }\n        for (; i < this.length - index; i++) {\n            tail.push(this[index + i]);\n        }\n        var arglen = args.length;\n        for (i = 0; i < arglen + tail.length; i++) {\n            this.items[index + i] = this[index + i] = i < arglen ? args[i] : tail[i - arglen];\n        }\n        i = this.items.length = this.length -= count - arglen;\n        while (this[i]) {\n            delete this[i++];\n        }\n        return new Set(todel);\n    };\n    /*\\\n     * Set.exclude\n     [ method ]\n     **\n     * Removes given element from the set\n     **\n     - element (object) element to remove\n     = (boolean) `true` if object was found and removed from the set\n    \\*/\n    setproto.exclude = function (el) {\n        for (var i = 0, ii = this.length; i < ii; i++) if (this[i] == el) {\n            this.splice(i, 1);\n            return true;\n        }\n        return false;\n    };\n    /*\\\n     * Set.insertAfter\n     [ method ]\n     **\n     * Inserts set elements after given element.\n     **\n     - element (object) set will be inserted after this element\n     = (object) Set object\n    \\*/\n    setproto.insertAfter = function (el) {\n        var i = this.items.length;\n        while (i--) {\n            this.items[i].insertAfter(el);\n        }\n        return this;\n    };\n    /*\\\n     * Set.getBBox\n     [ method ]\n     **\n     * Union of all bboxes of the set. See @Element.getBBox.\n     = (object) bounding box descriptor. See @Element.getBBox.\n    \\*/\n    setproto.getBBox = function () {\n        var x = [],\n            y = [],\n            x2 = [],\n            y2 = [];\n        for (var i = this.items.length; i--;) if (!this.items[i].removed) {\n            var box = this.items[i].getBBox();\n            x.push(box.x);\n            y.push(box.y);\n            x2.push(box.x + box.width);\n            y2.push(box.y + box.height);\n        }\n        x = mmin.apply(0, x);\n        y = mmin.apply(0, y);\n        x2 = mmax.apply(0, x2);\n        y2 = mmax.apply(0, y2);\n        return {\n            x: x,\n            y: y,\n            x2: x2,\n            y2: y2,\n            width: x2 - x,\n            height: y2 - y,\n            cx: x + (x2 - x) / 2,\n            cy: y + (y2 - y) / 2\n        };\n    };\n    /*\\\n     * Set.insertAfter\n     [ method ]\n     **\n     * Creates a clone of the set.\n     **\n     = (object) New Set object\n    \\*/\n    setproto.clone = function (s) {\n        s = new Set;\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            s.push(this.items[i].clone());\n        }\n        return s;\n    };\n    setproto.toString = function () {\n        return \"Snap\\u2018s set\";\n    };\n    setproto.type = \"set\";\n    // export\n    /*\\\n     * Snap.Set\n     [ property ]\n     **\n     * Set constructor.\n    \\*/\n    Snap.Set = Set;\n    /*\\\n     * Snap.set\n     [ method ]\n     **\n     * Creates a set and fills it with list of arguments.\n     **\n     = (object) New Set object\n     | var r = paper.rect(0, 0, 10, 10),\n     |     s1 = Snap.set(), // empty set\n     |     s2 = Snap.set(r, paper.circle(100, 100, 20)); // prefilled set\n    \\*/\n    Snap.set = function () {\n        var set = new Set;\n        if (arguments.length) {\n            set.push.apply(set, Array.prototype.slice.call(arguments, 0));\n        }\n        return set;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var names = {},\n        reUnit = /[%a-z]+$/i,\n        Str = String;\n    names.stroke = names.fill = \"colour\";\n    function getEmpty(item) {\n        var l = item[0];\n        switch (l.toLowerCase()) {\n            case \"t\": return [l, 0, 0];\n            case \"m\": return [l, 1, 0, 0, 1, 0, 0];\n            case \"r\": if (item.length == 4) {\n                return [l, 0, item[2], item[3]];\n            } else {\n                return [l, 0];\n            }\n            case \"s\": if (item.length == 5) {\n                return [l, 1, 1, item[3], item[4]];\n            } else if (item.length == 3) {\n                return [l, 1, 1];\n            } else {\n                return [l, 1];\n            }\n        }\n    }\n    function equaliseTransform(t1, t2, getBBox) {\n        t1 = t1 || new Snap.Matrix;\n        t2 = t2 || new Snap.Matrix;\n        t1 = Snap.parseTransformString(t1.toTransformString()) || [];\n        t2 = Snap.parseTransformString(t2.toTransformString()) || [];\n        var maxlength = Math.max(t1.length, t2.length),\n            from = [],\n            to = [],\n            i = 0, j, jj,\n            tt1, tt2;\n        for (; i < maxlength; i++) {\n            tt1 = t1[i] || getEmpty(t2[i]);\n            tt2 = t2[i] || getEmpty(tt1);\n            if (tt1[0] != tt2[0] ||\n                tt1[0].toLowerCase() == \"r\" && (tt1[2] != tt2[2] || tt1[3] != tt2[3]) ||\n                tt1[0].toLowerCase() == \"s\" && (tt1[3] != tt2[3] || tt1[4] != tt2[4])\n                ) {\n                    t1 = Snap._.transform2matrix(t1, getBBox());\n                    t2 = Snap._.transform2matrix(t2, getBBox());\n                    from = [[\"m\", t1.a, t1.b, t1.c, t1.d, t1.e, t1.f]];\n                    to = [[\"m\", t2.a, t2.b, t2.c, t2.d, t2.e, t2.f]];\n                    break;\n            }\n            from[i] = [];\n            to[i] = [];\n            for (j = 0, jj = Math.max(tt1.length, tt2.length); j < jj; j++) {\n                j in tt1 && (from[i][j] = tt1[j]);\n                j in tt2 && (to[i][j] = tt2[j]);\n            }\n        }\n        return {\n            from: path2array(from),\n            to: path2array(to),\n            f: getPath(from)\n        };\n    }\n    function getNumber(val) {\n        return val;\n    }\n    function getUnit(unit) {\n        return function (val) {\n            return +val.toFixed(3) + unit;\n        };\n    }\n    function getViewBox(val) {\n        return val.join(\" \");\n    }\n    function getColour(clr) {\n        return Snap.rgb(clr[0], clr[1], clr[2], clr[3]);\n    }\n    function getPath(path) {\n        var k = 0, i, ii, j, jj, out, a, b = [];\n        for (i = 0, ii = path.length; i < ii; i++) {\n            out = \"[\";\n            a = ['\"' + path[i][0] + '\"'];\n            for (j = 1, jj = path[i].length; j < jj; j++) {\n                a[j] = \"val[\" + k++ + \"]\";\n            }\n            out += a + \"]\";\n            b[i] = out;\n        }\n        return Function(\"val\", \"return Snap.path.toString.call([\" + b + \"])\");\n    }\n    function path2array(path) {\n        var out = [];\n        for (var i = 0, ii = path.length; i < ii; i++) {\n            for (var j = 1, jj = path[i].length; j < jj; j++) {\n                out.push(path[i][j]);\n            }\n        }\n        return out;\n    }\n    function isNumeric(obj) {\n        return isFinite(obj);\n    }\n    function arrayEqual(arr1, arr2) {\n        if (!Snap.is(arr1, \"array\") || !Snap.is(arr2, \"array\")) {\n            return false;\n        }\n        return arr1.toString() == arr2.toString();\n    }\n    Element.prototype.equal = function (name, b) {\n        return eve(\"snap.util.equal\", this, name, b).firstDefined();\n    };\n    eve.on(\"snap.util.equal\", function (name, b) {\n        var A, B, a = Str(this.attr(name) || \"\"),\n            el = this;\n        if (names[name] == \"colour\") {\n            A = Snap.color(a);\n            B = Snap.color(b);\n            return {\n                from: [A.r, A.g, A.b, A.opacity],\n                to: [B.r, B.g, B.b, B.opacity],\n                f: getColour\n            };\n        }\n        if (name == \"viewBox\") {\n            A = this.attr(name).vb.split(\" \").map(Number);\n            B = b.split(\" \").map(Number);\n            return {\n                from: A,\n                to: B,\n                f: getViewBox\n            };\n        }\n        if (name == \"transform\" || name == \"gradientTransform\" || name == \"patternTransform\") {\n            if (typeof b == \"string\") {\n                b = Str(b).replace(/\\.{3}|\\u2026/g, a);\n            }\n            a = this.matrix;\n            if (!Snap._.rgTransform.test(b)) {\n                b = Snap._.transform2matrix(Snap._.svgTransform2string(b), this.getBBox());\n            } else {\n                b = Snap._.transform2matrix(b, this.getBBox());\n            }\n            return equaliseTransform(a, b, function () {\n                return el.getBBox(1);\n            });\n        }\n        if (name == \"d\" || name == \"path\") {\n            A = Snap.path.toCubic(a, b);\n            return {\n                from: path2array(A[0]),\n                to: path2array(A[1]),\n                f: getPath(A[0])\n            };\n        }\n        if (name == \"points\") {\n            A = Str(a).split(Snap._.separator);\n            B = Str(b).split(Snap._.separator);\n            return {\n                from: A,\n                to: B,\n                f: function (val) { return val; }\n            };\n        }\n        if (isNumeric(a) && isNumeric(b)) {\n            return {\n                from: parseFloat(a),\n                to: parseFloat(b),\n                f: getNumber\n            };\n        }\n        var aUnit = a.match(reUnit),\n            bUnit = Str(b).match(reUnit);\n        if (aUnit && arrayEqual(aUnit, bUnit)) {\n            return {\n                from: parseFloat(a),\n                to: parseFloat(b),\n                f: getUnit(aUnit)\n            };\n        } else {\n            return {\n                from: this.asPX(name),\n                to: this.asPX(name, b),\n                f: getNumber\n            };\n        }\n    });\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n    has = \"hasOwnProperty\",\n    supportsTouch = \"createTouch\" in glob.doc,\n    events = [\n        \"click\", \"dblclick\", \"mousedown\", \"mousemove\", \"mouseout\",\n        \"mouseover\", \"mouseup\", \"touchstart\", \"touchmove\", \"touchend\",\n        \"touchcancel\"\n    ],\n    touchMap = {\n        mousedown: \"touchstart\",\n        mousemove: \"touchmove\",\n        mouseup: \"touchend\"\n    },\n    getScroll = function (xy, el) {\n        var name = xy == \"y\" ? \"scrollTop\" : \"scrollLeft\",\n            doc = el && el.node ? el.node.ownerDocument : glob.doc;\n        return doc[name in doc.documentElement ? \"documentElement\" : \"body\"][name];\n    },\n    preventDefault = function () {\n        this.returnValue = false;\n    },\n    preventTouch = function () {\n        return this.originalEvent.preventDefault();\n    },\n    stopPropagation = function () {\n        this.cancelBubble = true;\n    },\n    stopTouch = function () {\n        return this.originalEvent.stopPropagation();\n    },\n    addEvent = function (obj, type, fn, element) {\n        var realName = supportsTouch && touchMap[type] ? touchMap[type] : type,\n            f = function (e) {\n                var scrollY = getScroll(\"y\", element),\n                    scrollX = getScroll(\"x\", element);\n                if (supportsTouch && touchMap[has](type)) {\n                    for (var i = 0, ii = e.targetTouches && e.targetTouches.length; i < ii; i++) {\n                        if (e.targetTouches[i].target == obj || obj.contains(e.targetTouches[i].target)) {\n                            var olde = e;\n                            e = e.targetTouches[i];\n                            e.originalEvent = olde;\n                            e.preventDefault = preventTouch;\n                            e.stopPropagation = stopTouch;\n                            break;\n                        }\n                    }\n                }\n                var x = e.clientX + scrollX,\n                    y = e.clientY + scrollY;\n                return fn.call(element, e, x, y);\n            };\n\n        if (type !== realName) {\n            obj.addEventListener(type, f, false);\n        }\n\n        obj.addEventListener(realName, f, false);\n\n        return function () {\n            if (type !== realName) {\n                obj.removeEventListener(type, f, false);\n            }\n\n            obj.removeEventListener(realName, f, false);\n            return true;\n        };\n    },\n    drag = [],\n    dragMove = function (e) {\n        var x = e.clientX,\n            y = e.clientY,\n            scrollY = getScroll(\"y\"),\n            scrollX = getScroll(\"x\"),\n            dragi,\n            j = drag.length;\n        while (j--) {\n            dragi = drag[j];\n            if (supportsTouch) {\n                var i = e.touches && e.touches.length,\n                    touch;\n                while (i--) {\n                    touch = e.touches[i];\n                    if (touch.identifier == dragi.el._drag.id || dragi.el.node.contains(touch.target)) {\n                        x = touch.clientX;\n                        y = touch.clientY;\n                        (e.originalEvent ? e.originalEvent : e).preventDefault();\n                        break;\n                    }\n                }\n            } else {\n                e.preventDefault();\n            }\n            var node = dragi.el.node,\n                o,\n                next = node.nextSibling,\n                parent = node.parentNode,\n                display = node.style.display;\n            // glob.win.opera && parent.removeChild(node);\n            // node.style.display = \"none\";\n            // o = dragi.el.paper.getElementByPoint(x, y);\n            // node.style.display = display;\n            // glob.win.opera && (next ? parent.insertBefore(node, next) : parent.appendChild(node));\n            // o && eve(\"snap.drag.over.\" + dragi.el.id, dragi.el, o);\n            x += scrollX;\n            y += scrollY;\n            eve(\"snap.drag.move.\" + dragi.el.id, dragi.move_scope || dragi.el, x - dragi.el._drag.x, y - dragi.el._drag.y, x, y, e);\n        }\n    },\n    dragUp = function (e) {\n        Snap.unmousemove(dragMove).unmouseup(dragUp);\n        var i = drag.length,\n            dragi;\n        while (i--) {\n            dragi = drag[i];\n            dragi.el._drag = {};\n            eve(\"snap.drag.end.\" + dragi.el.id, dragi.end_scope || dragi.start_scope || dragi.move_scope || dragi.el, e);\n            eve.off(\"snap.drag.*.\" + dragi.el.id);\n        }\n        drag = [];\n    };\n    /*\\\n     * Element.click\n     [ method ]\n     **\n     * Adds a click event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unclick\n     [ method ]\n     **\n     * Removes a click event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.dblclick\n     [ method ]\n     **\n     * Adds a double click event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.undblclick\n     [ method ]\n     **\n     * Removes a double click event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mousedown\n     [ method ]\n     **\n     * Adds a mousedown event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousedown\n     [ method ]\n     **\n     * Removes a mousedown event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mousemove\n     [ method ]\n     **\n     * Adds a mousemove event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousemove\n     [ method ]\n     **\n     * Removes a mousemove event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseout\n     [ method ]\n     **\n     * Adds a mouseout event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseout\n     [ method ]\n     **\n     * Removes a mouseout event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseover\n     [ method ]\n     **\n     * Adds a mouseover event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseover\n     [ method ]\n     **\n     * Removes a mouseover event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseup\n     [ method ]\n     **\n     * Adds a mouseup event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseup\n     [ method ]\n     **\n     * Removes a mouseup event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchstart\n     [ method ]\n     **\n     * Adds a touchstart event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchstart\n     [ method ]\n     **\n     * Removes a touchstart event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchmove\n     [ method ]\n     **\n     * Adds a touchmove event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchmove\n     [ method ]\n     **\n     * Removes a touchmove event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchend\n     [ method ]\n     **\n     * Adds a touchend event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchend\n     [ method ]\n     **\n     * Removes a touchend event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchcancel\n     [ method ]\n     **\n     * Adds a touchcancel event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchcancel\n     [ method ]\n     **\n     * Removes a touchcancel event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    for (var i = events.length; i--;) {\n        (function (eventName) {\n            Snap[eventName] = elproto[eventName] = function (fn, scope) {\n                if (Snap.is(fn, \"function\")) {\n                    this.events = this.events || [];\n                    this.events.push({\n                        name: eventName,\n                        f: fn,\n                        unbind: addEvent(this.node || document, eventName, fn, scope || this)\n                    });\n                } else {\n                    for (var i = 0, ii = this.events.length; i < ii; i++) if (this.events[i].name == eventName) {\n                        try {\n                            this.events[i].f.call(this);\n                        } catch (e) {}\n                    }\n                }\n                return this;\n            };\n            Snap[\"un\" + eventName] =\n            elproto[\"un\" + eventName] = function (fn) {\n                var events = this.events || [],\n                    l = events.length;\n                while (l--) if (events[l].name == eventName &&\n                               (events[l].f == fn || !fn)) {\n                    events[l].unbind();\n                    events.splice(l, 1);\n                    !events.length && delete this.events;\n                    return this;\n                }\n                return this;\n            };\n        })(events[i]);\n    }\n    /*\\\n     * Element.hover\n     [ method ]\n     **\n     * Adds hover event handlers to the element\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     - icontext (object) #optional context for hover in handler\n     - ocontext (object) #optional context for hover out handler\n     = (object) @Element\n    \\*/\n    elproto.hover = function (f_in, f_out, scope_in, scope_out) {\n        return this.mouseover(f_in, scope_in).mouseout(f_out, scope_out || scope_in);\n    };\n    /*\\\n     * Element.unhover\n     [ method ]\n     **\n     * Removes hover event handlers from the element\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     = (object) @Element\n    \\*/\n    elproto.unhover = function (f_in, f_out) {\n        return this.unmouseover(f_in).unmouseout(f_out);\n    };\n    var draggable = [];\n    // SIERRA unclear what _context_ refers to for starting, ending, moving the drag gesture.\n    // SIERRA Element.drag(): _x position of the mouse_: Where are the x/y values offset from?\n    // SIERRA Element.drag(): much of this member's doc appears to be duplicated for some reason.\n    // SIERRA Unclear about this sentence: _Additionally following drag events will be triggered: drag.start.<id> on start, drag.end.<id> on end and drag.move.<id> on every move._ Is there a global _drag_ object to which you can assign handlers keyed by an element's ID?\n    /*\\\n     * Element.drag\n     [ method ]\n     **\n     * Adds event handlers for an element's drag gesture\n     **\n     - onmove (function) handler for moving\n     - onstart (function) handler for drag start\n     - onend (function) handler for drag end\n     - mcontext (object) #optional context for moving handler\n     - scontext (object) #optional context for drag start handler\n     - econtext (object) #optional context for drag end handler\n     * Additionaly following `drag` events are triggered: `drag.start.<id>` on start, \n     * `drag.end.<id>` on end and `drag.move.<id>` on every move. When element is dragged over another element \n     * `drag.over.<id>` fires as well.\n     *\n     * Start event and start handler are called in specified context or in context of the element with following parameters:\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * Move event and move handler are called in specified context or in context of the element with following parameters:\n     o dx (number) shift by x from the start point\n     o dy (number) shift by y from the start point\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * End event and end handler are called in specified context or in context of the element with following parameters:\n     o event (object) DOM event object\n     = (object) @Element\n    \\*/\n    elproto.drag = function (onmove, onstart, onend, move_scope, start_scope, end_scope) {\n        var el = this;\n        if (!arguments.length) {\n            var origTransform;\n            return el.drag(function (dx, dy) {\n                this.attr({\n                    transform: origTransform + (origTransform ? \"T\" : \"t\") + [dx, dy]\n                });\n            }, function () {\n                origTransform = this.transform().local;\n            });\n        }\n        function start(e, x, y) {\n            (e.originalEvent || e).preventDefault();\n            el._drag.x = x;\n            el._drag.y = y;\n            el._drag.id = e.identifier;\n            !drag.length && Snap.mousemove(dragMove).mouseup(dragUp);\n            drag.push({el: el, move_scope: move_scope, start_scope: start_scope, end_scope: end_scope});\n            onstart && eve.on(\"snap.drag.start.\" + el.id, onstart);\n            onmove && eve.on(\"snap.drag.move.\" + el.id, onmove);\n            onend && eve.on(\"snap.drag.end.\" + el.id, onend);\n            eve(\"snap.drag.start.\" + el.id, start_scope || move_scope || el, x, y, e);\n        }\n        function init(e, x, y) {\n            eve(\"snap.draginit.\" + el.id, el, e, x, y);\n        }\n        eve.on(\"snap.draginit.\" + el.id, start);\n        el._drag = {};\n        draggable.push({el: el, start: start, init: init});\n        el.mousedown(init);\n        return el;\n    };\n    /*\n     * Element.onDragOver\n     [ method ]\n     **\n     * Shortcut to assign event handler for `drag.over.<id>` event, where `id` is the element's `id` (see @Element.id)\n     - f (function) handler for event, first argument would be the element you are dragging over\n    \\*/\n    // elproto.onDragOver = function (f) {\n    //     f ? eve.on(\"snap.drag.over.\" + this.id, f) : eve.unbind(\"snap.drag.over.\" + this.id);\n    // };\n    /*\\\n     * Element.undrag\n     [ method ]\n     **\n     * Removes all drag event handlers from the given element\n    \\*/\n    elproto.undrag = function () {\n        var i = draggable.length;\n        while (i--) if (draggable[i].el == this) {\n            this.unmousedown(draggable[i].init);\n            draggable.splice(i, 1);\n            eve.unbind(\"snap.drag.*.\" + this.id);\n            eve.unbind(\"snap.draginit.\" + this.id);\n        }\n        !draggable.length && Snap.unmousemove(dragMove).unmouseup(dragUp);\n        return this;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n        pproto = Paper.prototype,\n        rgurl = /^\\s*url\\((.+)\\)/,\n        Str = String,\n        $ = Snap._.$;\n    Snap.filter = {};\n    /*\\\n     * Paper.filter\n     [ method ]\n     **\n     * Creates a `<filter>` element\n     **\n     - filstr (string) SVG fragment of filter provided as a string\n     = (object) @Element\n     * Note: It is recommended to use filters embedded into the page inside an empty SVG element.\n     > Usage\n     | var f = paper.filter('<feGaussianBlur stdDeviation=\"2\"/>'),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    pproto.filter = function (filstr) {\n        var paper = this;\n        if (paper.type != \"svg\") {\n            paper = paper.paper;\n        }\n        var f = Snap.parse(Str(filstr)),\n            id = Snap._.id(),\n            width = paper.node.offsetWidth,\n            height = paper.node.offsetHeight,\n            filter = $(\"filter\");\n        $(filter, {\n            id: id,\n            filterUnits: \"userSpaceOnUse\"\n        });\n        filter.appendChild(f.node);\n        paper.defs.appendChild(filter);\n        return new Element(filter);\n    };\n\n    eve.on(\"snap.util.getattr.filter\", function () {\n        eve.stop();\n        var p = $(this.node, \"filter\");\n        if (p) {\n            var match = Str(p).match(rgurl);\n            return match && Snap.select(match[1]);\n        }\n    });\n    eve.on(\"snap.util.attr.filter\", function (value) {\n        if (value instanceof Element && value.type == \"filter\") {\n            eve.stop();\n            var id = value.node.id;\n            if (!id) {\n                $(value.node, {id: value.id});\n                id = value.id;\n            }\n            $(this.node, {\n                filter: Snap.url(id)\n            });\n        }\n        if (!value || value == \"none\") {\n            eve.stop();\n            this.node.removeAttribute(\"filter\");\n        }\n    });\n    /*\\\n     * Snap.filter.blur\n     [ method ]\n     **\n     * Returns an SVG markup string for the blur filter\n     **\n     - x (number) amount of horizontal blur, in pixels\n     - y (number) #optional amount of vertical blur, in pixels\n     = (string) filter representation\n     > Usage\n     | var f = paper.filter(Snap.filter.blur(5, 10)),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    Snap.filter.blur = function (x, y) {\n        if (x == null) {\n            x = 2;\n        }\n        var def = y == null ? x : [x, y];\n        return Snap.format('\\<feGaussianBlur stdDeviation=\"{def}\"/>', {\n            def: def\n        });\n    };\n    Snap.filter.blur.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.shadow\n     [ method ]\n     **\n     * Returns an SVG markup string for the shadow filter\n     **\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - blur (number) #optional amount of blur\n     - color (string) #optional color of the shadow\n     - opacity (number) #optional `0..1` opacity of the shadow\n     * or\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - color (string) #optional color of the shadow\n     - opacity (number) #optional `0..1` opacity of the shadow\n     * which makes blur default to `4`. Or\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - opacity (number) #optional `0..1` opacity of the shadow\n     = (string) filter representation\n     > Usage\n     | var f = paper.filter(Snap.filter.shadow(0, 2, .3)),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    Snap.filter.shadow = function (dx, dy, blur, color, opacity) {\n        if (opacity == null) {\n            if (color == null) {\n                opacity = blur;\n                blur = 4;\n                color = \"#000\";\n            } else {\n                opacity = color;\n                color = blur;\n                blur = 4;\n            }\n        }\n        if (blur == null) {\n            blur = 4;\n        }\n        if (opacity == null) {\n            opacity = 1;\n        }\n        if (dx == null) {\n            dx = 0;\n            dy = 2;\n        }\n        if (dy == null) {\n            dy = dx;\n        }\n        color = Snap.color(color);\n        return Snap.format('<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"{blur}\"/><feOffset dx=\"{dx}\" dy=\"{dy}\" result=\"offsetblur\"/><feFlood flood-color=\"{color}\"/><feComposite in2=\"offsetblur\" operator=\"in\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"{opacity}\"/></feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge>', {\n            color: color,\n            dx: dx,\n            dy: dy,\n            blur: blur,\n            opacity: opacity\n        });\n    };\n    Snap.filter.shadow.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.grayscale\n     [ method ]\n     **\n     * Returns an SVG markup string for the grayscale filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.grayscale = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {b} {h} 0 0 0 0 0 1 0\"/>', {\n            a: 0.2126 + 0.7874 * (1 - amount),\n            b: 0.7152 - 0.7152 * (1 - amount),\n            c: 0.0722 - 0.0722 * (1 - amount),\n            d: 0.2126 - 0.2126 * (1 - amount),\n            e: 0.7152 + 0.2848 * (1 - amount),\n            f: 0.0722 - 0.0722 * (1 - amount),\n            g: 0.2126 - 0.2126 * (1 - amount),\n            h: 0.0722 + 0.9278 * (1 - amount)\n        });\n    };\n    Snap.filter.grayscale.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.sepia\n     [ method ]\n     **\n     * Returns an SVG markup string for the sepia filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.sepia = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {h} {i} 0 0 0 0 0 1 0\"/>', {\n            a: 0.393 + 0.607 * (1 - amount),\n            b: 0.769 - 0.769 * (1 - amount),\n            c: 0.189 - 0.189 * (1 - amount),\n            d: 0.349 - 0.349 * (1 - amount),\n            e: 0.686 + 0.314 * (1 - amount),\n            f: 0.168 - 0.168 * (1 - amount),\n            g: 0.272 - 0.272 * (1 - amount),\n            h: 0.534 - 0.534 * (1 - amount),\n            i: 0.131 + 0.869 * (1 - amount)\n        });\n    };\n    Snap.filter.sepia.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.saturate\n     [ method ]\n     **\n     * Returns an SVG markup string for the saturate filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.saturate = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"saturate\" values=\"{amount}\"/>', {\n            amount: 1 - amount\n        });\n    };\n    Snap.filter.saturate.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.hueRotate\n     [ method ]\n     **\n     * Returns an SVG markup string for the hue-rotate filter\n     **\n     - angle (number) angle of rotation\n     = (string) filter representation\n    \\*/\n    Snap.filter.hueRotate = function (angle) {\n        angle = angle || 0;\n        return Snap.format('<feColorMatrix type=\"hueRotate\" values=\"{angle}\"/>', {\n            angle: angle\n        });\n    };\n    Snap.filter.hueRotate.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.invert\n     [ method ]\n     **\n     * Returns an SVG markup string for the invert filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.invert = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n//        <feColorMatrix type=\"matrix\" values=\"-1 0 0 0 1  0 -1 0 0 1  0 0 -1 0 1  0 0 0 1 0\" color-interpolation-filters=\"sRGB\"/>\n        return Snap.format('<feComponentTransfer><feFuncR type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncG type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncB type=\"table\" tableValues=\"{amount} {amount2}\"/></feComponentTransfer>', {\n            amount: amount,\n            amount2: 1 - amount\n        });\n    };\n    Snap.filter.invert.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.brightness\n     [ method ]\n     **\n     * Returns an SVG markup string for the brightness filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.brightness = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\"/><feFuncG type=\"linear\" slope=\"{amount}\"/><feFuncB type=\"linear\" slope=\"{amount}\"/></feComponentTransfer>', {\n            amount: amount\n        });\n    };\n    Snap.filter.brightness.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.contrast\n     [ method ]\n     **\n     * Returns an SVG markup string for the contrast filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.contrast = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncG type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncB type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/></feComponentTransfer>', {\n            amount: amount,\n            amount2: .5 - amount / 2\n        });\n    };\n    Snap.filter.contrast.toString = function () {\n        return this();\n    };\n});\n\n// Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var box = Snap._.box,\n        is = Snap.is,\n        firstLetter = /^[^a-z]*([tbmlrc])/i,\n        toString = function () {\n            return \"T\" + this.dx + \",\" + this.dy;\n        };\n    /*\\\n     * Element.getAlign\n     [ method ]\n     **\n     * Returns shift needed to align the element relatively to given element.\n     * If no elements specified, parent `<svg>` container will be used.\n     - el (object) @optional alignment element\n     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n     = (object|string) Object in format `{dx: , dy: }` also has a string representation as a transformation string\n     > Usage\n     | el.transform(el.getAlign(el2, \"top\"));\n     * or\n     | var dy = el.getAlign(el2, \"top\").dy;\n    \\*/\n    Element.prototype.getAlign = function (el, way) {\n        if (way == null && is(el, \"string\")) {\n            way = el;\n            el = null;\n        }\n        el = el || this.paper;\n        var bx = el.getBBox ? el.getBBox() : box(el),\n            bb = this.getBBox(),\n            out = {};\n        way = way && way.match(firstLetter);\n        way = way ? way[1].toLowerCase() : \"c\";\n        switch (way) {\n            case \"t\":\n                out.dx = 0;\n                out.dy = bx.y - bb.y;\n            break;\n            case \"b\":\n                out.dx = 0;\n                out.dy = bx.y2 - bb.y2;\n            break;\n            case \"m\":\n                out.dx = 0;\n                out.dy = bx.cy - bb.cy;\n            break;\n            case \"l\":\n                out.dx = bx.x - bb.x;\n                out.dy = 0;\n            break;\n            case \"r\":\n                out.dx = bx.x2 - bb.x2;\n                out.dy = 0;\n            break;\n            default:\n                out.dx = bx.cx - bb.cx;\n                out.dy = 0;\n            break;\n        }\n        out.toString = toString;\n        return out;\n    };\n    /*\\\n     * Element.align\n     [ method ]\n     **\n     * Aligns the element relatively to given one via transformation.\n     * If no elements specified, parent `<svg>` container will be used.\n     - el (object) @optional alignment element\n     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n     = (object) this element\n     > Usage\n     | el.align(el2, \"top\");\n     * or\n     | el.align(\"middle\");\n    \\*/\n    Element.prototype.align = function (el, way) {\n        return this.transform(\"...\" + this.getAlign(el, way));\n    };\n});\n\n// Copyright (c) 2016 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        Str = String,\n        has = \"hasOwnProperty\";\n    function slice(from, to, f) {\n        return function (arr) {\n            var res = arr.slice(from, to);\n            if (res.length == 1) {\n                res = res[0];\n            }\n            return f ? f(res) : res;\n        };\n    }\n    var Animation = function (attr, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        this.attr = attr;\n        this.dur = ms;\n        easing && (this.easing = easing);\n        callback && (this.callback = callback);\n    };\n    Snap._.Animation = Animation;\n    /*\\\n     * Snap.animation\n     [ method ]\n     **\n     * Creates an animation object\n     **\n     - attr (object) attributes of final destination\n     - duration (number) duration of the animation, in milliseconds\n     - easing (function) #optional one of easing functions of @mina or custom one\n     - callback (function) #optional callback function that fires when animation ends\n     = (object) animation object\n    \\*/\n    Snap.animation = function (attr, ms, easing, callback) {\n        return new Animation(attr, ms, easing, callback);\n    };\n    /*\\\n     * Element.inAnim\n     [ method ]\n     **\n     * Returns a set of animations that may be able to manipulate the current element\n     **\n     = (object) in format:\n     o {\n     o     anim (object) animation object,\n     o     mina (object) @mina object,\n     o     curStatus (number) 0..1 — status of the animation: 0 — just started, 1 — just finished,\n     o     status (function) gets or sets the status of the animation,\n     o     stop (function) stops the animation\n     o }\n    \\*/\n    elproto.inAnim = function () {\n        var el = this,\n            res = [];\n        for (var id in el.anims) if (el.anims[has](id)) {\n            (function (a) {\n                res.push({\n                    anim: new Animation(a._attrs, a.dur, a.easing, a._callback),\n                    mina: a,\n                    curStatus: a.status(),\n                    status: function (val) {\n                        return a.status(val);\n                    },\n                    stop: function () {\n                        a.stop();\n                    }\n                });\n            }(el.anims[id]));\n        }\n        return res;\n    };\n    /*\\\n     * Snap.animate\n     [ method ]\n     **\n     * Runs generic animation of one number into another with a caring function\n     **\n     - from (number|array) number or array of numbers\n     - to (number|array) number or array of numbers\n     - setter (function) caring function that accepts one number argument\n     - duration (number) duration, in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function to execute when animation ends\n     = (object) animation object in @mina format\n     o {\n     o     id (string) animation id, consider it read-only,\n     o     duration (function) gets or sets the duration of the animation,\n     o     easing (function) easing,\n     o     speed (function) gets or sets the speed of the animation,\n     o     status (function) gets or sets the status of the animation,\n     o     stop (function) stops the animation\n     o }\n     | var rect = Snap().rect(0, 0, 10, 10);\n     | Snap.animate(0, 10, function (val) {\n     |     rect.attr({\n     |         x: val\n     |     });\n     | }, 1000);\n     | // in given context is equivalent to\n     | rect.animate({x: 10}, 1000);\n    \\*/\n    Snap.animate = function (from, to, setter, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        var now = mina.time(),\n            anim = mina(from, to, now, now + ms, mina.time, setter, easing);\n        callback && eve.once(\"mina.finish.\" + anim.id, callback);\n        return anim;\n    };\n    /*\\\n     * Element.stop\n     [ method ]\n     **\n     * Stops all the animations for the current element\n     **\n     = (Element) the current element\n    \\*/\n    elproto.stop = function () {\n        var anims = this.inAnim();\n        for (var i = 0, ii = anims.length; i < ii; i++) {\n            anims[i].stop();\n        }\n        return this;\n    };\n    /*\\\n     * Element.animate\n     [ method ]\n     **\n     * Animates the given attributes of the element\n     **\n     - attrs (object) key-value pairs of destination attributes\n     - duration (number) duration of the animation in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function that executes when the animation ends\n     = (Element) the current element\n    \\*/\n    elproto.animate = function (attrs, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        if (attrs instanceof Animation) {\n            callback = attrs.callback;\n            easing = attrs.easing;\n            ms = attrs.dur;\n            attrs = attrs.attr;\n        }\n        var fkeys = [], tkeys = [], keys = {}, from, to, f, eq,\n            el = this;\n        for (var key in attrs) if (attrs[has](key)) {\n            if (el.equal) {\n                eq = el.equal(key, Str(attrs[key]));\n                from = eq.from;\n                to = eq.to;\n                f = eq.f;\n            } else {\n                from = +el.attr(key);\n                to = +attrs[key];\n            }\n            var len = is(from, \"array\") ? from.length : 1;\n            keys[key] = slice(fkeys.length, fkeys.length + len, f);\n            fkeys = fkeys.concat(from);\n            tkeys = tkeys.concat(to);\n        }\n        var now = mina.time(),\n            anim = mina(fkeys, tkeys, now, now + ms, mina.time, function (val) {\n                var attr = {};\n                for (var key in keys) if (keys[has](key)) {\n                    attr[key] = keys[key](val);\n                }\n                el.attr(attr);\n            }, easing);\n        el.anims[anim.id] = anim;\n        anim._attrs = attrs;\n        anim._callback = callback;\n        eve(\"snap.animcreated.\" + el.id, anim);\n        eve.once(\"mina.finish.\" + anim.id, function () {\n            eve.off(\"mina.*.\" + anim.id);\n            delete el.anims[anim.id];\n            callback && callback.call(el);\n        });\n        eve.once(\"mina.stop.\" + anim.id, function () {\n            eve.off(\"mina.*.\" + anim.id);\n            delete el.anims[anim.id];\n        });\n        return el;\n    };\n});\n\n// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    // Colours are from https://www.materialui.co\n    var red         = \"#ffebee#ffcdd2#ef9a9a#e57373#ef5350#f44336#e53935#d32f2f#c62828#b71c1c#ff8a80#ff5252#ff1744#d50000\",\n        pink        = \"#FCE4EC#F8BBD0#F48FB1#F06292#EC407A#E91E63#D81B60#C2185B#AD1457#880E4F#FF80AB#FF4081#F50057#C51162\",\n        purple      = \"#F3E5F5#E1BEE7#CE93D8#BA68C8#AB47BC#9C27B0#8E24AA#7B1FA2#6A1B9A#4A148C#EA80FC#E040FB#D500F9#AA00FF\",\n        deeppurple  = \"#EDE7F6#D1C4E9#B39DDB#9575CD#7E57C2#673AB7#5E35B1#512DA8#4527A0#311B92#B388FF#7C4DFF#651FFF#6200EA\",\n        indigo      = \"#E8EAF6#C5CAE9#9FA8DA#7986CB#5C6BC0#3F51B5#3949AB#303F9F#283593#1A237E#8C9EFF#536DFE#3D5AFE#304FFE\",\n        blue        = \"#E3F2FD#BBDEFB#90CAF9#64B5F6#64B5F6#2196F3#1E88E5#1976D2#1565C0#0D47A1#82B1FF#448AFF#2979FF#2962FF\",\n        lightblue   = \"#E1F5FE#B3E5FC#81D4FA#4FC3F7#29B6F6#03A9F4#039BE5#0288D1#0277BD#01579B#80D8FF#40C4FF#00B0FF#0091EA\",\n        cyan        = \"#E0F7FA#B2EBF2#80DEEA#4DD0E1#26C6DA#00BCD4#00ACC1#0097A7#00838F#006064#84FFFF#18FFFF#00E5FF#00B8D4\",\n        teal        = \"#E0F2F1#B2DFDB#80CBC4#4DB6AC#26A69A#009688#00897B#00796B#00695C#004D40#A7FFEB#64FFDA#1DE9B6#00BFA5\",\n        green       = \"#E8F5E9#C8E6C9#A5D6A7#81C784#66BB6A#4CAF50#43A047#388E3C#2E7D32#1B5E20#B9F6CA#69F0AE#00E676#00C853\",\n        lightgreen  = \"#F1F8E9#DCEDC8#C5E1A5#AED581#9CCC65#8BC34A#7CB342#689F38#558B2F#33691E#CCFF90#B2FF59#76FF03#64DD17\",\n        lime        = \"#F9FBE7#F0F4C3#E6EE9C#DCE775#D4E157#CDDC39#C0CA33#AFB42B#9E9D24#827717#F4FF81#EEFF41#C6FF00#AEEA00\",\n        yellow      = \"#FFFDE7#FFF9C4#FFF59D#FFF176#FFEE58#FFEB3B#FDD835#FBC02D#F9A825#F57F17#FFFF8D#FFFF00#FFEA00#FFD600\",\n        amber       = \"#FFF8E1#FFECB3#FFE082#FFD54F#FFCA28#FFC107#FFB300#FFA000#FF8F00#FF6F00#FFE57F#FFD740#FFC400#FFAB00\",\n        orange      = \"#FFF3E0#FFE0B2#FFCC80#FFB74D#FFA726#FF9800#FB8C00#F57C00#EF6C00#E65100#FFD180#FFAB40#FF9100#FF6D00\",\n        deeporange  = \"#FBE9E7#FFCCBC#FFAB91#FF8A65#FF7043#FF5722#F4511E#E64A19#D84315#BF360C#FF9E80#FF6E40#FF3D00#DD2C00\",\n        brown       = \"#EFEBE9#D7CCC8#BCAAA4#A1887F#8D6E63#795548#6D4C41#5D4037#4E342E#3E2723\",\n        grey        = \"#FAFAFA#F5F5F5#EEEEEE#E0E0E0#BDBDBD#9E9E9E#757575#616161#424242#212121\",\n        bluegrey    = \"#ECEFF1#CFD8DC#B0BEC5#90A4AE#78909C#607D8B#546E7A#455A64#37474F#263238\";\n    /*\\\n     * Snap.mui\n     [ property ]\n     **\n     * Contain Material UI colours.\n     | Snap().rect(0, 0, 10, 10).attr({fill: Snap.mui.deeppurple, stroke: Snap.mui.amber[600]});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.mui = {};\n    /*\\\n     * Snap.flat\n     [ property ]\n     **\n     * Contain Flat UI colours.\n     | Snap().rect(0, 0, 10, 10).attr({fill: Snap.flat.carrot, stroke: Snap.flat.wetasphalt});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.flat = {};\n    function saveColor(colors) {\n        colors = colors.split(/(?=#)/);\n        var color = new String(colors[5]);\n        color[50] = colors[0];\n        color[100] = colors[1];\n        color[200] = colors[2];\n        color[300] = colors[3];\n        color[400] = colors[4];\n        color[500] = colors[5];\n        color[600] = colors[6];\n        color[700] = colors[7];\n        color[800] = colors[8];\n        color[900] = colors[9];\n        if (colors[10]) {\n            color.A100 = colors[10];\n            color.A200 = colors[11];\n            color.A400 = colors[12];\n            color.A700 = colors[13];\n        }\n        return color;\n    }\n    Snap.mui.red = saveColor(red);\n    Snap.mui.pink = saveColor(pink);\n    Snap.mui.purple = saveColor(purple);\n    Snap.mui.deeppurple = saveColor(deeppurple);\n    Snap.mui.indigo = saveColor(indigo);\n    Snap.mui.blue = saveColor(blue);\n    Snap.mui.lightblue = saveColor(lightblue);\n    Snap.mui.cyan = saveColor(cyan);\n    Snap.mui.teal = saveColor(teal);\n    Snap.mui.green = saveColor(green);\n    Snap.mui.lightgreen = saveColor(lightgreen);\n    Snap.mui.lime = saveColor(lime);\n    Snap.mui.yellow = saveColor(yellow);\n    Snap.mui.amber = saveColor(amber);\n    Snap.mui.orange = saveColor(orange);\n    Snap.mui.deeporange = saveColor(deeporange);\n    Snap.mui.brown = saveColor(brown);\n    Snap.mui.grey = saveColor(grey);\n    Snap.mui.bluegrey = saveColor(bluegrey);\n    Snap.flat.turquoise = \"#1abc9c\";\n    Snap.flat.greensea = \"#16a085\";\n    Snap.flat.sunflower = \"#f1c40f\";\n    Snap.flat.orange = \"#f39c12\";\n    Snap.flat.emerland = \"#2ecc71\";\n    Snap.flat.nephritis = \"#27ae60\";\n    Snap.flat.carrot = \"#e67e22\";\n    Snap.flat.pumpkin = \"#d35400\";\n    Snap.flat.peterriver = \"#3498db\";\n    Snap.flat.belizehole = \"#2980b9\";\n    Snap.flat.alizarin = \"#e74c3c\";\n    Snap.flat.pomegranate = \"#c0392b\";\n    Snap.flat.amethyst = \"#9b59b6\";\n    Snap.flat.wisteria = \"#8e44ad\";\n    Snap.flat.clouds = \"#ecf0f1\";\n    Snap.flat.silver = \"#bdc3c7\";\n    Snap.flat.wetasphalt = \"#34495e\";\n    Snap.flat.midnightblue = \"#2c3e50\";\n    Snap.flat.concrete = \"#95a5a6\";\n    Snap.flat.asbestos = \"#7f8c8d\";\n    /*\\\n     * Snap.importMUIColors\n     [ method ]\n     **\n     * Imports Material UI colours into global object.\n     | Snap.importMUIColors();\n     | Snap().rect(0, 0, 10, 10).attr({fill: deeppurple, stroke: amber[600]});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.importMUIColors = function () {\n        for (var color in Snap.mui) {\n            if (Snap.mui.hasOwnProperty(color)) {\n                window[color] = Snap.mui[color];\n            }\n        }\n    };\n});\n\nmodule.exports = Snap\n"]}}